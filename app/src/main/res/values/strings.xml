<resources>
    <string name="app_name">Java Made Easy</string>
    <string name="drawer_open">drawer open</string>
    <string name="drawer_close">drawer close</string>
    <string name="empty_text1">Please select a text</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="glossary_title">Glossary</string>
    <string name="lesson_title">Lessons</string>
    <string name="program_title">Programs</string>
    <string name="question_title2">Important Questions</string>
    <string name="quiz_title">Quiz</string>
    <string name="video_title">Video Tutorials</string>
    <string name="action_settings">Settings</string>
    <string name="exercise_title">Exercises</string>
    <string name="text_content">KAMOTE</string>
    <string name="context_menu">Context menu</string>
    <string name="action_day_night_yes">Night Mode</string>
    <string name="action_day_night_no">Day Mode</string>
    <string name="night">You have selected Day Mode</string>
    <string name="day">You have selected Night Mode</string>
    <string name="text_phone_has_no_browser">Settings</string>


    <string name="ex1"> <![CDATA[
      <h3 style="color:#FF4081;">Exercise 1.1</h3>
    <p style="text-align:justify;">
    Write a program that will print your initials to standard output in letters that are nine lines tall.
    Each big letter should be made up of a bunch of *. Save the class as  <b>Initial.java</b>.
    For example, if your initials were "DJE", then the output would look something like:</p>

      ]]>
</string>

    <string name="first_b">  <![CDATA[
       Write a program that prints number from 1 to 10 in vertical line. Save the class as  <b>PrintVertical.java</b>. ]]>
       </string>
    <string name="first_b2">  <![CDATA[
    Write a program that prints 1 to 100 in two dimension
    Save the class as <b>PrintTwoDimensions.java</b>. ]]>
    </string>
    <string name="first_b3"> <![CDATA[
     Write a program that prints 1 to 45 in two dimension. Save the class as <b>Print2Dimensions.java </string></b>. ]]></string>

    <string name="a1">  <![CDATA[
    Write a program that simulates rolling a pair of dice. You can simulate rolling one die by choosing one of the integers
    1, 2, 3, 4, 5, or 6 at random. The number you pick represents the number on
    the die after it is rolled. As pointed out in Section 2.5, The expression
    <i>(int)(Math.random()*6) + 1</i> does the computation you need to select a random integer between 1 and 6.
    You can assign this value to a variable to represent one of the dice that are being rolled.
    Do this twice and add the results together to get the total roll. Your program should report
    the number showing on each die as well as the total roll. Save the class as  <b>RollTheDice.java</b>.<br>For example:
      ]]></string>
    <string name="a2"> <![CDATA[
      Write a program that asks the user&rsquo;s name, and then greets the user by name. Before outputting the user&rsquo;s name, convert it to
      upper case letters. For example, if the user&rsquo;s name is
      James Russel, then the program should respond "Hello, JAMES RUSSEL, nice to meet you!".
          Save the class as <b>Greeting.java</b>.]]>
    </string>

    <string name="c1">  <![CDATA[
    Write a program that helps the user count his change. The program should ask how many quarters the user has,
    then how many dimes, then how many nickels, then how many pennies. Then the program should tell
    the user how much money he has, expressed in dollars.   Save the class as <b>CountChange.java</b>.
      ]]>
    </string>

    <string name="c2"> <![CDATA[
       If you have N eggs, then you have N/12 dozen eggs, with N12 eggs left over. (This is essentially the definition of the
       / and % operators for integers.) Write a program that asks the user how many eggs she has and then tells the user
       how many dozen eggs she has and how many extra eggs are left over.
A gross of eggs is equal to 144 eggs. Extend your program so that it will tell the user how many gross,
how many dozen, and how many left over eggs she has. For example,
if the user says that she has 1342 eggs, then your program would respond with
Your number of eggs is 9 gross, 3 dozen, and 10
since 1342 is equal to 9*144 + 3*12 + 10.
Save the class as <b>GrossAndDozens.java</b>.]]>
    </string>

    <string name="c3">  <![CDATA[
    To calculate average and percentage marks of a students, you have to ask to the user to enter marks obtained in some subjects (say 5). Place summation of 5 subject&rsquo;s marks in a variable say sum and place
    sum/5 in a variable say avg then place sum/500*100 in a variable say perc, then display the result on the output screen.
       Save the class as <b>AverageAndPercentage.java</b>.]]>
    </string>
    <string name="secondA">  <![CDATA[
        How many times do you have to roll a pair of dice before they come up snake eyes? You could do the experiment by rolling the dice by hand. Write a computer program that simulates the experiment. The program should report
        the number of rolls that it makes before the dice come up snake eyes.
         (Note: "Snake eyes" means that both dice show a value of 1.)
        Save the class as <b>SnakeEyes.java</b>.]]> </string>

    <string name="secondB">  <![CDATA[
      Write a program that reads a positive integer from the user.
 The program should counts how many divisors that number has, and  then it prints the result.
     Save the class as <b>CountDivisor.java</b>.]]>
    </string>
    <string name="secondc">  <![CDATA[
        Write a Java class that declares variables to represent the length and width of a room in feet and the price of carpeting
        per square foot in dollars and cents. Assign appropriate values to the variables. Compute and display, with explanatory text,
         the cost of carpeting the room. Save the class as <b>Carpet.java</b>.]]>
    </string>
    <string name="thirdA">  <![CDATA[
    Which integer between 1 and 10000 has the largest number of divisors, and how many divisors does it have? Write a program
     to find the answers and print out the results. It is possible that several integers in this range have the same,
      maximum number of divisors. Your program only has to print out one of them.
       The source code for that example is <b><i>CountDivisors.java</b></i>
        You might need some hints about how to find a maximum value. The basic idea is to go through all the integers,
        keeping track of the largest number of divisors that youve seen so far. Also, keep track of the integer that
        had that number of divisors. Save the class as <b>MostDivisor.java</b>.]]>
    </string>
    <string name="thirdB">  <![CDATA[
        Write a program that will evaluate simple expressions such as 17 + 3 and 3.14159 * 4.7. The expressions are to be typed in
         by the user. The input always consist of a number, followed by an operator, followed by another number. The operators that
         are allowed are +, -, *, and /. You can read the numbers with TextIO.getDouble() and the operator with TextIO.getChar().
         Your program should read an expression, print its value,
        read another expression, print its value, and so on. The program should end when the user enters 0 as the first number on
        the line.
        Save the class as <b>SimpleCalculator.java</b>.]]>
    </string>
    <string name="thirdC">  <![CDATA[
         Write a class that declares variables to hold your three initials. Display the three initials with a period
         following each one, as in J.M.F. Save the class as <b>Initials.java</b>.]]>
    </string>

    <string name="fourthA">  <![CDATA[
        Write a program that reads one line of input text and breaks it up into words. The words should be output one per line.\
         A word is defined to  be a sequence of letters. Any characters in the input that are not letters should be discarded.
          For example, if the user inputs the line I am handsome
         Save the class as <b>ListWordsInString.java.</b>.]]>
    </string>
    <string name="fourthB">  <![CDATA[
         Write a class that accepts a user’s hourly rate of pay and the number of hours worked.
          Display the user’s gross pay, the withholding tax (15percent of gross pay), and the net pay (gross pay – withholding).
           Save the class as <b>Payroll.java.</b>.]]>
    </string>
    <string name="fourthC"> <![CDATA[
        Write a class that calculates and displays the conversion of an entered number of dollars into
         currency denominations—20s, 10s, 5s, and 1s. Save the class as <b>Dollars.java</b>.]]>
    </string>

    <string name="b1"><![CDATA[
      To "capitalize" a string means to change the first letter of each word in the string to upper case
       (if it is not already upper case). For example, a capitalized version of "Now is the time to act!" is
        "hey i'm awesome!". Write a subroutine named printCapitalized that will print a capitalized version of a string to
        standard output. The string to be printed should be a parameter to the subroutine. Test your subroutine with
         a main() routine that gets a line of input from the user and applies the subroutine to it.
      Save the application as <b> CapitalizeOneString.java</b>.]]>
    </string>

    <string name="b2"><![CDATA[
     The hexadecimal digits are the ordinary, base-10 digits 0 through 9 plus the letters A through F.
     In the hexadecimal system, these digits represent the values 0 through 15, respectively. Write a function named
      hexValue that uses a switch statement to find the hexadecimal value of a given character. The character is a parameter
      to the function, and its hexadecimal value is the return value of the function. You should count lower case letters a
      through f as having the same value as the corresponding upper case letters. If the parameter i
      s not one of the legal hexadecimal digits, return -1 as the value of the function.
A hexadecimal integer is a sequence of hexadecimal digits, such as 34A7, FF8, 174204, or FADE.
        Save the application as <b>Hex2Dec.java</b>.]]>
    </string>
    <string name="b4"> <![CDATA[
       Write a function that simulates rolling a pair of dice until the total on the dice comes up to be a given number.
       The number that you are rolling for is a parameter to the function. The number of times you have to roll the dice is the return value of the function. The parameter should be one of the possible totals: 2, 3, ..., 12. The function should throw an IllegalArgumentException if this is not the case.
       Use your function in a program that computes and prints the number of rolls it takes to get snake eyes.
       (Snake eyes means that the total showing on the dice is 2.)
        50 eggs is 4 full dozen (with 2 eggs remaining).
        Save the application as  <b>RollFor2.java</b>.]]>
    </string>

    <string name="b5">
    </string>

    <string name="b6">
      <![CDATA[
       This exercise builds on Exercise 3.3. Every time you roll the dice repeatedly, trying to get a given total,
       the number of rolls it takes can be different. The importantQuestion naturally arises, whats the average number of rolls
        to get a given total? Write a function that performs the experiment of rolling to get a given total 10000 times.
         The desired total is a parameter to the subroutine. The average number of rolls is the return value. Each individual
         experiment should be done by calling the function you wrote for Exercise 4.3. Now, write a main program that will call
         your function once for each of the possible totals (2, 3, ..., 12).
         It should make a table of the results, something like:
        Save the application as <b>DiceRollStats.java</b>.]]>
    </string>

    <string name="b7"> <![CDATA[
         Create an application that contains a method that computes the final price for a sales transaction and returns
        that value to a calling method. The method requires three arguments: product price, salesperson commission rate,
        and customer discount rate. A product’s final price is the original price plus the commission amount minus
        the discount amount; the customer discount is taken as a percentage of the total price after the
        salespersoncommission has been addedto the original price. Write a main() method that prompts the
        user for the price of an item, the salesperson’s commission expressed as a percentage, and the customer
        discount expressed as a percentage,
        and that then passes the values to the method. Save the application as <b>Calculator.java</b>.]]>
    </string>

    <string name="b8"> <![CDATA[
         Write an application that displays the result of dividing two numbers and displays any remainder.
        The main() method prompts the user for values and sends them to the dividing method;
        the dividing method performs the calculation and displays the results. Save the application as <b>Divide.java</b>.]]>
    </string>

    <string name="b9"> <![CDATA[
         Writeanapplicationthatcalculatesanddisplaystheweeklysalaryforanemployee.The main() method prompts the user
        for an hourly pay rate, regular hours, and overtime hours.Createaseparatemethodtocalculateovertimepay,
        whichisregularhourstimes the pay rate plus overtime hours times 1.5 times the pay rate;
        return the result to the main() method to be displayed. Save the program as <b>Salary.java</b>.]]>
    </string>

    <string name="d1">  <![CDATA[
      In all versions of the PairOfDice class, the instance variables die1 and die2 are declared to be public.
      They really should be private, so that they would be protected from being changed from outside the class.
       Write another version of the PairOfDice class in which the instance variables die1 and die2 are private.
        Your class will need "getter" methods that can be used to find out the values of die1 and die2.
        (The idea is to protect their values from being changed from outside the class, but still to allow the values to be read.)
        Include other improvements in the class, if you can think of any. Test your class with a short program that counts
        how many times a pair of dice is rolled, before the total of the two dice is equal to two.
       Save the file as <b>PairOfDice.java</b>.]]>
    </string>

    <string name="d2">  <![CDATA[
        Add a third overloaded method to theCommission application you created in Exercise 1a. The third overloaded method takes
        a single parameter representing sales. When this method is called, the commission rate is assumed to be 7.5 percent, and
        the results are displayed. To test this method,add an appropriate call in the Commission program’s main() method.
        Save the application as <b>Commission2.java</b>.]]>
    </string>

    <string name="d3">  <![CDATA[
        Create a class named Household that includes data fields for the number of occupants and the annual income,
        as well as methods to get and set each field. In addition, create a default constructor that automatically sets
        the occupants field to 1 and theincome field to 0. Save this file as <b><u>Household.java</u></b>.
        Create an application named TestHousehold that demonstrates each method works correctly.
        Save the file as <b>TestHousehold.java</b>.]]>
    </string>

    <string name="d4"> <![CDATA[
        Create a class named Box thatincludesinteger data fields for length,width, and height.
        Create three constructors that require one, two, and three parameters, respectively.
        When one argument is passed to the constructor, assign it to length, assign zeros to height and width, and display
        \“Line created\”. When two arguments are used, assign themtolengthandwidth,assignzerotoheight,anddisplay \“Rectanglecreated\”.
        When threearguments are used, assignthemto the three variables and display “Box created”. Save this file as <b><u>Box.java</u></b>.
        Create an application named TestBox that demonstrate search method works correctly.
         Save the application as <b>TestBox.java</b>.]]>
    </string>

    <string name="d5"> <![CDATA[
         Create a class named Shirt with data fields forcollar size and sleeve length. Include a constructor
        that takes parameters for each field. Also include a final, static String named MATERIAL and initialize it to cotton.
        Write an application named TestShirt to instantiate three Shirt objects with different collar sizes and sleeve lengths, and
        then display
        all the data, including material, for each shirt. Save both the <b>Shirt.java</b> and <b>TestShirt.java files</b>.]]>
    </string>

    <string name="d6"> <![CDATA[
       Create a class named Circle with fields named radius, diameter, and area. Include a constructor that
        sets the radius to 1 and calculates the other two values. Also include methods named setRadius() and getRadius().
        The setRadius() method not only sets the radius, it also calculates the other two values.
        (The diameter of a circle is twice the radius, and the
        area of a circle is pi multiplied by the square of the radius.) Save the class as <b>Circle.java.</b>]]>
    </string>

    <string name="d7"> <![CDATA[
     Create a class named TestCircle whose main() method declares several Circle objects. Using the setRadius() method,
        assign one Circle a small radius value, and assign another a larger radius value. Do not assign a value to the radius
        of the third circle;instead, retain thevalue assigned atconstruction.
        Displayall the values for all the Circle objects. Save the application as <b>TestCircle.java</b>.]]>
    </string>

    <string name="d8"> <![CDATA[
         Write a Java application that uses the Math class to determine the answers for each of the following:<br>
          a. The square root of 30 <br> b. The sine and cosine of 100 <br> c. The value of the floor, ceiling, and round of 44.7 <br>
           d. The larger and the smaller of the character K and the integer 70 <br>
           e. A random number between 0 and 10 (Hint: The <b><i>random()</i></b> method returns a value between 0 and 1;
           you want a number that is 10 times larger.) Save the application as <b>MathTest.java</b>.]]>
    </string>

    <string name="d9">  <![CDATA[
         Write an application to calculate how many days it is from today until the first day of next summer
        (assume that this date is June 21). Save the file as <b>Summer.java</b>.]]>
    </string>


    <string name="e1">  <![CDATA[
         Write an application that prompts the user for a checking account balance and a savings account balance
        . Display the message “Checking account balance is low” if the checking account balance is less than 10dollars.
        Display the message \“Savings account balance is low\”
        if the savings account balance is less than 100 dollars. Save the file as <b>Balance.java</b>.]]>
    </string>

    <string name="e2">  <![CDATA[
        Modify the application in Exercise 1a to display an additional message, "Both accounts are dangerously low”,
        if both fall below the specified limits. Save the file as <b>Balance2.java</b>.]]>
    </string>

    <string name="e3">  <![CDATA[
        Write an application for a furniture company; the program determines the price of a table.
        Ask the user to choose 1 for pine, 2 for oak, or 3 for mahogany. The output is the name of the wood chosen as
        well as the price of the table. Pine tables cost 100 dollars, oak tables cost 225 dollars, and mahogany tables cost 310 dollars.
        If the user enters an invalid wood code, set the price to 0. Save the file as <b>Furniture.java</b>.]]>
    </string>

    <string name="e4"> <![CDATA[
         Add a prompt to the application you wrote in Exercise 5.3 to ask the user to specify a (1) large table or a
        (2) small table, but only if the wood selection is valid. Add 35 dollars to the price of any large table, and add nothing to
        the price for a small table. Display an appropriate message if
        the size value is invalid, and assume the price is for a small table. Save the file as <b>Furniture2.java</b>.]]>
    </string>

    <string name="e5"> <![CDATA[
         Write an application for a college&rsquo;s admissions office. Prompt the user for a glossaryDescription’s numeric high
         school grade point average (for example, 3.2) and an admission test score from 0 to 100.
        Display the message \“Accept\” if the glossaryDescription has any of the following: <br>
        &bull; A grade point average of 3.0 or above and an admission test score of at least 60 <br>
        &bull; A grade point average below 3.0 and an admission test score of at least 80 <br>
        If the glossaryDescription does not meet either of the qualification criteria, display \“Reject\”.
        Save the file as <b>Admission.java</b>.]]>
    </string>

    <string name="e6"> <![CDATA[
         Modify the application in Exercise 3a so that if a user enters a grade point average under 0 or over 4.0, or a tes
        t score under 0 or over 100,
        an error message appears instead of the “Accept” or “Reject” message. Save the file as <b>Admission2.java</b>.]]>
    </string>

    <string name="e7"> <![CDATA[
         Create a class named CheckingAccount with data fields for an account number and a balance.
        Include a constructor that takes arguments for each field. The constructor sets the balance to 0 if it is below the
        required 200 dollars  minimum for an account. Also include a method that displays account details, including an
        explanation if the balance was reduced to 0. Write an application named TestAccount in which you instantiate two
        CheckingAccount objects,prompt the user for values for the account number and balance,and display the values of both accounts.
        Save both the CheckingAccount.java and <b>TestAccount.java files</b>.]]>
    </string>

    <string name="e8"> <![CDATA[  <b><font color=#E91E63> Exercises 5.8 </b></font><br>
         Write an application that prompts the user for two integers and then prompts the user to enter an option
        as follows: 1 to add the two integers, 2 to subtract the second integer from the first, 3 to multiply the integers,
        and 4 to divide the first integer by the second. Display an error message if the user enters an option other than
        1 through 4 or if the user chooses the divide option but enters 0 for the second integer.
        Otherwise, display the results of the arithmetic. Save the file as <b>Calculate.java</b>.]]>
    </string>


    <string name="e9"> <![CDATA[
        Write an application for a lawn-mowing service. The lawn-mowing season lasts 20 weeks. The weekly fee for mowing a lot
        under 4,000 square feet is 25dollars. The fee for a lot that is 4,000 square feet or more, but under 6,000 square feet,
        is 35 dollars per week. The fee for a lot that is 6,000 square feet or over is 50dollars per week.
        Prompt the user for the length and width of a lawn, and then display the weekly mowing fee, as well as the
        20-week seasonal fee. Save the file as <b>Lawn.java</b>.]]>
    </string>

    <string name="f1"> <![CDATA[
         Write an application that displays all even numbers from 2 to 100 inclusive, and that starts a
        new line afterevery multiple of20 (20, 40,60,and 80). Savethe fileas <b> EvenNums.java</b>.]]>
    </string>

    <string name="f2">  <![CDATA[
         Write an application that asks a user to type 1, 2, 3, or 4. When the user types 4, the program ends.
        When the user types 1, 2, or 3, the program displays the message “Good job!” and then asks for another input.
        When the user types anything else,
        the application issues an error message and then asks for another input. Save the file as <b> Input123.java</b>.]]>
    </string>

    <string name="f3"> <![CDATA[
         Write an application that sums the integers from 1 to 50 (that is, 1 + 2 + 3 + … + 50).
        Save the file as <b>Sum50.java</b>.]]>
    </string>

    <string name="f4"> <![CDATA[  <b><font color=#E91E63> Exercises 6.4 </b></font><br>
         Write an application that shows the sum of 1 to n for every n from 1 to 50. That is, the programdisplays 1
        (the sum of 1alone), 3 (the sum of1 and 2), 6 (the sum of 1, 2, and 3), 10 (the sum of 1, 2, 3, and 4), and
        so on. Save the file as <b>EverySum.java</b>.]]>
    </string>

    <string name="f5"> <![CDATA[
         Write an application that displays every perfect number from 1 through 1,000. A perfect number is one that equals the sum of all the numbers that divide evenly into it. For example, 6 is perfect because 1, 2, and 3 divide evenly into it, and their sum is 6; however, 12 is not a perfect number because 1, 2, 3, 4,
        and 6 divide evenly into it, and their sum is greater than 12. Save the file as <b>Perfect.java</b>.]]>
    </string>

    <string name="f6"> <![CDATA[
        Write an application that calculates the amount of money earned on an investment, based on an 8% annual return.
        Prompt the user to enter an investment amount and the number of years for the investment. Display an error message
        if the user enters 0 for either value; otherwise,
        display the total amount (balance) for each year of the investment. Save the file as <b>Investment.java</b>.]]>
    </string>

    <string name="f7"> <![CDATA[
         Modify the Investment application in Exercise 7a so the user also enters the interest rate. In addition to the
        error message that is displayed when the investment or term is 0, display an error message if the interest rate is 0.
        Save the file as <b>Investment2.java</b>.]]>
    </string>

    <string name="f8">  <![CDATA[
         Write an application that displays a series of at least four survey importantQuestions; the survey can be on any social
        or political topic you want, and each importantQuestion should have at least three possible numeric-choice answers.
        Attheendofthesurvey,useadialogboxtoask whether the user wants to (1) enter another set of responses to
        the same set of importantQuestions, or (2) quit. Continue to accept sets of responses until the user chooses to quit,
        and then display the results of the survey—for each importantQuestion indicate how many users chose the first option,
        second option, and so on.
        Save the file as <b>Survey.java</b>.]]>
    </string>

    <string name="f9"> <![CDATA[
        Create a class named Purchase. Each Purchase contains an invoice number, amount of sale, and amount of sales tax.
        Include set methods for the invoice number and sale amount. Within the set() method for the sale amount,
        calculate the sales tax as 5% of the sale amount.
        Also include a display method that displays a purchase’s details. Save the file as <b>Purchase.java</b>.]]>
    </string>

    <string name="g1"> <![CDATA[
         Write an application that concatenates three Strings that hold one of your favorite quotations,
          the name of the person who said it, andthe dates that person lived.
        Display each String and the concatenated String. Save the file as <b>JoinStrings.java</b>.]]>
    </string>

    <string name="g2">  <![CDATA[
         Write an application that counts the total number of vowels contained in the String “Home is the place,
        when you have to go there, they have to take you in. – Robert Frost”.
        Save the file as <b>CountVowels.java.</b>.]]>
    </string>

    <string name="g3"> <![CDATA[
         Write an application that counts the total number of vowels contained in a String entered by the user.
        Save the file as <b>CountVowels2.java</b>.]]>
    </string>

    <string name="g4">  <![CDATA[
        Write an application that counts the total number of letters contained in a quotation of your choice.
        Save the file as <b>CountLetters.java</b>.]]>
    </string>

    <string name="g5">  <![CDATA[
        Write an application that counts the total number of letters contained in a String entered by the user.
        Save the file as  <b>CountLetters2.java </b>.]]>
    </string>

    <string name="g6">  <![CDATA[
         Write an application that counts the total number of whitespaces contained in a stored String.
        Save the file as <b>CountWhitespaces.java</b>.]]>
    </string>

    <string name="g7">  <![CDATA[
         Write an application that counts the total number of whitespaces contained in a String entered by the user.
        Save the file as  <b>CountWhitespaces2.java</b>.]]>
    </string>

    <string name="g8"> <![CDATA[
         Write an application that demonstrates that when two identical names are compared and the case differs, the equals()
        method returns false, but the equalsIgnoreCase()
        method returns true. Save the file as <b>ComparisonCase.java</b>.]]>
    </string>

    <string name="g9">  <![CDATA[
         Write an application that demonstrates conditions under which the compareTo() method returns a positive number,
        a negative number, and a zero when used to compare two Strings. Save the file as  <b>CompareStringValues.java</b>.]]>
    </string>


    <string name="h1">  <![CDATA[
         Write an application that can hold five integers in an array.
        Display the integers from first tolast,and then displaythe integersfrom last to first.
        Save the file as <b> IntArray.java</b>.]]>
    </string>

     <string name="h2"> <![CDATA[
         Write an application that prompts the user to make a choice for a pizza size—S, M, L, or X—and then
         displays the price as $6.99, $8.99, $12.50,
         or $15.00, accordingly. Display an error message if the user enters an invalid pizza size.
         Save the file as <b>PizzaChoice.java</b>.]]>
    </string>

     <string name="h3">  <![CDATA[
          Create an application containing an array that stores 20 prices, such as $2.34, $7.89, $1.34, and so on.<br>
         The application should (1) display the sum of all the prices, (2) display all values less than $5.00, (3) calculate the
         averageof the prices, and (4) display all values that are higher than the calculated average value.
         Save the file as  <b>Prices.java</b>.]]>
    </string>

     <string name="h4">  <![CDATA[
         Write an application that prompts a professor to enter grades for five different courses each for 10 students.
         Prompt the professor to enter data for one glossaryDescription at a time, including glossaryDescription ID and course data for five courses.
         Use prompts containing the number of the glossaryDescription whose data is being entered and the course number—for example,
         “Enter ID for glossaryDescription #s”, where s is an integer from 1 through 10, indicating the glossaryDescription, and “Enter course ID #n”,
         where n is an integer from 1 through 5, indicating the course number. Verify that the professor enters only
         A, B, C, D, or F for the grade value for each course.
         Save the file as  <b>InputGrades.java</b>.]]>
    </string>

     <string name="h5">  <![CDATA[
         Writean application that allows a user to enter the names and phone numbers ofup to 20 friends.
         Continue to prompt the user for names and phone numbers until the user enters “zzz” or has entered 20 names,
         whichever comes first. When the user is finished entering names, produce a count of how many names were entered,
         but make certain not to count the application-ending dummy “zzz” entry. Then display the names.
         Ask the user to type one of the names and display the corresponding phone number.
         Save the application as <b>PhoneBook.java</b>.]]>
    </string>

     <string name="h6">  <![CDATA[ <b><font color=#E91E63> Exercises 8.6 </b></font><br>
        Store 20 employee ID numbers in an integer array and 20 corresponding employee last names in a String array.
         Use dialog boxes to accept an ID number, and display the appropriate last name.
         Save the application as <b><u>EmployeeIDArray.java</u></b>.]]>
    </string>

     <string name="h7"> <![CDATA[
         Create an array of Strings, each containing one of the top 10 reasons that you like Java. Prompt a user to enter a
         number from 1 to 10, convert the number to an integer, and then use the integer to display one of the reasons.
         Save the application as <b>avaArray.java></b>.]]>
    </string>

     <string name="h8">  <![CDATA[
         Create an array of five Strings containing the first names of people in your family. Write a program that counts and displays
         the total number of vowels (both uppercase and lowercase) in all five Strings that you entered.
         Save the file as <b>Vowels.java</b>.]]>
    </string>

     <string name="h9"> <![CDATA[
        . Write an application containing three parallel arrays that hold 10 elements each. The first array holds four-digit
         glossaryDescription ID numbers, the second holds first names, and the third holds the students’ grade point averages. Use dialog boxes
         to accept a glossaryDescription ID number and display the glossaryDescription’s first name and grade point average. If a match is not found,
         display an error message that includes the
         invalid ID number and allow the user to search for a new ID number.
          Save the file as <b>StudentIDArray.java</b>.]]>
    </string>

    <string name="i1"> <![CDATA[
         The median of a list is its middle value when the values are placed in order. For example, if a
        list contains 1, 4, 7, 8, and 9, then the median is 7. Write an application
        that allows you to enter nine double values and display them and their median.
        Save the file as <b>Median.java</b>.]]>
    </string>

     <string name="i2">  <![CDATA[
         Revise the Median class so that the user can enter any number of values up to nine. If the list has an even
         number of values, the median is the numeric average of the values in the two middle positions.
         Save the file as <b>Median2.java</b>.]]>
    </string>

     <string name="i3"><![CDATA[
        Write an application containing an array of 15 double values. Include a method
         to sort and display the values in ascending order. Compile, run, and check the results.
         Save the file as <b><u>SortDoubles.java</b>.]]>
    </string>

     <string name="i4"> <![CDATA[ <b><font color=#E91E63> Exercises 9.4 </b></font><br>
        Modify the SortDoubles application to prompt the
         user whether to view the list in ascending or descending order.
         Save the file as <b><u>SortDoublesWithOption.java </u></b>.]]>
    </string>

     <string name="i5">  <![CDATA[
         Create a class named LibraryBook that contains fields
         to hold methods for setting and getting a LibraryBook’s title, author, and page count.
         Save the file as <b>LibraryBook.java</b>.]]>
    </string>

     <string name="i6">  <![CDATA[
         Write an application that instantiates five LibraryBook objects and prompts the user for values for the data fields.
         Then prompt the user to enter which field the LibraryBooks should be sorted by—title, author, or page count.
         Perform the requested sort procedure, and display the LibraryBook objects.
         Save the file as  <b>LibraryBookSort.java</b>.]]>
    </string>

     <string name="i7">  <![CDATA[
        Create a class that holds the service description, price, and the number of minutes it takes to perform the service. Include a constructor that requires arguments for
         all three data fields and three get methods that each return one of the data field’s values.
         Save the class as  <b>Service.java</b>.]]>
    </string>

     <string name="i8">  <![CDATA[
         Write an application named SalonReport that contains an array to hold six Service objects, and fill it with the
         data from Table 9-6. Include methods to sort the array in ascending order by each of the data fields. Prompt the user for
         the preferred sort order, and display the list of services in the requested order.
         Save the program as  <b>SalonReport.java</b>.]]>
    </string>

     <string name="i9"> <![CDATA[
         Create an application that contains an enumeration that represents the days of the week. Display a list of the days, then prompt the user for a day. Display business hours for the chosen day. Assume
         that the business is open from 11 to 5 on Sunday, 9 to 9 on weekdays, and 9 to 6 on Saturday.
         Save the file as <b>DayOfWeek.java</b>.]]>
    </string>

    <string name="j1">  <![CDATA[
         Create a class named Book that contains data fields for the title and number of pages. Include get and set methods for these fields. Next, create a subclass named Textbook, which contains an additional field that holds a grade level for the Textbook and additional methods to get and set the grade level field. Write
        an application that demonstrates using objects of each class.
        Save the files as <b>Book.java</b>, <b>Textbook.java</b>, and <b>DemoBook.java</b>.]]>
    </string>

     <string name="j2"> <![CDATA[ <b><font color=#E91E63> Exercises 10.2 </b></font><br>
         Create a class named Square that contains data fields for height, width, and surfaceArea, and a method named
         computeSurfaceArea(). Create a childclass named Cube. Cube contains anadditional data field named depth, and a
         computeSurfaceArea()method that overrides the paren tmethod. Write an application that instantiates a Square object
         and a Cube object and displays the surface areas of the objects.
         Save the files as  <b>Cube.java</b>,  <b>Square.java</b>, and <b>DemoSquare.java</b>.]]>
    </string>

     <string name="j3">  <![CDATA[
        Create a classnamed Order thatperforms orderprocessingofa singleitem.The class has five fields:
         customer name, customer number, quantity ordered, unit price, and total price. Include set and get
         methods for each field except the total price field. The set methods prompt the user for values for each field.
         This class also needs a method to compute the total price (quantity times unit price) and a method to display the
         field values. Create a subclass named ShippedOrder that overrides computePrice() by adding a shipping and handling
         charge of $4.00. Write an application named UseOrder that instantiates an object of each of these classes.
         Prompt the user for data for the Order object, and display the results; then prompt the user for
         data for the ShippedOrder object, and display the results.
         Save the files as  <b>Order.java</b>.,  <b>ShippedOrder.java</b>., and  <b>UseOrder.java ></b>.]]>
    </string>

     <string name="j4"> <![CDATA[
         a. Create a class named Year that contains a data field that holds the number of days in a year.
         Include a get method that displays the number of days and a constructor that sets the number of days to 365.
         Create a subclass named LeapYear. LeapYear’s constructor overrides Year’s constructor and sets the number of days
         to 366. Write an application named UseYear that instantiates one object of each class and displays their data.
         Save the files as <b>Year.java</b>, <b>eapYear.java</b>, and UseYear.jav</b>.]]>

    </string>

     <string name="j5">  <![CDATA[
         a. Create an Alien class. Include at least three protected data members of your choice, such as the number of eyes the Alien has. Include a constructor that requires a value for each data field and a
         toString() method that returns a String containing a complete description of the Alien.
         Save the file as <b>Alien.java</b>.]]>
    </string>

     <string name="j6">  <![CDATA[ <b><font color=#E91E63> Exercises 10.6 </b></font><br>
         Create two classes—Martian and Jupiterian—that descend from Alien. Supply each with a constructor that sets the
         Alien data fields with values you choose. For example,
         you can decide that a Martian has four eyes but a Jupiterian has only two.
         Save the files as  <b><u>Martian.java and Jupiterian.java</u></b>.]]>
    </string>

     <string name="j7">  <![CDATA[
        . Create an application that instantiates one Martian and one Jupiterian.
         Call the toString() method with each object and display the results.
         Save the application as <b>CreateAliens.java</b>.]]>
    </string>

     <string name="j8">  <![CDATA[
           Create a Die class that you can use to instantiate objects that hold one of six randomly selected values. Modify this class so
         its value field is protected instead of private. This will allow a child class to access the value.
         Save the file as <b>Die.java</b>.]]>
    </string>

     <string name="j9">  <![CDATA[
         Create a LoadedDie class that can be used to give a player a slight advantage over the computer.
          A LoadedDie never rolls a 1; it only rolls values 2 through 6. Save the file as <b>LoadedDie.java</b>.]]>
    </string>

    <string name="k1">  <![CDATA[ <b><font color=#E91E63> Exercises 11.1 </b></font><br>
             Create an abstract class named Book. Include a String field for the book’s title and a double field for the book’s price.
        Within the class, include a constructor that requires the book title, and add two get methods—one that returns the title and
        one that returns the price. Include an abstract method named setPrice(). Create two child classes of Book: Fiction and
        NonFiction. Each must include a setPrice() method that sets the price for all Fiction Books to $24.99 and for all NonFiction
        Books to $37.99. Write a constructor for each subclass, and include a call to setPrice() within each. Write an application
        demonstrating that you can create both a Fictionand a NonFiction Book, and display their fields.
        Save the files as  <b><u>Book.java</u></b>,  <b><u>Fiction.java</u></b>,  <b><u>NonFiction.java</u></b>, and
        <b><u> UseBook.java</u></b>.]]>
    </string>

     <string name="k2">  <![CDATA[ <b><font color=#E91E63> Exercises 11.2 </b></font><br>
         Write an application named BookArray in which you create an array that holds 10 Books,
         some Fiction and some NonFiction. Using a for loop, display details about all 10 books.
         Save the file as  <b><u>BookArray.java</u></b>.]]>
    </string>

     <string name="k3">  <![CDATA[ <b><font color=#E91E63> Exercises 11.3 </b></font><br>
        Create an abstract Auto class with fields for the car make and price. Include get and set methods for
         these fields; the setPrice() method is abstract. Create two subclasses for individual automobile makers
         (for example, Ford or Chevy), and include appropriate setPrice() methods in each subclass (for example, $20,000 or $22,000).
         Finally, write an application that uses the Auto class and subclasses to display
         information about different cars.
         Save the files as <b><u>Auto.java</u></b>, <b><u>Ford.java</u></b>, <b><u>Chevy.java</u></b>, and
          <b><u>UseAuto.java</u></b>.]]>
    </string>

     <string name="k4"> <![CDATA[ <b><font color=#E91E63> Exercises 11.4 </b></font><br>
         Create an abstract Division class with fields for a company’s division name and account number, and an abstract display()
         method. Use a constructor in the superclass that requires values for both fields. Create two subclasses named
         InternationalDivision and DomesticDivision. The InternationalDivision includes a field for the country in which the
         division is located and a field for the language spoken; its constructor requires both. The DomesticDivision includes a
         field for the state in which the division is located; a value for this field is required by the constructor.
         Write an application named UseDivision that creates InternationalDivision and DomesticDivision objects for two
         different com- panies and displays information about them.
         Save the files as  <b><u>Division.java,  <b><u>InternationalDivision.java</u></b>,
           <b><u>DomesticDivision.java</u></b>, and UseDivision.java</u></b>.]]>
    </string>

     <string name="k5"> <![CDATA[ <b><font color=#E91E63> Exercises 11.5 </b></font><br>
         Write an application named UseChildren that creates and displays at least two Child objects—one Male and one Female.
         Child is an abstract class and Male and Female are subclasses. The Child class contains fields that hold the name, gender,
         and age of a child. The Child class constructor requires a name and a gender. The Child class also contains two abstract
         methods named setAge() and display(). The Male and Female subclass constructors require only a name; they pass the name and
         appropriate gender to the Child. The subclass constructors also prompt the user for an age using the setAge() method, and then
         display the Child’s data using the display() method.
         Save the files as  <b><u>Child.java</u></b>,  <b><u>Male.java</u></b>,  <b><u>Female.java</u></b>, and
         <b><u>UseChildren.java</u></b>.]]>
    </string>


     <string name="k6">  <![CDATA[ <b><font color=#E91E63> Exercises 11.6 </b></font><br>
        . Create an interface named Turner, with a single method named turn(). Create a class named Leaf that implements turn()
         to display “Changing colors”. Create a class named Page that implements turn() to display “Going to the next page”.
         Create a class named Pancake that implements turn() to display “Flipping”. Write an application named DemoTurners
         that creates one object of each of these class types and demonstrates the turn() method for each class.
         Save the files as   <b><u>Turner.java</u></b>,   <b><u>Leaf.java</u></b>,   <b><u>Page.java</u></b>,
          <b><u>Pancake.java</u></b>, and <b><u>DemoTurners.java</u></b>.]]>
    </string>


     <string name="k7">  <![CDATA[ <b><font color=#E91E63> Exercises 11.7 </b></font><br>
         Think of two more objects that use turn(), create classes for them, and then add objects to the
         DemoTurners application, renaming it  <b><u>DemoTurners2.java.</u></b>.. Save the files, using the names of new objects that use turn().]]>
    </string>

     <string name="k8">  <![CDATA[ <b><font color=#E91E63> Exercises 11.8 </b></font><br>
         Create an interface called Player. The interface has an abstract method called play() that displays a message
         describing the meaning of “play” to the class. Create classes called Child, Musician, andActor that all implement Player.
         Create an application that demonstrates the use of the classes.
         Save the files as <b><u>Player.java</u></b>, <b><u>Child.java</u></b>, Actor.java</u></b>,  <b><u>Musician.java</u></b>,
         and  <b><u>UsePlayer.java</u></b>.]]>
    </string>


     <string name="k9"> <![CDATA[ <b><font color=#E91E63> Exercises 11.9 </b></font><br>
         Create an abstract class called Student. TheStudent class includes a name and a Boolean value
         representing full-time status. Include an abstract method to determine the tuition, with full-time students
         paying a flat fee of $2,000 and part-time students paying $200 per credit hour. Create two subclasses called
         FullTime and PartTime. Create an application that demonstrates how to create objects of both subclasses.
         Save the files as <b><u>Student.java</u></b>, <b><u>FullTime.java</u></b>, <b><u>PartTime.java</u></b>, and
          <b><u>UseStudent.java</u></b>.]]>
    </string>


     <string name="l1"> <![CDATA[ <b><font color=#E91E63> Exercises 12.1 </b></font><br>
         Write an application named GoTooFar in which you declare an array of five integers and store five values in the array.
         Write a try block in which you loop to display each successive element of the array, increasing a subscript by 1 on each
         pass through the loop. Create a catch block that catches the eventual
         ArrayIndexOutOfBoundsException and displays the message, “Now you’ve gone too far.”
          Save the file as  <b><u>GoTooFar.java</u></b>.]]>
    </string>

     <string name="l2">  <![CDATA[ <b><font color=#E91E63> Exercises 12.2 </b></font><br>
             The Integer.parseInt() method requires a String argument, but fails if the String cannot be converted to an integer.
         Write an application in which you try to parse a String that does not represent an integer value.
         Catch the NumberFormatException that is thrown, and
         then display an appropriate error message. Save the file as  <b><u>TryToParseString.java</u></b>.]]>
    </string>

     <string name="l3">  <![CDATA[ <b><font color=#E91E63> Exercises 12.3 </b></font><br>
         Write an application that prompts the user to enter a number to use as an array size,and then attempt to declare an array using
         the entered size. If the array is created successfully, display an appropriate message.
         Java generates a NegativeArraySizeException if you attempt t ocreate an array with a negative size,and Java creates a
         NumberFormatException if you attempt to create an array using an on numeric value for the size. Use a catch block that
         executes if the array size isnon-numeric or negative, displaying a message that indicates the array was not created.
         Save the file as  <b><u>NegativeArray.java. </u></b>.]]>
    </string>

     <string name="l4">   <![CDATA[ <b><font color=#E91E63> Exercises 12.4 </b></font><br>
        Write an application that throws and catches an ArithmeticException when you attempt to take the square root of a negative
         value. Prompt the user for an input value and try the Math.sqrt() method on it. The application either displays
         the square root or catches the thrown Exception and displays an appropriate message.
           <b><u>Save the file as SqrtException.java </u></b>.]]>
    </string>

     <string name="l5"> <![CDATA[ <b><font color=#E91E63> Exercises 12.5 </b></font><br>
        Write an application that displays a series of at least five glossaryDescription ID numbers (that you have stored in an array)
         and asks the user to enter a numeric test score for the glossaryDescription. Create a ScoreException class, and throw a
         ScoreException for the class if the user does not enter a valid score (less than or equal to 100). Catch the
         ScoreException and then display an appropriate message. In addition, store a 0 for the glossaryDescription’s score. At
         the end of the application,
         display all the glossaryDescription IDs and scores. Save the files as    <b><u>ScoreException.javaa </u></b> and
          <b><u>TestScore.java</u></b>.]]>
    </string>

     <string name="l6">  <![CDATA[ <b><font color=#E91E63> Exercises 12.6 </b></font><br>
     Write an application that displays a series of at least 10 glossaryDescription ID numbers (that you have stored in an array) and
         asks the user to enter a test letter grade for the glossaryDescription. Create an Exception class named GradeException that
         contains a static public array of valid grade letters (‘A’, ‘B’, ‘C’, ‘D’, ‘F’, and‘I’), which you can use to determine
         whether a grade entered from the application is valid. In your applica- tion, throw a GradeException if the user does
         not enter a valid letter grade. Catch the GradeException and then display an appropriate message. In addition, store an
         ‘I’ (for Incomplete) for any glossaryDescription for whom an exception is caught. At the end of the application, display all the
         glossaryDescription IDs and grades. Save the files as  <b><u>GradeException.java</u></b> and <b><u>TestGrade.java</u></b>.]]>
    </string>


     <string name="l7">  <![CDATA[ <b><font color=#E91E63> Exercises 12.7 </b></font><br>
         Create a DataEntryException class whose getMessage() method returns informa- tion about invalid integer data.
         Write a program named GetIDAndAge that continu- ally prompts the user for an ID number and an age until a terminal
         0 is entered for both. Throw a DataEntryException if the ID is not in the range of valid ID numbers (0 through 999),
         or if the age is not in the range of valid ages (0 through 119). Catch any DataEntryException or InputMismatchException
         that is thrown, and isplay an appropriate message.
         Save the files as <b><u>DataEntryException.java</u></b and <b><u>GetIDAndAge.java</u></b>.]]>

    </string>

     <string name="l8"> <![CDATA[ <b><font color=#E91E63> Exercises 12.8 </b></font><br>
             A company accepts user orders by part numbers interactively. Users might make the following errors as they enter
         data: &bull; The part number is not numeric. <br> &bull The quantity is not numeric. <br>
         &bull The part number is too low (less than 0).<br>
         &bull The part number is too high (more than 999).<br>
         &bull The quantity ordered is too low (less than 1). <br>
          &bull The quantity ordered is too high (more than 5,000). <br>
          Create a class that stores an array of usable error messages; save the file as DataMessages.java.
          Create a DataException class; each object of this class will store one of the messages. Save the file as
          DataException.java. Create an application that prompts the user for a part number and quantity. Allow for the
          possibility of nonnumeric entries as well as out-of-range entries, and display the appropriate message
          when an error occurs. If no error occurs, display the message “Valid entry”.
          Save the program as >PartAndQuantityEntry.java</u></b>.]]>
    </string>


     <string name="l9"> <![CDATA[ <b><font color=#E91E63> Exercises 12.9 </b></font><br>
         Create an Employee Exception class whose constructor receives a String that consists of an employee’s ID and pay rate.
         Save the file as <b><u>EmployeeException.java</u></b>. Create an Employee class with two fields, idNum and hourlyWage.
         The Employee constructor requires values for both fields. Upon construction, throw an EmployeeException if the hourlyWage
         is less than $6.00 or over $50.00. Save the class as Employee.java.
         Write an application that establishesat least three Employees with hourlyWages that are above,below, and within the allowed range.
         Display an appropriate message when an Employee is successfully created and when one is not.
          Save the file as <b><u>ThrowEmployee.java</u></b>.]]>

    </string>


     <string name="m1">  <![CDATA[ <b><font color=#E91E63> Exercises 13.1 </b></font><br>
         Create a file using any word-processing program or text editor. Write an application
         that displays the file’s name, containing folder, size, and time of last modification.
         Save the file as <b><u>FileStatistics.java</u></b>.]]>
    </string>

     <string name="m2">  <![CDATA[ <b><font color=#E91E63> Exercises 13.2 </b></font><br>
         Create two files using any word-processing program or text editor.
         Write an application that determines whether the two files are located in the same folder.
         Save the file as  <b><u>SameFolder.java</u></b>.]]>
    </string>

     <string name="m3">  <![CDATA[ <b><font color=#E91E63> Exercises 13.3 </b></font><br>
        Create a file that contains your favorite movie quote. Use a text editor such as Notepad, and save the file as
        <b><i>quote.txt.</i></b>
         Copy the file contents and paste them into a word-processing program such as Word. Save the file as quote.docx.
         Write an application that
         displays the sizes of the two files as well as the ratio of their sizes to each other.
         Save the file as  <b><u>FileStatistics2.java</u></b>.]]>
    </string>

     <string name="m4">   <![CDATA[ <b><font color=#E91E63> Exercises 13.4 </b></font><br>
        Write an application that determines which, if any, of the following files are stored in the folder where you have saved
         the exercises created in this chapter: autoexec.bat, <b><u>SameFolder.java</u></b>,<b><u>FileStatistics.class</u></b>, and
          <b><u> Hello.java</u></b>.
         Save the file as <b><u>FindSelectedFiles.java</u></b>.]]>
    </string>

     <string name="m5">    <![CDATA[ <b><font color=#E91E63> Exercises 13.5 </b></font><br>
         Using a text editor,create a file that contains a list of five 4-digit account numbers. Read in each account number,
         and alter it to add a dash and a check digit,which is calculated by taking the remainder when the
         original number is divided by 7. Write the new account numbers to an output file.
         Save the application as <b><u>AddCheckDigit.java</u></b>.]]>
    </string>


     <string name="m6">  <![CDATA[ <b><font color=#E91E63> Exercises 13.6 </b></font><br>
         Write an application that allows a user to enter a filename and an integer representing a file position.
         Assume that the file is in the same folder as your executing program.
         Access the requested position within the file and display the next 20 characters there.
         Save the file as <b><u>SeekPosition.java</u></b>.]]>
    </string>


     <string name="m7"> <![CDATA[ <b><font color=#E91E63> Exercises 13.7</b></font><br>
         Modify the SeekPosition application so that instead of displaying 20 characters, the
         user enters the number of characters to display, beginning with the requested position.
         Save the file as  <b><u>SeekPosition2.java</u></b>.]]>
    </string>

     <string name="m8"> <![CDATA[ <b><font color=#E91E63> Exercises 13.8</b></font><br>
         Create an application that allows you to enter glossaryDescription data that consists of an ID number, first name, last name,
         and credit hours earned. Depending on the glossaryDescription’s number of credit hours completed, output each record to
         either a lowerclassman file (under 60 hours completed) or an upperclassman file (60 hours or more completed).
         Save the program as <b><u>LowerAndUpper.java</u></b>.]]>

    </string>


     <string name="m9"> <![CDATA[ <b><font color=#E91E63> Exercises 13.9</b></font><br>
         Expand the LowerAndUpper application so that it displays each record one by one from the lowerclassman file and then
         from the upperclassman file. Display a heading to introduce each list. For each record, display the ID number, first
         name, last name, credits earned, and number of additional
         credits needed to graduate. Assume that 120 credits are required for graduation.
         Save the program as <b><u>LowerAndUpperDisplay.java</u></b>.]]>
    </string>

     <string name="n1"><![CDATA[ <b><font color=#E91E63> Exercises 14.1 </b></font><br>
         Write an application that displays a JFrame containing the words to any well-known nursery rhyme.
         Save the file as <b><u>JNurseryRhyme.java</u></b>.]]>
    </string>

     <string name="n2"><![CDATA[ <b><font color=#E91E63> Exercises 14.2 </b></font><br>
         Write an application that instantiates a JFrame that contains a JButton.
         Disable the JButton after the user clicks it. Save the file as <b><u>JFrameDisableButton.java</u></b>.]]>
    </string>

     <string name="n3"> <![CDATA[ <b><font color=#E91E63> Exercises 14.3 </b></font><br>
        Modify the JFrameDisableButton program so that the JButton is not disabled until the user has clicked at least eight times.
         At that point, display a JLabel that indicates “That’s enough!”.
         Save the file as  <b><u>JFrameDisableButton2.java</u></b>.]]>
    </string>

     <string name="n4"> <![CDATA[ <b><font color=#E91E63> Exercises 14.4 </b></font><br>
         Create an application with a JFrame that holds five labels describing reasons that a customer might not buy your
         product (for example, “Too expensive”).Every time the user clicks a JButton, remove one of the negative reasons.
         Save the file as  <b><u>JDemoResistance.java</u></b>.]]>
    </string>

     <string name="n5"> <![CDATA[ <b><font color=#E91E63> Exercises 14.5 </b></font><br>
         Write an application for a video store. Place the names of 10 of your favorite movies in a combo box.
         Let the user select a movie to rent.Display the rental fee, which is $1.00, $2.00, or $3.00 for each movie.
         Save the file as <b><u>JVideo.java</u></b>.]]>
    </string>

     <string name="n6"> <![CDATA[ <b><font color=#E91E63> Exercises 14.6 </b></font><br>
         Change the JVideo application to include an editable combo box. Allow the user to type the name of the movie to rent.
         Display an appropriate error message if the desired movie is not available. Save the file as <b><u>JVideo2.java</u></b>.]]>
    </string>


     <string name="n7"> <![CDATA[ <b><font color=#E91E63> Exercises 14.7 </b></font><br>
         Design an application for a pizzeria. The user makes pizza order choices from list boxes, and the application
         displays the price. The user can choose a pizza size of small ($7), medium ($9), large ($11), or extra large ($14), and one of
         any number of toppings. There is no additional charge for cheese,
         but any other topping adds $1 to the base price. Offer at least five different topping choices.
         Save the file as <b><u>JPizza.java</u></b>.]]>
    </string>

     <string name="n8"> <![CDATA[ <b><font color=#E91E63> Exercises 14.8 </b></font><br>
        Write an application that allows a user to select a favorite basketball team from a list box. Include at least five
         teams in the list,and display the chosen team in a text field after the user makes a selection.
         Save the file as  <b><u>JBasketball.java</u></b>.]]>
    </string>

     <string name="n9"> <![CDATA[ <b><font color=#E91E63> Exercises 14.9 </b></font><br>
          Write an application that allows the user to choose insurance options in JCheckBoxes. Use a ButtonGroup to
         allow the user to select only one of two insurance types—HMO (health maintenance organization)or PPO
         (preferred provider organization).Use regular (single) JCheckBoxes for dental insurance and vision insurance options;
         the user can select one option,both options,or neither option. As the user select search option, display
         its name and price in a textfield; the HMO costs $200 per month, the PPO costs $600pe month,the dental cover age adds
         $75 per month ,and the vision care adds $20 per month.
         When a user deselects an item, make the textfield blank.
         Save the file as  <b><u>JInsurance.java. </u></b>.]]>

    </string>


     <string name="o1">  <![CDATA[ <b><font color=#E91E63> Exercises 15.1 </b></font><br>
        Create a JFrame and set the layout to BorderLayout. Place a JButton containing the name of a politician in each region
         (left, center, and right; or west, center, and east). Each politician’s physical position should correspond to your
         opinion of his or her political stance.
         Save the file as  <b><u>JPoliticalFrame.java</u></b>.]]>
    </string>

     <string name="o2">  <![CDATA[ <b><font color=#E91E63> Exercises 15.2 </b></font><br>
         Create 26 JButtons, each labeled with a single, different letter of the alphabet. Create a JFrame to hold five JPanels
         in a five-by-one grid. Place six JButtons within each of the first four JPanels and two JButtons within the fifth JPanel
         of the JFrame. Add a JLabel to the fifth JPanel. When the user clicks a JButton, the text of the JLabel is set
         to “Folder X”, where X is the letter of the alphabet that is clicked.
         Save the file as  <b><u>JFileCabinet.java</u></b>.]]>
    </string>

     <string name="o3"> <![CDATA[ <b><font color=#E91E63> Exercises 15.3 </b></font><br>
         Create a JFrame that holds four buttons with the names of four different fonts.
         Display a demonstration JLabel using the font that the user selects.
          Save the file as <b><u>JFontFrame.java</u></b>.]]>
    </string>

     <string name="o4"> <![CDATA[ <b><font color=#E91E63> Exercises 15.4 </b></font><br>
          Create a JFrame that uses BorderLayout. Place a JButton in the center region. Each time the user clicks the JButton,
         change the background color in one of the other regions.
         Save the file as  <b><u>JColorFrame.java</u></b>.]]>
    </string>

     <string name="o5"> <![CDATA[ <b><font color=#E91E63> Exercises 15.5 </b></font><br>
         Create a JFrame with JPanels, a JButton, and a JLabel. When the user clicks the JButton,
         reposition the JLabel to a new location in a different JPanel.
         Save the file as  <b><u>JMovingFrame.java</u></b>.]]>
    </string>


     <string name="o6">  <![CDATA[ <b><font color=#E91E63> Exercises 15.6 </b></font><br>
         Create a class named JPanelOptions that extends JPanel and whose constructor accepts two colors and a String.
         Use the colors for background and foreground to display the String. Create an application named JTeamColors
         with GridLayout. Display four JPanelOptions JPanels that show the names, in their team colors, of
         four of your favorite sports teams.
         Save the files as  <b><u>JPanelOptions.java</u></b> and  <b><u>JTeamColors.java</u></b>.]]>

    </string>

     <string name="o7">  <![CDATA[ <b><font color=#E91E63> Exercises 15.7 </b></font><br>
         Write an application that lets you determine the integer value returned by the InputEvent method getModifiers()
         when you click your left, right, or—if you have one—middle mouse button on a JFrame.
          Save the file as   <b><u>JLeftOrRight.java</u></b>.]]>
    </string>

     <string name="o8">  <![CDATA[ <b><font color=#E91E63> Exercises 15.8 </b></font><br>
         Search the Java Web site at http://java.sun.com for information on how to use a JTextArea. Write an application for the
         WebBuy Company that allows a user to compose the three parts of a complete e-mail message: the “To:”, “Subject:”,
         and “Message:” text. The “To:” and “Subject:” text areas should provide a single line for data entry. The “Message:”
         area should allow multiple lines of input and be able to scroll if necessary to accommodate a long message. The user
         clicks a button to send the e-mail message. When the message is complete and the Send button is clicked,
         the application should display “Mail has been sent!” on a new line in the message area.
         Save the file as  <b><u>JEMail.java</u></b>.]]>
    </string>

     <string name="o9">  <![CDATA[ <b><font color=#E91E63> Exercises 15.9 </b></font><br>
         Modify the JEMail application to include a Clear button that the user can click at any time to clear the
         “To:”, “Subject:”, and “Message:” fields. Save the file as  <b><u>JEMail2.java</u></b>.]]>
    </string>

    <string name="v1"> &#10148; In this video we will see what is Java? Why do we care about learning Java? And we will see how we can
        install Java in our Windows operating system.
    </string>

    <string name="t1"> <![CDATA[ <p style="text-align:justify;">&#10148; Java is simple and yet powerful Object Oriented programming language and it is in
    many respects similar to C++. <br>
       &#10148; Java is created by <b>James Gosling</b> from <b>Sun Microsystems (Sun) in 1991</b>. The first publicly available version
    of Java (Java 1.0) was released in 1995.</p>
    <p style="text-align:justify;" >&#10148; The Java runtime allows software developers to write program code in other languages
    than the Java programming language which still runs on the Java virtual machine.<br>
    &#10148; The Java platform usually associate with the Java virtual machine and the Java core Libraries</u></b>.</p><hr />
    <h3 style="color:#FF4081">Java virtual Machine</h3>
    <p style="text-align:justify;">&#10148; The Java virtual machine (JVM) is a software implementation of a computer that
    executes programs like a real machine. A Java distribution typically comes in two flavors, the <b>Java Runtime Environment (JRE)</b> and the <b>
      Java Development Kit (JDK).</b></p><hr />
      <h3 style="color:#FF4081;">Java Runtime Environment</h3>
        <p style="text-align:justify;">&#10148;The JRE consists of the JVM and the Java class libraries. Those contain the necessary functionality to start Java programs.
        The JDK additionally contains the development tools necessary to create Java programs.<br>&#10148; The JDK therefore consists of a Java
        compiler, the Java virtual machine and the Java class libraries.</u></b></p><hr />
        <h3 style="color:#FF4081">Uses of Java</h3>
         <p style="text-align:justify;" > &#10148; Java is also used as the programming language for many different software programs for many different programs, games, and
        add-ons.<br> &#10148; Some examples of the more widely used programs written in Java or that use Java include: <br>
        <b>&bull; Android Apps <br>
        &bull; Big Data Technologies <br>
        &bull; Adobe Creative Suites <br>
        &bull; Eclipse <br>
        &bull; Lotus Notes <br>
        &bull; Minecraft <br>
        &bull; OpenOffice <br>
        &bull; Runescape <br>
        &bull; Vuze </p><hr />
        ]]>
    </string>

    <string name="t2">

    </string>

    <string name="t3">

    </string>

    <string name="t4">

    </string>


     <string name="html" translatable="false">
        <![CDATA[
        <html>
            <head>
                <style type="text/css">
                    body {
                        font-size: %4$fpx;
                        color: #%2$s;
                        margin: %5$fpx %5$fpx %5$fpx %5$fpx;
                    }
                    *
                    {
	                margin: 5 auto 5 auto;
	                text-align:left;
                     }
                    h3{
                        padding: 5px;
                        text-align: center;
                        background-color: #e9e9e9;
                        border: 1px solid #ddd;
                        font-size: 19px;
                        font-size: 1em;
                        min-height: 1.1em;
                        color:#FF4081;
                    }

                    p{
                        line-height:1.5;
                        text-align:justify;
                    }
                    p.tips{
                        text-align:justify;
                        font-size:13px;
                        color:#666666;
                        font-style:italic;
                    }
                    p.program{
                        text-align:left;
                        line-height:1.2;
                    }
                    span.a{
                        font-size:18px;
                        color:#009688;
                    }
                    a {color: #%3$s;}
                    img {display: inline; height: auto; max-width: 100%%;}
                     pre {white-space: pre; display:block;}
                    iframe {width: 90vw; height: 50.625vw;} /* 16:9 */
                </style>
            </head>
            <body>%1$s</body>
            </html>"
        ]]>
    </string>
     <string name="lesson1b">
       <![CDATA[
       <h3 style="color:#FF4081;"> Simple </h3>
       <p style="text-align:justify;">
        &#10148; Java is simple to learn and its syntax is quite simple and easy to understand.</p>
          <h3 style="color:#FF4081;"> Object Oriented</h3>
        <p style="text-align:justify;">&#10148; In Java everything is object-oriented which has some data and behaviour. Java can be easily extended as it is based
         Object Model.</p>
          <h3 style="color:#FF4081;"> Platform Independent</h3>
         <p style="text-align:justify;">
        &#10148; Unlike other programming language such as C, C++ etc which are compiled into platform specific machines. Java is guaranteed
         to be write-once, run anywhere language.<br>
        &#10148; On compilation Java program is compiled into bytecode. This bytecode is platform independent and can be run on any machine,
         plus this bytecode format also provide security. Any machine with Java Runtime Environment can run Java programs.
         </p>
           <h3 style="color:#FF4081;"> Secured </h3>
            <p style="text-align:justify;">
            &#10148; When it comes to security, Java is always the first choice. With Java secure features it enable us to develop virus free, temper
         free system. Java program always run in Java runtime environment with almost null interaction with system OS, hence it is more
         secure.</p>
          <h3 style="color:#FF4081;"> Robust </h3>
            <p style="text-align:justify;">
            &#10148; Java makes an effort to eliminate error prone codes by emphasizing mainly on compile time error checking and runtime checking.
         But the main areas which Java improved were Memory Management and mishandled exceptions by introducing automatic garbage
         collector and Exception Handling.</p>

           <h3 style="color:#FF4081;"> Architectural Neutral</h3>
            <p style="text-align:justify;">
             &#10148; Compiler generates bytecodes, which have nothing to do with a particular computer architecture, hence a Java program
         is easy to interpret on any machine.</p>

         <h3 style="color:#FF4081;"> Portable</h3>
            <p style="text-align:justify;">
             &#10148;  Java bytecode can be carried to any platform. No implementation dependent features. Everything related to storage
          is predefined, example: size of primitive data types.</p>

            <h3 style="color:#FF4081;"> High Performance</h3>
            <p style="text-align:justify;">
             &#10148;  Java is an interpreted language, so it will never be as fast as a compiled language like C or C++. But Java enables high
         performance with the use of just in time compiler.</p>

                <h3 style="color:#FF4081;"> Multithreaded</h3>
            <p style="text-align:justify;">
             &#10148; Java multithreading feature makes it possible to write a program that can do many tasks simultaneously. Benefit of multithreading
           is that it utilizes same memory and other resources to execute multiple threads at the same time, like
           while typing, grammatical errors are checked along.</p>

               <h3 style="color:#FF4081;"> Distributed</h3>
            <p style="text-align:justify;">
             &#10148; We can create distributed applications in Java. RMI and EJB are used for creating distributed applications. We may access
        files by calling the methods from any machine on the internet.</p>

              <h3 style="color:#FF4081;">Interpreted</h3>
            <p style="text-align:justify;">
            &#10148; An interpreter is needed in order to run Java programs. The programs are compiled into Java Virtual Machine Code called
           bytecode.<br>
          &#10148;  The bytecode is a machine independent and is able to run on any machine that has a Java interpreter.
           With Java, the program need only be compiled once, and the bytecode generated by the Java compiler can run on
           any platform.</p>

        ]]>
    </string>

    <string name="lesson1c"> <![CDATA[
        <p style="text-align:justify"> &#10148; A computer <b>program</b> is a set of instructions that you write to tell a computer what to do.
         <br>&#10148; Computers are constructed from circuitry that consists of small on/off switches,
        so you could create a computer program by writing something along the following lines:<br>
        <i>first switch—on</i><br>
        <i>second switch—off</i><br>
        <i>third switch—off</i><br>
         <i>fourth switch—on</i><br>
         &#10148; A program written in the style that refers to switch settings is written in <b>machine language</b>,
          which is the most basic circuitry-level language.<br>
          &#10148; Machine language is a <b>low-level programming language</b>, or one that corresponds closely to a computer processor’s
         circuitry.</p>
         <p class="tips" ><i>  <span class="a">&#9755;</span> Programmers often say that machine language consists of 1s and 0s. What they mean is that you can use 1s and 0s to
        represent on and off switches.</i></p><hr>
         <p style="text-align:justify">
          &#10148; In every high-level programming language, the names of memory locations cannot include spaces.<br>
         &#10148; Each high-level language has its own <b>syntax</b>, or rules of the language.
        Using a programming language, programmers write a series of <b>program statements</b>, similar to English sentences,
         to carry out the tasks they want the program to perform.
          After the program statements are written, high-level language programmers use a computer program called a <b>compiler</b>
           or <b>interpreter</b> to translate their language statements into machine code.<br>
            &#10148; Compilers and interpreters issue one or more error messages each time they encounter an invalid program
            statement—that is, a statement containing a <b>syntax error</b>, or misuse of the language.<br>
             Locating and repairing all syntax errors is the first part of the process of <b>debugging</b>
             a program—freeing the program of all errors.</p>
             <p class="tips">
               &#9755; Programmers call some logical errors semantic errors. For example, if you misspell a programming-
        language word, you commit a syntax error, but if you use a correct word in the wrong context,you commit a semantic error.</p>
        <hr>
         ]]>
    </string>


    <string name="lesson2a">
        <![CDATA[
            <p>
            &#10148; Object-oriented programming is an extension of procedural programming in which you take a slightly different approach
            to writing computer programs.<br>
             Writing <b>object-oriented programs</b> involves creating classes, which are blueprints for
            objects; creating objects from those classes; and creating applications that use those objects.
            After creation, classes can be reused over and over again to develop new programs.
             Thinking in an object-oriented manner involves envisioning program components as objects that belong to classes
             and that are similar to concrete objects in the real world; then, you can manipulate the objects and have them
              interrelate with each other to achieve a desired result.
              </p>
        <p class="tips">
            <span class="a">&#9755;</span> Programmers use OO as an abbreviation for object-oriented; it is pronounced “oh oh.”
            Object-oriented programming is abbreviated OOP, and pronounced to rhyme with soup.
        </p>
        <p> Originally, object-oriented programming was used most frequently for two major types of applications: <br>
        &bull;  <b>Computer simulations</b>, which attempt to mimic real-world activities so that their processes can be improved or so that users can better
        understand how the real-world processes operate.<br>
         &bull; <b>Graphical user interfaces</b>, orGUIs (pronounced “gooeys”), which allow users to interact with a program in a graphical environment
          </p>
          <h3> Understanding Classes, Objects, and Encapsulation  </h3>
          <p>  &#10148; In object-oriented terminology, a <b>class</b>
          is a term that describes a group or collection of objects with common properties. A <b>class definition</b>
           describes what attributes its objects will have and what those objects will be able to do. <b>
           Attributes</b> are the characteristics that define an object; they are <b>properties</b> of the object.
           The values contained in an object’s <b>properties</b> differentiate objects of the same class from one another.
           An <b>object</b> is a specific, concrete instance of a class.
           </p>
           <p class="tips">
            <span class="a">&#9755;</span> When you create an object instance, you instantiate it. </p>
           <p>  &#10148; A <b>method</b> is a self- contained block of program code that carries out some action, similar to a procedure in a procedural program. An Automobile,
           for example, might have methods for moving forward, moving backward, being filled with gasoline, and being washed. <br>
           &#10148; In object-oriented classes, attributes and methods are encapsulated into objects that are then used much like real-world objects.
            <b>Encapsulation</b> refers to the hiding of data and methods within an object. Encapsulation provides the security that keeps data and methods safe from inadvertent changes. Programmers sometimes refer to encapsulation as using a “black box,” or a device that you can use without regard to the internal mechanisms.
           A programmer can access and use the methods and data contained in the black box but cannot change them. </p>

            <h3> Understanding Inheritance and Polymorphism </h3>
            <p> &#10148; An important feature of object-oriented programs is inheritance—the ability to create
            classes that share the attributes and methods of existing classes, but with more specific features.<br>
            For example, Automobile is a class, and all Automobile objects share many traits and abilities.
            Convertible is a class that inherits from the Automobile class; a Convertible is a type of Automobile
            that has and can do everything a “plain” Automobile does—but with an added ability to lower its top. </p>
            <p>  &#10148; A final important concept in object-oriented terminology is <b>polymorphism</b>.
            Literally, polymorphism means “many forms”—it describes the feature of languages that allows the same word or
            symbol to be interpreted correctly in different situations based on the context. <br>
             For example, although the classes Automobile, Sailboat, and Airplane all inherit from Vehicle, turn and stop
             methods work differently for instances of those classes. </p>
        ]]>
    </string>

    <string name="lesson2b">
        <![CDATA[
        <p class="program">
public Class MyFirstJavaProgram<br>
{<br>
\tpublic Static void  main (String args[])<br>
\t{<br>
    \t\tSystem.out.printIn (“Hello World”);
\t}<br>
}<br>
</p>
<p>Save this file as <b>MyFirstJavaProgram.java</b><br>
Output would be:<br>
Hello World<br><br>
<b>&#10148; Understanding the Statement</b><br>
The statement System.out.println(\"Hello World\"); does the actual work in this program.
 Like all Java statements, this one ends with a semicolon.
 The text \“Hello World\” is a literal string of characters; that is, it is a series of
 characters that will appear in output exactly as entered.
 Any literal string in Java is written between double quotation marks.<br><br>
<b>Class keyword</b> is used to declare a class in java.<br>
<b>Public keyword</b> is an access modifier which represents visibility, it means it is visible to all.<br>
<b>Static</b> is a keyword, if we declare any method as static, it is known as static method. The main method is executed by the JVM, it doesn’t require to create object to invoke the main method. So it saves memory.<br>
<b>Void</b> is the return type of method, it means it doesn’t return any value.<br>
<b>Main</b> is the entry point of the program. Execution of programs starts from main. It is called by Runtime System.<br>
<b>String[] args</b> is used for command line argument. We will learn it later.<br>
<b>System.out.printIn()</b> is used print statement.</p>

        ]]>
    </string>


    <string name="lesson2c">  <![CDATA[
        <p>&#10148; You can categorize data items as constant or variable. A data item is <b>constant</b> when its value cannot be changed while
        a program is running; a data item is variable when its value might change. For example, when you include the following statement
         in a Java class, the number 459 is a constant:<br><br>
        System.out.println(459); <br><br>
        Every time an application containing the constant 459 is executed, the value 459 is displayed.
        Programmers refer to the number 459 as a <b>literal constant</b> because its value is taken literally at each use.
        The number 459 is also a <b>numeric constant</b> as opposed to a character or string constant. Additionally, it is
        an <b>unnamed constant</b> as opposed to a named one, because no identifier is associated with it.<br>
        &#10148; On the other hand, you can set up a data item as a variable. A <b>variable</b> is a named memory location
        that you can use to store a value. A variable can hold only one value at a time, but the value it holds can change.
        For example, if you create a variable named oven Temperature,it might hold 0 when the application starts,later be
        altered to hold 350, and still later be altered to hold 400. Whether a data item is variable or constant, in Java
        it always has a data type. An item’s <b>data type</b>
        describes the type of data that can be stored there, how much memory the item occupies, and what types of operations can be
        performed on the data. A primitive type is a simple datatype. <br><br>

        &#10148;The eight primitive data types are called “primitive” because they are simple and uncomplicated.
        Primitive types also serve as the building blocks for more complex data types, called reference types. <p><hr>

        <h3> Declaring Variables </h3>

        <p> &#10148 A <b>variable declaration</b> is a statement that reserves a named memory location and includes the following:<br>
          &bull;  A data type that identifies the type of data that the variable will store l An identifier that is the variable’s name <br>
          &bull;  An optional assignment operator and assigned value, if you want a variable to contain an initial value <br>
          &bull; An ending semicolon <br>


]]>
    </string>

    <string name="lesson3a" formatted="false">  <![CDATA[
    <p> &#10148 A variables provides us with named storage that our programs can manipulate.<br>
     Each variable in Java has a specific type, which determines the size and layout of the variables\’s memory;
     the range of values that can be stored within that memory; and the set of operations that can be applied to the variable.
You must declare all variables before they can be used.<br>
The basic form of a variable declaration is shown here:<br><br>
 data_type variable=value; <br><br>
Here data type is one of Java\’s datatypes and variable is the name of the variable of the specified type, you one use a
comma-separated list. <br>
Following are valid examples of variable declaration and initialization in Java:<br><br>
int a, b, c; <br>
// Declares three ints, a, b, and c.<br>
int a=10, b=10; <br>
// Example of initialization <br>
double pi= 3.14159; <Br>
// declares and assigns a value of PI. <br>
char a=\’a\’; <br>
// the char variable a is initialized with value ‘a </p><br>
<h3>Local variables:</h3>
<p> &bull;Local variables are declared in methods, constructors, or blocks.<br><br>

&bull;Local variables are created when the method, constructor or block is entered
and the variable will be destroyed once it exits the method, constructor or block.
<br><br>
&bull;Access modifiers cannot be used for local variables.<br><br>

&bull;Local variables are visible only within the declared method, constructor or block.
<br><br>
&bull;Local variables are implemented at stack level internally.<br><br>

&bull;There is no default value for local variables so local variables should be
declared and an initial value should be assigned before the first use.
<br><br>
<b>Example:</b><br>
Here, age is a local variable. This is defined inside pupAge() method and its scope is limited to this method only.<br><br>

public class Test{<br>
   public void pupAge(){<br>
      int age = 0;<br>
      age = age + 7;<br>
      System.out.println(\"Puppy age is : \" + age);<br>
   }<br>

   public static void main(String args[]){<br>
      Test test = new Test();<br>
      test.pupAge();<br>
   }<br>
}<br>
This would produce the following result:<br>
Puppy age is: 7<br><br>
 </p>
 <h3> Instance variables:</h3>
<p> &bull; Instance variables are declared in a class, but outside a method, constructor or any block.
<br><br>
&bull; When a space is allocated for an object in the heap, a slot for each instance variable value is created.
<br><br>
&bull; Instance variables are created when an object is created with the use of the keyword \'new\'
and destroyed when the object is destroyed.
<br><br>
&bull; Instance variables hold values that must be referenced by more than one method, constructor or block,
or essential parts of an object\'s state that must be present throughout the class.
<br><br>
&bull; Instance variables can be declared in class level before or after use.
<br><br>
&bull; Access modifiers can be given for instance variables.
<br><br>
&bull; The instance variables are visible for all methods, constructors and block in the class. Normally,
it is recommended to make these variables private (access level).
However visibility for subclasses can be given for these variables with the use of access modifiers.
<br><br><br>

<b>Example:</b><br></p>
<p class="program"> import java.io.*;<br>

public class Employee{<br>
   // this instance variable is visible for any child class.<br>
   public String name;<br>

   // salary  variable is visible in Employee class only.<br>
   private double salary;<br>

   // The name variable is assigned in the constructor. <br>
   public Employee (String empName){<br>
      name = empName;<br>
   }<br>

   // The salary variable is assigned a value.<br>
   public void setSalary(double empSal){<br>
      salary = empSal;<br>
   }<br>

   // This method prints the employee details.<br>
   public void printEmp(){<br>
      System.out.println(\"name  : \" + name );<br>
      System.out.println("salary :" + salary);<br>
   }<br>

   public static void main(String args[]){<br>
      Employee empOne = new Employee(\"James\");<br>
      empOne.setSalary(1000);<br>
      empOne.printEmp();<br>
   }<br>
}<br>
This would produce the following result:<br>

name  : James<br>
salary :1000.0<br><br>
</p>
<h3>Class/static variables:</h3>
<p> &bull; Class variables also known as static variables are declared with the static keyword in a class,
but outside a method, constructor or a block.
<br><br>
&bull; There would only be one copy of each class variable per class,
regardless of how many objects are created from it.
<br><br>
&bull; Static variables are rarely used other than being declared as constants.
 Constants are variables that are declared as public/private, final and static. Constant variables never change from their initial value.
<br><br>
&bull; Static variables are stored in static memory. It is rare to use static
variables other than declared final and used as either public or private constants.
<br><br>
&bull; Static variables are created when the program starts and destroyed when the program stops.
<br><br>
&bull; Visibility is similar to instance variables. However, most static variables
are declared public since they must be available for users of the class.
<br><br>
&bull; Default values are same as instance variables. For numbers, the
default value is 0; for Booleans, it is false; and for object references, it is null.
 Values can be assigned during the declaration or within the constructor. Additionally values can be assigned in special static initializer blocks.
<br><br>
&bull;Static variables can be accessed by calling with the class name . ClassName.VariableName.
<br><br>
&bull;When declaring class variables as public static final, then variables names
(constants) are all in upper case. If the static variables are not public and final
 the naming syntax is the same as instance and local variables.
<br><br>
<b>Example:</b><br><br>
import java.io.*;<br><br>

public class Employee{<br>
   // salary  variable is a private static variable<br>
   private static double salary;<br><br>

   // DEPARTMENT is a constant<br>
   public static final String DEPARTMENT = \"Development \";<br>
<br>
   public static void main(String args[]){<br>
      salary = 1000;<br>
      System.out.println(DEPARTMENT+\"average salary:\"+salary);<br>
   }<br>
}<br>
This would produce the following result:<br>

Development average salary:1000<br><br>
Note: If the variables are access from an outside class the constant should be accessed as Employee.DEPARTMENT<br>
</p>
    ]]>
    </string>

        <string name="lesson3b" formatted="false">  <![CDATA[
    <p> &#10148; Every variable in Java has a data type.<br>
Data types specify the size and type of values that can be stored.<br>
Data types in Java divided primarily in two types:<br></p>
<h3> Primitive(instrinsic) and Non-primitive. </h3>
<p><b> &#10148; Primitive types</b> contains Integer, Floating points, Charaters, Booleans and Non-primitive types contains Classes,
 Interfaces and Arrays. <br>
<b>Integer</b>: This group includes byte, short, int and long, which are whole signed numbers. <br>
<b>Floating-point Numbers: </b> This group includes float and double, which represent number with fraction precision. <br>
<b>Characters:</b> This group includes char which represents character set like letters and number. <br>
Boolean: This group includes Boolean, which is special type of representation of true or false value. <br>
 </p>
<p>Some data types with their range and size:<br><br>
&bull; Byte:-128 to 127 (1 byte) <br><br>
&bull; Short:-32,768 to +32,767 (2 bytes) <br><br>
&bull; Int:-2,147,483,648 to +2,147,647 (4 bytes) <br><br>
&bull; Float:3.4e-038 to 1.7e+0.38 (4 bytes) <br><br>
&bull; Double:3.4e-038 to 1.7e+308 (8 bytes) <br><br>
&bull; Char: holds only single character (2 bytes) <br><br>
&bull; Boolean: can take only true or false (1 bytes)</p>
    ]]>
    </string>


  <string name="lesson3c" formatted="false">  <![CDATA[
    <p> &#10148;
        There are three kinds of variables in Java: </p>
 <h3>Local Variables:</h3>
  <p>1. A variables that is declared inside the methodis called local variable.<br>
  2. Local variables are created when the method, constructor or block is entered and the
  variable will be destroyed once it exist the method, constructor or block.<br>
  3. Access modifiers cannot be used for local variables.<br>
  4. Local variables are visible only within the declared method, constructor or block.<br>
  5. There is no default value for local variables so local variables should be declared and an
  initial value should be assigned before the first use.<br>
<h3>Instance Variable</h3>
<p>1. A variable that is declared inside the class but outside the method is called instance variable. It is not declared as static.<br>
2.	Instance variables are created when an object is created with the use of the keyword ‘new’ and destroyed when
the object is destroyed.<br>
3.	Instance variables hold values that must be referenced by more than one method, constructor or block,
 or essential parts of an object’s state that must be present throughout the class.<br>
4.	Instance variables can be declared in class level before or after use.<br>
5.	Access modifiers can be given for instance variables.<br>
6.	Instance variables have default values. For numbers the default value is 0, for Booleans it is false and
 for object reference it is null. Values can be assigned during the declaration or within the constructor.<br>
7.	Instance variables can be accessed directly by calling the variable name inside the class. However within static
 methods and different class (when instance variables are given accessibility)should be called using the fully qualified name.<br>
</p>

<h3> Class/Static variables </h3>
<p>1. A variable that is declared as static is called static variable. It cannot be local.<br>
2.	Class variables also known as static variables are declared with the static keyword in
a class, but outside a method, constructor or a block. <br>
3.	There would only be one copy of each class variable per class, regardless of how many objects are created from it.<br>
4.	Static variables are stored in static memory. <br>
5.	Static variables are created when the program starts and destroyed when the program stops.<br>
6.	Visibility is similar to instance variables.<br>
7.	Static variables can be name ClassName.<br>
<b>Example</b><br>
Class A<br>
{<br>
int data=50;<br>
//instance variable<br>
Static int m=100;<br>
//static variable<br>
void method(){<br>
int n=90;<br>
//local variable<br>
}<br>
}//end of class A<br>
    </p>
    ]]>
    </string>


  <string name="lesson4a" formatted="false">  <![CDATA[
    <p> &#10148; Java provides a rich set of operators to manipulate variables. We can divide all the Java operators into the
    following groups:<br>
&bull; Arithmetic operators <br>
&bull; Relational Operators <br>
&bull; Bitwise Operators <br>
&bull; Logical Operators <br>
&bull;Assignment Operators <br>
&bull; Misc Operators <br> </p>

<h3>Arithmetic Operators </h3>
 <p> &#10148; Arithmetic operators are used in mathematical expressions
In the same way that they are used in algebra.<br>
<b>Arithmetic operators</b><br>
+ Additve operator (also used for String concatenation)<br>
-Subraction operators <br>
*Remainder operator <br>
    </p>
<h3> Relational Operators</h3>
<p>There are following relational operators supported by Java language <br>
	> Greater than <br>
	< Less than <br>
	== Equal to <br>
	!= Not equal to <br>
	>= Greater than or equal to <br>
	<= Less than or equal to <br>
</p>
<h3> Bitwise Operators </h3>
<p>&#10148; Java defines several bitwise operators, which can be applied to the integer types, long int, short char, and byte.
 Bitwise operators works on bits and performs bit-by bit operation. <br>
~ Unary bitwise complement <br>
<< Signed left shift <br>
>> Signed right shift <br>
>>> Unsigned right shift & Bitwise AND <br>
^ Bitwise exclusive OR <br>
| Bitwise inclusive OR  <br> </p>
<h3>Logical Operators</h3>
<p>&#10148; The following table lists the logical operators:<br>
&& Conditional-AND <br>
|| Conditional-OR  <br>
?: Ternary (shorthand for if-then-else statement) <br>
<h3> Assignment Operators </h3>
<p>&#10148; There are following assignment operators supported by Java language: <br>
= Simple assignment operator <br>
+= Add AND assignment operator <br>
-= Subract AND assignment operator <br>
*= Multiply AND assignment operator <br>
/= Divide AND assignment operator <br>
%= Modulus AND assignment operator <br>
<<= Left shift AND assignment operator <br>
>>= Right shift AND assignment operator <br>
&= Bitwise AND assignment operator. <br>
^= Bitwise exclusive OR and assignment operator. <br>
|= Bitwise inclusive OR and assignment operator. <br></p>
<h3>Increment and Decrement Operators</h3>
<p>&#10148; Increment and decrement operators are used to add or subtract 1 from the current value of oprand.<br>
 ++ increment <br>
 -- decrement<br><br>
Increment and Decrement operators can be prefix or postfix.<br>
In the prefix style the value of oprand is changed before the result of expression and in
the postfix style the variable is modified after result.<br>
For eg.<br>
a=9;<br>
b=a+++ 5;<br>
/*a=10 b=14*/<br>
a=9;<br>
b=++a+5;<br>
/*a=10 b=15 */</p>

<h3>Miscellaneous Operator</h3>
<p>&#10148; There are few other operators supported by Java Language. <br>
Conditional Operator (?:) <br>
Conditional operator is also known as the ternary operator. <br>
The operator is written as: <br>
Variable x= (expression)? Value if true: value if false <br>
 </p>
<h3>Instance of Operator:</h3>
<p>&#10148; This operator is used only for object reference variables.
Instance operator is written as: <br>
( Object reference variable) <br>
Instance of ( class/interface type)</p>
    ]]>
    </string>

        <string name="lesson4b" formatted="false">  <![CDATA[
    <p> &#10148;
    Expressions perform operations on data and move data around. Some expression will be evaluated for their results, some for
     their side effects, some for both.<br>
An assignment expression has the following form.<br></p>
<h3>Variable-expression and assignment-operator expression </h3>
<p> &#10148; The variable expression can be just the name of a variable, or it can be an expression that selects a variable using
array indices. The value type of the right-hand-side expression must be compatible with the variable type.<br>
&#10148; An assignment expression is most often used for its side effect: it changes the value of the variable selected by the expression to the value of the expression
on the right-hand side. The value of the assignment expression is the value that is assigned to the value selected variable.<br>
An expression can have three kinds of result:<br>
1.	A value, such as the result of: (4*i)<br>
2.	A variable, such as the result of: i=4<br>
3.	Nothing (in the case of an invocation of a method declared as void)<br>
In most common assignment expressions, the assignment operator is=. Then the assignment expression has the following form.<br><br>
Variable-expression= expression<br><br>
&#10148; The Java arithmetic and bitwise opertors can be combined with = to form assignment operators.<br>
For example the += assignment operator indicates that the right-hand side should be
added to the variable, and the *= assignment operator indicates that the right-hand side should be multiplied into the variable.
    </p>
    ]]>
    </string>

        <string name="lesson4c" formatted="false">  <![CDATA[
    <p> &#10148;

    </p>
    ]]>
    </string>

        <string name="lesson5a" formatted="false">  <![CDATA[
    <p> &#10148;
        An <b>if statement</b> contains a Boolean expression and block of statement enclosed within braces.<br>
<b>Syntax</b>
if(Boolean_expression)<br>
{<br>
   //Statements will execute if the Boolean expression is true<br>
}<br>
If the Boolean expression evaluates to true then the block of code inside the if statement will be executed.
 If not the first set of code after the end of the if statement (after the closing curly brace) will be executed.<br>
 <b>Example:</b><br>
public class Test {
<br>
   public static void main(String args[]){<br>
      int x = 10;<br>
      if( x < 20 ){<br>
         System.out.print(\"This is if statement\");<br>
      }<br>
   }<br>
}<br>
This would produce the following result:<br>
This is if statement<br><br>

<h3>If else</h3>
<p>An if statement can be followed by an optional else statement, which executes when the Boolean expression is false.<br>
<b>Syntax:</b><br>
The syntax of an if...else is:<br><br>

if(Boolean_expression){<br>
   //Executes when the Boolean expression is true<br>
}else{<br>
   //Executes when the Boolean expression is false<br>
}<br>
<b>Example:</b><br>
public class Test {<br>
   public static void main(String args[]){<br>
      int x = 30;<br>
      if( x < 20 ){<br>
         System.out.print(\"This is if statement\");<br>
      }<br>
      else<br>
      {<br>
         System.out.print(\"This is else statement\");<br>
      }<br>
   }<br>
}<br>
This would produce the following result:<br>
This is else statement<br><br>
</p>
<h3>The if...else if...else Statement:</h3>
<p>&#10148; An if statement can be followed by an optional else if...else statement,
which is very useful to test various conditions using single if...else if statement.<br>
<b>Syntax:</b><br>
The syntax of an if...else is:<br>
if(Boolean_expression 1){<br>
   //Executes when the Boolean expression 1 is true<br>
}else if(Boolean_expression 2){<br>
   //Executes when the Boolean expression 2 is true<br>
}else if(Boolean_expression 3){<br>
   //Executes when the Boolean expression 3 is true<br>
}else {<br>
   //Executes when the none of the above condition is true.<br>
}<br>
<b>Example:</b><br>
public class Test {<br><br>

   public static void main(String args[]){<br>
      int x = 30;<br><br>

      if( x == 10 ){<br>
         System.out.print(\"Value of X is 10\");<br>
      }else if( x == 20 ){<br>
         System.out.print(\"Value of X is 20\");<br>
      }else if( x == 30 ){<br>
         System.out.print(\"Value of X is 30\");<br>
      }else{<br>
         System.out.print(\"This is else statement\");<br>
      }<br>
   }<br>
}<br>
This would produce the following result:<br>
Value of X is 30<br><br>
    </p>
    <h3> Nested if...else Statement </h3>
     <p> &#10148; It is always legal to nest if-else statements which means
      you can use one if or else if statement inside another if or else if statement.<br><br>

<b>Syntax:</b><br>
The syntax for a nested if...else is as follows:<br>
if(Boolean_expression 1){<br>
   //Executes when the Boolean expression 1 is true<br>
   if(Boolean_expression 2){<br>
      //Executes when the Boolean expression 2 is true<br>
   }<br>
}<br>
You can nest else if...else in the similar way as we have nested if statement.<br><br>

<b>Example:</b><br>
public class Test {<br>

   public static void main(String args[]){<br>
      int x = 30;<br>
      int y = 10;<br>
      if( x == 30 ){<br>
         if( y == 10 ){<br>
             System.out.print(\"X = 30 and Y = 10\");<br>
          }<br>
       }<br>
    }<br>
}<br>
This would produce the following result:<br>
X = 30 and Y = 10<br>
    ]]>
    </string>

        <string name="lesson5b" formatted="false">  <![CDATA[
    <p> &#10148;
        A <b>switch statement</b>
        is used instead of nested if…else statement. It is multiple branch decision statement.
         A switch statement test a variable with list of values for equivalence. Each value is called a case.
          The case value must be constant i. <br>

<b>SYNTAX</b><br>
Switch(expression){<br>
Case constant:<br>
//sequence of optional statements<br>
Break; //optional <br>
Case constant:<br>
//sequence of optional statements<br>
Break;//optional <br>
.<br>
.<br>
.<br>
Default://optional <br>
//sequence of optional statements <br>
}<br>

Individual case keyword and a semicolon (:)is used for each constant. Switch too is used for skipping to particular case,
after jumping to that case it will execute all statements from cases beneath that case this is called as “Fall Through”.<br>

In the example below, for example, if the value 2 is entered, then the program will print two one something else!<br>

Switch(i)<br>
{<br>
Case4: System.out.printIn(“four”);<br>
Break;<br>
Case3: System.out.printIn(“three”);<br>
Break;<br>
Case2: System.out.printIn(“two”);<br>
Case1: System.out.printIn(“one”);<br>
Default: System.out.printIn(“something else!”);<br>
}<br>
<b>Example:</b><br>
public class Test {<br>

   public static void main(String args[]){<br>
      //char grade = args[0].charAt(0);<br>
      char grade = \'C\';<br>

      switch(grade)<br>
      {<br>
         case \'A\' :
            System.out.println(\"Excellent!\");<br>
            break;<br>
         case \'B\' :<br>
         case \'C\' :<br>
            System.out.println(\"Well done\");<br>
            break;<br>
         case \'D\' :<br>
            System.out.println(\"You passed\");<br>
         case \'F\' :<br>
            System.out.println(\"Better try again\");<br>
            break;<br>
         default :<br>
            System.out.println(\"Invalid grade\");<br>
      }<br>
      System.out.println(\"Your grade is \" + grade);<br>
   }<br>
}<br>
Compile and run above program using various command line arguments. This would produce the following result:<br>

$ java Test<br>
Well done<br>
Your grade is a C<br>
$
    </p>
    ]]>
    </string>

        <string name="lesson5c" formatted="false">  <![CDATA[
   <h3> While loop </h3>
    <p> &#10148;
        Java <b>while loop</b> is used to execute statement(s) until a condition holds true.<br>
<b>Syntax</b> <br>
While (condition(s)) {<br>
// statement<br>
}<br>
If the condition holds true then the body of loop is executed, after execution of loop body condition is tested again and
if the condition is true then body of loop is executed again and the process repeats until condition becomes false.<br>

1. Condition is always evaluated to true or false and if it is a constant, for example while (C) {…} where c
is a constant then any non zero value of c is considered true and zero is considered false.<br>
1.	You can test multiple conditions such as <br>
While (a > b && c !=0) {<br>
// statement <br>
}<br>
Loop body is executed till value of a is greater than value of b and c is not equal to zero.<br>
2.	Body of loop can contain more than one statement. For multiple statement you need to place them
in a block using {} and if body of loop contain only single statement you can optionally use {}.<br>
It is recommended to use braces always to make your program easily readable and understandable.<br><br>
<b>Example:</b><br>
public class Test {<br><br>

   public static void main(String args[]) {<br>
      int x = 10;<br><br>

      while( x < 20 ) {<br>
         System.out.print("value of x : " + x );<br>
         x++;<br>
         System.out.println();<br>
      }<br>
   }<br>
}<br>
This would produce the following result:<br>

value of x : 10<br>
value of x : 11<br>
value of x : 12<br>
value of x : 13<br>
value of x : 14<br>
value of x : 15<br>
value of x : 16<br>
value of x : 17<br>
value of x : 18<br>
value of x : 19<br>
    </p>
    <h3> Do While loop </h3>
    <p>The while loop makes a test condition before the loop is executed.
    Therefore, the body of the loop may not be executed at all if the condition is not satisfied at the very first attempt.<br>
On some occasions it might be necessary to execute the body of the loop before the test is performed. Such situation can be
handled with the help of the do statement.<br>
<b>SYNTAX</b><br>
initialization;<br>
do {<br>
//statement(s)…<br>
} while (condition);<br>

On reaching the do statement, program evaluate the body of loop first.<br>
At the end of the loop, the condition in the while statement is evaluated.
If the condition is true, the program continues to evaluate the body of loop again and again till condition becomes false.<br>
<br>
int i=0;<br>
do<br>
{<br>
System.out.printIn(“i is:”+ i);<br>
i++;<br>
}while(i<5);<br>
<br>

<b>Output would be</b>:<br>
i is:0<br>
i is:1<br>
i is:2<br>
i is:3<br>
i is:4<br>
</p>
<h3> For loop </h3>
<p> &#10148;
Java for loop used to repeat execution of statement(s) until a certain condition holds true.
The general form of the for statement can be expressed as follows: <br>
A for loop is a repetition control structure that allows you to efficiently
 write a loop that needs to execute a specific number of times.<br>
A for loop is useful when you know how many times a task is to be repeated.<br>
<b>Syntax:</b><br>
for(initialization; Boolean_expression; update)<br>
{<br>
   //Statements<br>
}<br>
You can initialize multiple variables, test many conditions and perform increments or decrements on many variables according
to requirement. All three components of loop are optional.<br>
For example, to execute a statement 5 times;<br>
For (i=0,<5;i++)<br>
Statements…;<br><br>
<b>Example:</b><br>
public class Test {<br><br>

   public static void main(String args[]) {<br><br>

      for(int x = 10; x < 20; x = x+1) {<br>
         System.out.print(\"value of x : \" + x );<br>
         System.out.println();<br>
      }<br>
   }<br>
}<br>
This would produce the following result:<br>
value of x : 10<br>
value of x : 11<br>
value of x : 12<br>
value of x : 13<br>
value of x : 14<br>
value of x : 15<br>
value of x : 16<br>
value of x : 17<br>
value of x : 18<br>
value of x : 19<br>
    ]]>
    </string>

        <string name="lesson6a" formatted="false">  <![CDATA[
    <h3> Classes </h3>
    <p> &#10148;
        Java is true object-oriented language and therefore the underlying structure of all Java programs is classes.<br>
&#10148; A class is nothing but a blueprint or a template for creating objects which defines its properties and behaviours.
Java class objects exhibits the properties and behaviors defined by its class. A class can contain fields and methods to
describe the behaviour of an object.<br>
</p>
<h3>Defining a class</h3>
<p> &#10148;Once the class type has been defined, we can create “variables” of that type using declaration that are similar to
the basic type declarations. In Java, these variables are termed as instances of classes, which are the actual objects.
The basic form of a class definition is:<br><br>

Class classname[extends superclassname]<br>
{<br>
[fields declaration;]<br>
[methods declaration;]<br>
}<br>
</p>
<h3>Fields</h3>
<p> &#10148; A Java field is a variable inside a class. For instance, in a class representing an employee,
the Employee class might contain the following fields:<br>
&bull;name<br>
&bull;position<br>
&bull;salary<br>
&bull;hiredDate<br>
</p>
<h3>Field Declaration Syntax </h3>
<p> &#10148; A Java field is declared using the following syntax:<br<br>
[access_modifier] [static] [final] type name [=initial value;<br>
The square brackets [] around some of the keywords mean that this option is optional. Only type and name are required.</p>

<h3>Methods</h3>
<p> &#10148; Methods are nothing but members of a class that provide a service for an object of perform some business logic. Java fields and member functions names are case sensitive. Current states of s class’s corresponding object are stored in the object’s instance variables.
Methods define the operations that can be performed in Java programming. </p>

<h3>Method Declaration Syntax</h3><br>
Type methodname (parameter-list)<br>
{<br>
Method body;<br>
}<br><br>
Below is an example showing the Objects and Classes of the Cube class that defines 3 fields namely length,breath <br>
Below is an example showing the Objects and Classes of the Cube class that defines 3 fields namely length, breadth and height.
Also the class contains a member function getVolume().<br><br>

Public class Cube<br>
{ <br>
Int length;<br>
Int breath;<br>
 Int height;<br>
 Public int getVolume() <br>{<br>
Return (length* breath*height);<br>
  &nbsp;&nbsp;}<br>
}
  </p>
  <p>shows the complete Employee class containing one private data field and two
public methods, all of which are nonstatic. This class becomes the model for a new data type
named Employee; when Employee objects eventually are created, each will have its own
empNum field, and each will have access to two methods—one that provides a value for its
empNum field and another that retrieves the value stored there.<br>
  public class Employee<br>
{<br>
private int empNum;<br>
public int getEmpNum()<br>
{<br>
return empNum;<br>
}<br>
public void setEmpNum(int emp)<br>
{<br>
empNum = emp;<br>
}<br>
}
</p>
<p> &#10148; When you create a class like Employee, you can compile it, and you should to locate
typographical errors. However, you cannot execute the class because it does not contain a
main() method. A class like Employee is intended to be used as a data type for objects within
other applications, as you will see in the next section.
</p>
   <br><br>
    ]]>
    </string>

        <string name="lesson6b" formatted="false">  <![CDATA[
    <p>&#10148;
     As pointed out earlier, an object in java is essentially a block of memory that contains space to store all the instance
     variables. Creating an object is also referred to as instantiating an object.<br>

&#10148;In Java, the new keyword is used to create new objects.<br>
There are three steps when creating an object from a class:<br>
<b>Declaration:</b> The \‘new\’ key word is used to create the object.<br>
<b>Initialization:</b> The \‘new\’ keyword is followed by a call to a constructor.<br>
This call initializes the new object.<br>
Example of creating an object is given below:<br><br>
Rectangle rect;<br>
Rect= new Rectangle();<br>
In the first statement we declared the object rect. It declares a variable to hold the object reference and in
second we instantiated the object which actually assigns the object reference to the variable.
Variable rect is now an object of the Rectangle class.<br>
</p>

<h3>Accessing class members</h3>
<p>&#10148; Now that we have created objects, each containing its own set of variables, we should assign values to those variables in
 order to use them in our program.<br>
Remember, all variables must be assigned values before they are used. Since we are outside the class, we cannot access
the instance variables and the methods directly. To do this, we must use the concerned object and the dot operator as shown below:<br>
Here object name is the name of the object, variable name is the name of the instance variable inside the object that we wish to
access, methodname is the method that we wish to call, and parameter-list is a comma separated list of \“actual values\” (or expressions) that must match in type and number with the Parameter list of the methodname declared in the class.<br>
The instance variables & method of the Rectangle class may be accessed and assigned values as follows:<br><br>
Rect1.width=15<br>
Rect1.lenth=20;<br>
Rect2.width=24;<br>
Rect2.lenth=34;<br>
Rect1.area(0);<br>
    </p>
    <p> Another example, It shows an application that instantiates two
Employee objects. The two objects, clerk and driver, each use the setEmpNum() and
getEmpNum() method one time. The DeclareTwoEmployees application can use these
methods because they are public, and it must use them with an Employee object because the
methods are not static. <br><br>
public class DeclareTwoEmployees<br>
{<br>
public static void main(String[] args)<br>
{<br>
Employee clerk = new Employee();<br>
Employee driver = new Employee();<br>
clerk.setEmpNum(345);<br>
driver.setEmpNum(567);<br>
System.out.println(\"The clerk\'s number is \" +<br>
clerk.getEmpNum() + \" and the driver\'s number is \" +<br>
driver.getEmpNum());<br>
}<br>
}<br><br>
<b>Output of the application.</b><br>
The clerk\'s number is 345 and the driver\'s number is 567.</p>
    ]]>
    </string>

        <string name="lesson6c" formatted="false">  <![CDATA[
    <p> &#10148;
        Constructor in java is a special type of method that is used to initialize the object.<br>
Java constructor is invoked at the time of object creation. It constructs the values i.e. provides data for the object
 therefore it is known as constructor.<br>
 </p>
<h3>Rules of java constructors</h3>
<p>&#10148; There are basically two rules defined for the constructor. <br>
&bull; Constructor name must be same as its class name <br>
&bull; Constructor must have no explicit return type
</p>
<h3>Types of java constructor</h3>
<p>&#10148; There are two types of constructors:<br>
Default constructor (no-arg constructor) <br>
Parameterized constructor<br>
</p>
<h3>Java Default Constructor</h3>
<p>&#10148; A constructor that have no parameter is known as default constructor. <br>
Syntax of default constructor:<br>
<class_name> (){}<br><br>

<b>Example </b><br>
In this example, we are creating the no-arg constructor in the Bike class. It will be invoked at time of object creation.<br><br>

Class Bike1{<br>
Bike1(){<br>
Syntax.out.printIn(“Bike is created”);<br>
}<br>
Public static void main(String args[]){<br>
Bike1 b=new Bike1();<br>
}<br>
}<br><br>
</p>

<h3>Java parameterized constructor</h3>
<p>&#10148; A constructor that have parameters is known as parameterized constructor.<br>
Why use parameterized constructor?<br>
Parameterized constructor is used to provide different values to the distinct objects.<br><br>

<b>Example:</b><br>
In this example, we have created the constructor of Student class that have two parameters in the constructor.<br><br>

Class Student4{<br>
int id;<br>
String name;<br>
Studen4(int I,String n){<br>
id= I;<br>
Name= n;<br>
}<br>
Void display(){<br>
System.out.printIn(id+””+name);<br>
}<br>
Public static void main(string args[]){<br>
Student4 s1= new <br>
Student4(111,”Karan”);<br>
Student4(222,”Aryan”);<br>
S1.display();<br>
S2.display();<br>
}<br>
}<br>
    </p>

    ]]>
    </string>

        <string name="lesson7a" formatted="false">  <![CDATA[
    <p> &#10148;
         Array is an object the contains elements of similar data type. It is data structure where we store similar elements.
         We can store only fixed set of elements in a java array.
     Array in java is index based, first element of the array is stored at 0 index.<br><br>
     <b>Creating Arrays:</b><br>
You can create an array by using the new operator with the following syntax:<br>

arrayRefVar = new dataType[arraySize];<br>
The above statement does two things:<br>

It creates an array using new dataType[arraySize];<br><br>

It assigns the reference of the newly created array to the variable arrayRefVar.<br><br>

Declaring an array variable, creating an array, and assigning the reference of the
array to the variable can be combined in one statement, as shown below:<br><br>

dataType[] arrayRefVar = new dataType[arraySize];<br><br>
Alternatively you can create arrays as follows:<br><br>

dataType[] arrayRefVar = {value0, value1, ..., valuek};<br><br>
The array elements are accessed through the index. Array indices are 0-based; that is, they start from 0 to arrayRefVar.length-1.<br><br>

<b>Example:</b><br>
Following statement declares an array variable, myList, creates an array of 10 elements of double type and assigns its reference to myList:<br>

double[] myList = new double[10];<br><br>

<b>Processing Arrays:</b><br>
When processing array elements, we often use either for loop or foreach loop because all of the elements in an array are of the same type and the size of the array is known.
<br>
<b>Example:</b><br>
Here is a complete example of showing how to create, initialize and process arrays:<br><br>

public class TestArray {<br><br>

   public static void main(String[] args) {<br>
      double[] myList = {1.9, 2.9, 3.4, 3.5};<br>
<br>
      // Print all the array elements<br>
      for (int i = 0; i < myList.length; i++) <br>{
         System.out.println(myList[i] + \" \");<br>
      }<br>
      // Summing all elements<br>
      double total = 0;<br>
      for (int i = 0; i < myList.length; i++) {<br>
         total += myList[i];<br>
      }<br>
      System.out.println(\"Total is \" + total);<br>
      // Finding the largest element<br>
      double max = myList[0];<br>
      for (int i = 1; i < myList.length; i++) {<br>
         if (myList[i] > max) max = myList[i];<br>
      }<br>
      System.out.println(\"Max is \" + max);<br>
   }<br>
}<br>
This would produce the following result:<br>

1.9<br>
2.9<br>
3.4<br>
3.5<br>
Total is 11.7<br>
Max is 3.5<br><br>

<b>The foreach Loops:</b><br>
JDK 1.5 introduced a new for loop known as foreach loop or enhanced for loop, which enables you to traverse the complete array sequentially without using an index variable.
<br>
<b>Example:</b><br>
The following code displays all the elements in the array myList:
<br><br>
public class TestArray {<br>
<br>
   public static void main(String[] args) {<br>
      double[] myList = {1.9, 2.9, 3.4, 3.5};<br>
<br>
      // Print all the array elements<br>
      for (double element: myList) {<br>
         System.out.println(element);<br>
      }<br>
   }<br>
}<br>
This would produce the following result:<br>

1.9<br>
2.9<br>
3.4<br>
3.5<br>
    </p>
<h3>Types of Array in java</h3>
<p>1.Single Dimensional Array<br>
2.Multidimensional Array
</p>
<h3>Single Dimensional Array</h3>
<p> &#10148;Declaring Array Variables:<br>
To use an array in a program, you must declare a variable to reference the array, and you must specify the type of array the
variable can reference. Here is the syntax for declaring an array variable:<br><br>

dataType[][] arrayName;<br>
or<br>
dataType arrayName[]; <br><br>

<b>instantiating Arrays:</b><br>
You can instantiate an array by using new operator with the following syntax:<br><br></p>

<p class="program">
arrayName = new dataType[arraySize];<br></p>
<p>
The above statement does two things:<br>
It creates an array using new dataType[arraySize];<br>
It assigns the reference of the newly created array to the variable arrayName.
</p>

<h3>Multidimensional Array</h3>
<p> &#10148;Syntax to Declare Multidimensional Array in java<br><br>

dataType[][] arrayName;<br>
or<br>
dataType arrayname[][];<br><br>

<b>Example to instantiate Multidimensional Array</b><br>
int[][] arr=new int[2][3];<br>
//2 row and 3 column<br><br>


<b>Example to initialize Multidimensional Array in java</b><br>
arr[0][0]=1;<br>
arr[0][1]=2;<br>
arr[0][2]=3;<br>
arr[1][0]=4;<br>
arr[1][1]=5;<br>
arr[1][2]=6;<br><br>
</p>
<h3>Passing Arrays to Methods:</h3>
<p> &#10148; Just you can pass primitive type values to methods, you can also pass arrays to methods.<br>
For example, the following method displays the element in an int array:<br><br>
public static void display(int[arr) {<br>
System.out.print(arr[i] +” “);<br>
}<br>
}<br>
</p>
<h3>Returning an Array from Method:</h3>
<p> &#10148; Method may also return an array. For  example, the method shown  below returns an
array that  is the copy of another array:<br><br>
public static int[] copyarray( int[] list) {<br>
int[] result = new int[list.length];<br><br>

for (int I = 0; < list.length – 1 ; i++) {<br>
result[i] = list[i];<br>
}<br>
Return result;<br>
}<br>
</p>
    ]]>
    </string>



        <string name="lesson7b" formatted="false">  <![CDATA[
    <p> &#10148;
        In java, string is basically an object that represents sequence of char values.
        The Java platform provides the String class to create and manipulate strings. <br>

<h3>Creating Strings</h3>
<p>
1)The most direct way to create a string is to write:<br>
String str1 = “Hello Java!”;<br><br>

2)Using another String object <br>
String str2 = new String(str1);<br><br>

3)Using new Keyword<br>
String str3 = new String(“Java”);<br><br>

4)Using + operator (Concatenation)<br>
String str4 = str1 + str2;<br>
or,<br>
String str5 = “hello ”+”java”;<br><br>

<b>String Length:</b><br>
Length() method returns the number of characters contained in the string object.<br>
String str1 = “Hello java”;<br>
Int len  = str1.length();<br>
System.out.println(String Length is :”+ len);<br>

<b>Concatenating Strings:</b><br>
The String class includes a method for concatenating two strings:<br>
String1.concat(string2);<br>
This returns a new string that is string1 with string2 added to it at the end.<br>
 You can also use the concat() method with string literals, as in:<br>
“Hello”.concat(“Java”);<br>
String are more commonly concatenated with the + operator, as in:<br><br>

“Hello”+”Java”+”!”<br>
which result in:<br>
“Hello Java!”<br><br>

<b>String Methods:</b><br>
1 char charAt(int index)<br>
&#10148; returns char value for the particular index<br><br>
2 int length()<br>
&#10148; returns string length<br><br>

3 static String format(String format , Object … args)<br>
&#10148; returns formatted string<br><br>

4 static String format(Locale l, String format, Object…args)<br>
&#10148; returns formatted string with given locale<br><br>

5 string substring(int beginIndex)<br>
&#10148; returns substrings for given begin index<br><br>

6string substring(int beginIndex, int endIndex)<br>
&#10148; returns substring for given index and end index<br><br>

7 boolean contains(Charsequence s)<br>
&#10148; returns true or false after matching the sequence of char value<br><br>

8 static String join(CharSequence delimiter,  CharSequence…elements)<br>
&#10148; returns a joined string<br><br>

9 static String join(CharSequence delimiter, Iterable<? Extends CharSequence> elements)<br>
&#10148; returns a joined string<br><br>

10 boolean equals(Object another)<br>
&#10148; Checks the equality of string with object<br><br>

11 boolean isEmpty()<br>
&#10148; Checks if string is empty<br><br>

12 string concat(String str)<br>
&#10148; concatenates specified string<br><br>

13 string replace(char old, char new)<br>
&#10148; replaces all occurrences of specified char value<br><br>

14 string replace (CharSequence old, CharSequence new)<br>
&#10148; replaces all occurrences of specified CharSequence<br><br>

15 string trim()<br>
&#10148; returns trimmed string omitting leading and trailing spaces<br><br>

16 string spilts(String regex)<br>
&#10148; returns splitted string matching regex<br><br>

17 string split(String regex, int limit)<br>
&#10148; returns splitted string matching regax and limit<br><br>

18 string intern()<br>
&#10148; returns interned string<br><br>

19 int indexOf(int ch)<br>
&#10148; returns specified char value index<br><br>

20 int indexOf(int ch, int fromIndex)<br>
&#10148; returns specified char value index starting with given index<br><br>

21 int indexOf(String substring)<br>
&#10148; return specified substring index<br><br>

22 int indexOf(String substring, intfromIndex)<br>
&#10148; returns specified substring index starting with given index<br><br>

23 string toLowercase()<br>
&#10148; returns string in lowercase.<br><br>

24 string toLowercase(locale I) <br>
&#10148; returns string in lowercase using specified locale.<br><br>

25 string to Uppercase()<br>
&#10148; returns string in uppercase.<br><br>

26 string toUppercase(locale I)<br>
&#10148; returns string in uppercase using specified locale.
    </p>
    ]]>
    </string>

        <string name="lesson7c" formatted="false">  <![CDATA[
    <p> &#10148;
        Vector implement List interface. Like  ArrayList it also maintains insertion order but it is rarely used in no
        -thread environment as it is
        synchronized and due to which it gives poor performance in searching, adding, delete and update of its elements.</p>

<h3>Three ways to create vector class object</h3>
<p><b>Method 1</b>:<br>
Vector vec = new vector();<br><br>

&#10148; It creates an empty Vector with the default initial capacity of 10. It means the Vector will be re-sized when the 11th
 elements needs to be inserted into the Vector. Note: By default, vector doubles its size.<br><br>

&#10148; i.e. In this case the Vector size would remain 10 till 10 insertions and once we try to insert the
 11th element It would become 20 (double of default capacity 10).<br><br>

<b>Method 2</b>:<br>
Vector object = new Vector(int initialCapacity)<br><br>

Vector object = new Vector(3);<br>
It will create a Vector of initial capacity of 3.<br><br>

<b>Method 3</b>:<br>
Vector vec = new vector(int initialCapacity, capacityIncrement)<br><br>

Vector vec = new vector(4,6)<br>
&#10148; Here we have provided two arguments. The initial capacity is 4 and capacityIncrement is 6.<br>
It means upon insertion of 5th element the would be 10 (4+6) and on 11th insertion it would be 16(10+6).<br>
<br>
<b>Vector Methods</b>:<br>
void addElement(Object element):<br>
It inserts the element at the end of the Vector.<br><br>

int capacity():<br>
&#10148; This method returns the current capacity of the vector.<br><br>

int size():<br>
&#10148; It returns the current size of the vector.<br><br>

void setSize(int size):<br>
&#10148; It changes the existing size with the specified size.<br><br>

boolean containsAll(Collection c):<br>
&#10148; This method checks whether the specified element is present in the Vector.<br><br>

object elementAt(int index):<br>
&#10148; It returns the elements present at specified location in Vector.<br><br>

object firstElement():<br>
&#10148; It is used for getting the first element of the vector.<br><br>

object lastElement():<br>
&#10148; Returns the element of the array.<br><br>

object get(int index):<br>
&#10148; Returns the element at the specified index.<br><br>

boolean isEmpty():<br>
&#10148; This method returns true if vectors doesn’t have any element.<br><br>

boolean removeElement(Object element):<br>
&#10148; Removes the specified element from the vector.<br><br>

boolean removeAll(Collection c):<br>
&#10148; It removes all those elements from vector which are present in the Collection c.<br>

void setElementAt(Object element, int index):<br>
&#10148; It updates the element of the specified index with the given element.
    </p><br><br>
    ]]>
    </string>

        <string name="lesson8a" formatted="false">  <![CDATA[
    <p> &#10148;
        An <b>interface</b> is a reference type in Java, it is similar to class, it is a collection of abstract methods.<br>

&#10148; A class implements an interface, thereby inheriting the abstract methods of the interface. Along with abstract methods an interface may also contains constants, default methods, static methods, and nested types.
Methods bodies exists only for default methods and static methods.<br>
Writing an interface is a similar to writing a class.
But a class describes the attributes and behaviors of an object. And an interface contains behaviors that a class implements.
Unless the class that implements the interface is abstract, all the methods of the interface need to be defined in the class.
The General form of an interface definition is:<br><br>
[visibility] interface InterfaceName [extends other interfaces]<br>
{<br>
Variables declarations;<br>
Abstract method declaration;<br>
}<br><br>

Here, interface is the keyword InterfaceName is any valid java variable(just like class name).<br>
 Variables are declared as follows:<br>
Static final type VariableName=Value;<br><br>

<b>Example</b>:<br>
Interface printable{<br>
Void print();<br>
}
</p>
<p class="program">Class A6 implements printable{<br>
Public void print(){System.out.printIn(“Hello”);}<br><br>

Public static void main(String args[]){<br>
A6 obj = A6();<br>
}<br>
}<br>
Output: Hello<br>
    </p>
    ]]>
    </string>

        <string name="lesson8b" formatted="false">  <![CDATA[
    <p> &#10148;
        An interface can extend another interface, similarity to the way that a class can extend another class.<br>
The extends keyword is used to extend an interface, and the child interface inherits the methods of the parent interface.<br>
This is achieved using the keyword extends as shown below:<br><br>
Public class C extends A implements B {<br>
//trying to override doSomething…<br>
Public int myMethod(int x) {<br>
Return doSomethingElse(x);<br>
}<br>
}<br><br>

<b>Example</b><br>
interface ItemConstants<br>
{<br>
int code=2015;<br>
string name=”James”;<br>
}<br>
Interface Item extends ItemConstants{<br>
Void display<br>
    </p><br><br>
    ]]>
    </string>

        <string name="lesson8c" formatted="false">  <![CDATA[
    <p> &#10148;
        A class uses implements keyword to implement an interface. The implements keyword appears
         in the class declaration following the extends portion of the declaration.<br><br>

class classname implements interfacename<br>
{<br>
body of class<br>
}<br>
here the classname “implements” the interface interfacename. A more general form of implementation may look like this:<br><br>
class classname extends superclass<br>
implements interface1, interface2, …<br>
{<br>
body of classname<br>
}<br><br>

Example:</p><br>
<p class="program">
interface Myinterface<br>
{<br>
Public void method1();<br>
Public void method2();<br>
}<br><br>

class XYZ implements Myinterface<br>
{<br>
Public void method1()<br>
{<br>
System.out.printLn(“implementation of method1”);<br>
}<br>
public void method2()<br>
{<br>
System.out.printLn(“implementation of method2”);<br>
}<br><br>

public static void main(String arg[])<br>
{<br>
My interface obj = new XYZ();<br>
obj.method1();<br>
}<br>
}<br>
Output:<br>
Implementation<br>
    </p>
    ]]>
    </string>

        <string name="lesson9a" formatted="false">  <![CDATA[
    <p> &#10148;
A <b>java package</b> is a group of similar types of classes, interfaces and sub-packages.<br>
Package in java can be categorized in two form, built-in package and user-defined package.<br>
There are many built-in packages such as java, lang, awt, javax, swing, net, io, util, sql, etc.<br></p>
<h3>Advantages of java packages</h3>
<p class="program">
1)	Java packages is used to categorize the classes and interfaces so that they can be easily maintained.<br>
2)	Java packages provide access protection.<br>
3)	Java packages removes naming collision.<br><br>
</p>
<p><b>Example</b><br>
The packages keyword is used to create a packages in java.<br>
package mypack;<br>
public class Simple{<br>
public static void main(String args[]){<br>
System.out.println(“Welcome to packages”);<br>
}<br>
}<br>
    </p>
    ]]>
    </string>

        <string name="lesson9b" formatted="false">  <![CDATA[
    <p> &#10148;
        An <b>Application Programming Interface(API)</b>, in the context of prewritten packages, classes, and interfaces with their respective methods, fields and constructors.
Similar to a user interface, which facilitates interaction between humans and
computers, an API serves as a software program interface facilitating interaction.<br>
&#10148; In Java, most basic programming tasks are performed by the API’s classes and packages, which are helpful in minimizing
the number of lines written with in pieces of code.<br>
Java system packages and their classes:<br>
<i>java.lang</i> <br><br>
&#10148;Language support classes. They include classes
for primitive types, strings, math
       functions, threads and exceptions.<br><br>

      <i>java.util</i><br><br>
&#10148; Language utility classes such as vectors, hash tables, random numbers, data etc.<br>
      <i>java.io</i><br><br>
      &#10148; Input/Output support classes. They provides facilities for the input and output of data.<br>

      <i>java.awt</i><br><br>
      &#10148;Set of classes for implementing graphical user interfaces. They include classes for windows,
      buttons, lists, menus, and so on.<br>

     <i>java.net</i><br><br>
    &#10148; classes for networking. They include classes for communicating with local computers as well
    as with internet servers.<br>

     <i>java.applet</i><br> <br>
     &#10148; Classes for creating and implementing?ing applets.
    </p>    ]]>
    </string>

        <string name="lesson9c" formatted="false">  <![CDATA[
    <p> &#10148;
           The <b>packages</b> named java contains the packages awt, which in turn contains various classes
   required for implementing graphical user interface.<br>
   The first approach is to use the fully qualified class name of the class that we want use.<br><br>
   &#10148; for example, if we want to refer to the class
   Color in the awt packages, then we may do so as follows<br><br>
   <i>java.awt.Colour</i><br><br>
   &#10148; Notice that awt is a packages within the package java and the hierarchy is represented by
   Separating the levels with dots.<br>
   &#10148; This approach is perhaps the best and easiest one if we need to access the class only once
   or when we need not have to access any other classes of the package.<br>
   &#10148; But, in many situation, we might want to use a class in a number of places in a program or
   we may like to use many of the classes contained in a package. <br>
   We may achieve this easily as follows:<br><br>

   import packagename.classname;<br>
   or<br>
   import packagename.*<br>
   &#10148;These are known as import statement and must appear at the top of the file, before any class
   declarations, import is a keyword.<br>
    </p>    ]]>
    </string>

        <string name="lesson10a" formatted="false">  <![CDATA[
    <p> &#10148;
        Threads are implementing in the form of objects that contain a method called run().<br>
The run () method is the heart and soul of any thread.<br>
Public void run()<br>
{<br>
/*Your implementation of the thread here*?/<br>
}<br>

&#10148;The run() method should be invoked by an object of the concerned thread.
This can be achieved by creating the thread and initiating it with the help of another thread method called start().<br>

A new thread can be crated in two ways:<br>
1.By creating a thread class:<br>
Define a class that extends thread class and override its run() method with the code required by the thread.<br><br>

2.By converting a class to a thread:<br>
Define a class that implements Runnable interface. The runnable interface has only one method(),
that is to be defined in the method with the code to be executed by the thread.<br><br>
    </p>
    ]]>
    </string>

        <string name="lesson10b" formatted="false">  <![CDATA[
    <p> &#10148;
        Whenever we want to stop a tread from running further, we may do so by calling its stop() method, like:
aThread.stop();	<br>

&#10148;This statement causes the thread to move to the dead state. The stop method may use when the premature death of
a thread is desired.<br>&#10148;
</p>
<h3>Blocking a thread:</h3>
<p>&#10148; A thread can also can temporarily suspended or blocked from entering into the runnable and subsequently running
 state by using either of the following thread methods:<br><br>
sleep()<br>
//blocked until further orders <br><br>

wait()<br>
//blocked until certain condition occurs <br>
These methods cause the thread to go into the blocked(or not-runnable) state.<br>
    </p>
    ]]>
    </string>

        <string name="lesson10c" formatted="false">  <![CDATA[
    <p> &#10148;
        The life cycle of the thread in java is controlled by JVM.
A thread can be in one of the five states.<br>
New<br>
Runnable<br>
Running<br>
Non-Runnable (Blocked)<br>
Terminated<br><br>

1)<b>New</b><br>
The thread is in new state if you create an instance of Thread class but before the invocation of the start() method.<br><br>

2)<b>Runnable</b><br>
The thread is in runnable state after invocation of start()
method, but the thread scheduler has not selected it to be the running thread.<br><br>


3)<b>Running</b><br>
The thread is I running state if the thread scheduler has selected it.<br><br>

 4)<b>Non-Runnable(Blocked)</b><br>
This is state when the thread is still alive, but is currently
waiting for other thread to finish  using thread join or it can be waiting for some resources to available.<br><br>

5)<b>Terminated</b><br>
A thread is terminated or dead state when its run() method exist.<br><br>
    </p>
    ]]>
    </string>


    <string name="action_share">Share</string>
    <string name="auto">You have selected the Auto DayNight Mode</string>
    <string name="action_auto">Auto DayNight Mode</string>
    <string name="title1">James Russel C. Bautista\n Designer &amp; Developer\n jrussel.bautista@yahoo.com.ph</string>
    <string name="flor">Flor Rancapan\n Researcher\n flor23rancapan@yahoo.com.ph</string>
    <string name="che">Cheryl Catabay\n Researcher\n cherylcatabay@yahoo.com.ph</string>
    <string name="rush">Russhel Villaruz\n Researcher\n russhelvillaruz@yahoo.com.ph</string>
    <string name="x"><![CDATA[ <b><font color=#E91E63>Kamote & me</font></b> ]]></string>
    <string name="text_copied">Text copied to clipboard.</string>
    <string name="change_theme">Theme [Day Mode]</string>
    <string name="empty_text">aaaaa</string>
    <string name="hello_world">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</string>
    <string name="search_hint">Search</string>
    <string name="to">To:</string>
    <string name="subject">Subject:</string>
    <string name="content">Message</string>

    <string name="test_string">
        Available at: http//www.studyinfinity.com
    </string>
    <string name="test_string1">
        Available at: www.tutorialspoint.com
    </string>

    <string name="ref1">
        Available at: www.javabasicsjavaprogrammingtutorial.com
    </string>

    <string name="ref2">
       Download the pdf file here: www.cengage/javaprogramming.pdf
    </string>

        <string name="ref3">
       We dont own the video tutorials that were using in this application. To view the whole tutorials just visit the
            youtube channel: www.youtube.com/programmingknowledge
    </string>


    <string name="action_help">Help</string>
    <string name="lesson">
        &#10148; opens a list of Topics regarding Java programming.
    </string>

      <string name="video">
        &#10148; opens a list of Topics regarding Java programming.
    </string>

         <string name="importantQuestion">
        &#10148; opens a list of Topics regarding Java programming.
    </string>

         <string name="exercises">
        &#10148; opens a list of Topics regarding Java programming.
    </string>

         <string name="program">
        &#10148; opens a list of Topics regarding Java programming.
    </string>

         <string name="glossary">
        &#10148; opens a list of Topics regarding Java programming.
    </string>

         <string name="quiz">
        &#10148; opens a list of Topics regarding Java programming.
    </string>


    <string name="java">
      What is Java Made Easy?
    </string>

    <string name="java1">
        &#10148; Java Made Easy is a mobile learning application intends to help student to learn Java programming language.
    </string>

        <string name="copy">
        &#10148; To copy an information just long press on the text and select the text that you want to copy and press the  Copy option from the
            action bar at the top and it automatically copied. You can paste the text you had selected into any text editor. Same for copying a certain programs you just
            have to open the program page and select the program that you want to copy and paste it into your favorite compiler app or anywhere
            you want.
    </string>

       <string name="share">
        &#10148;
           To share a certain information just long press on the text and select the text that you want to share and press the Share option from the
            action bar at the top, and you can send the text that you have highlighted via bluetooth or any app that has a
           send features installed on your phone.
    </string>

       <string name="bookmarks">
        &#10148; To bookmark the lessons, long press the item in list that you want. To remove the bookmark, just long press the item
           that is already bookmark. A red bookmark icon indicates that the item or page is bookmarked, a grey bookmark icon indicates that the
           item or page is not bookmarked.\n
           The list of Bookmarked items can be accessed from the main screen of this app, just go to the Bookmark page and press the item or page
           to open the page that you had bookmarked.
    </string>

       <string name="settings">
        &#10148; The app settings option on the main menu lets you customize the way some things work on this app.\n
           &#10102; Adjust the Brightness of the Screen - this will automatically adjust the brightness of your phone screen.\n
           &#10103; Adjust the volume of the videos-  this will automatically adjust the volume of the videos.\n
           &#10103;
    </string>

       <string name="dayNight">
        &#10148; To use the dayNight Mode. Just go the settings of this application and press the toggle button to on and off the dayNight theme.
    </string>

     <string name="v2"> &#10148;In this video will be the procedure for installing Java on Windows operating system. We wil see how we
    can install Eclipse IDE on our Windows operating system. IDE stands for Integrated Development Environment and it helps you to code your program.
    For example IDE is and editor that helps you to run or compile your program and Eclipse is one of the IDE.
    </string>

     <string name="v3"> &#10148; In this video will be the procedure for installing Java on Windows operating system. We wil see how we
    can install Eclipse IDE on our Windows operating system. IDE stands for Integrated Development Environment and it helps you to code your program.
    For example IDE is and editor that helps you to run or compile your program and Eclipse is one of the IDE.
    </string>

    <string name="v4">
       &#10148; A variable provides us with named storage that our programs can manipulate. Each variable in Java has a specific type, which determines the size and layout of the variables memory;
        the range of values that can be stored within that memory; and the set of operations that can be applied to the variable.
    </string>

    <string name="v5">
          &#10148; One of the strengths of Java is the huge libraries of code available to you. One really useful class that
        handles input from user is called Scanner class. The Scanner class can be found in the java.util library.
    </string>

    <string name="v6">
          &#10148; Arithmetic operators or Math operators are used in mathematical expressions in the same way that they are used in algebra.
    </string>

    <string name="v7">
          &#10148; Increment(++) and decrement(++) operators in Java let you easily add 1 to, or subtract 1 from
        a variable. Assignment operators is used to assign value to a variable.
    </string>

    <string name="v8">
          &#10148; An If.. else statement can be followed by an optional else statement, which executes when the Boolean expression
        is false. The Relational operators determine the relationship that one operand has to the other. Specifically, they determine
        equality and ordering.
    </string>

    <string name="v9">
        &#10148; A logical operators (sometimes called Boolean Operator) in Java is an operator that returns a Boolean results that is
        based on the Boolean result of one or two other expressions.
    </string>

    <string name="v10">
        &#10148; The while statements evaluates expression, which must return a boolean value. If the expression evaluates to true,
        the while statements executes the statement(s) in the while block. The while statements continues testing the expression and
        executing its block until the expression evaluates to false.
    </string>
    
    <string name="v11">
        &#10148;  Do while loop executes group of Java statements as long as the boolean condition evaluates to true. ... }
            while(boolean condition)); Block of statements is any valid Java code. Boolean condition is any valid Java expression
            that evaluates to boolean value.
    </string>

        <string name="v12">
         &#10148;  An array is a container object that holds a fixed number of values of a single type. The length of an array is established
            when the array is created. After creation, its length is fixed.
            You have seen an example of arrays already, in the main method of the "Hello World!" application.
    </string>

        <string name="v13">
         &#10148; The for statement provides a compact way to iterate over a range of values. Programmers often refer to it as the
            "\for loop\" because of the way in which it repeatedly loops until a particular condition is satisfied.
        </string>

    <string name="v14">
     &#10148; Strings, which are widely used in Java programming, are a sequence of characters.
        In the Java programming language, strings are objects.
    </string>

    <string name="v15">
        &#10148; A method is a set of code which is referred to by name and can be called or invoked at any point in a program simply
        by utilizing the methods name. Think of a method as a subprogram that acts on data and often returns a value.
        Each method has its own name.
    </string>

    <string name="v16">
    &#10148; In Java, parameters sent to methods are passed-by-value: Definition clarification: What is passed "\to\"
        a method is referred to as an "\argument\". The "type" of data that a method can receive is referred to as a "\parameter\".
    </string>

    <string name="v17">
       &#10148; A class is nothing but a blueprint or a template for creating different objects which defines its properties and behaviors.
        Java class objects exhibit the properties and behaviors defined by its class.
        A class can contain fields and methods to describe the behavior of an object.
    </string>

    <string name="v18">
        &#10148; Polymorphism is the ability of an object to take on many forms. The most common use of polymorphism in OOP
        occurs when a parent class reference is used to refer to a child class object.
        Any Java object that can pass more than one IS-A test is considered to be polymorphic.
    </string>

    <string name="v19">
        &#10148; Arraylist is a class which implements List interface. It is widely used because of the functionality and flexibility it offers.
        Most of the developers choose Arraylist over Array as it’s a very good alternative of traditional java arrays.
    </string>

    <string name="v20">
        &#10148;  The LinkedList class extends AbstractSequentialList and implements the List interface.
        It provides a linked-list data structure.
    </string>
    
    
    

    <string name="about">
        &#10148; This app contains lot of importants questions, lectures, programs and video tutorials and an interactive quiz game.\n
        &#10148; It has a very simple user interface
        and the contents can be easily understood by the users.\n
        &#10148; This will definitely help I.T students or anyone who wants to
        learn Java programming language.
    </string>

     <string name="about1">
        &#10148; This app lets you bookmarks to mark the lessons so that you can easily and quickly comeback to it without having to
         browse through entire list.\n
          &#10148; Each program in this app has a corresponding sample program output. The outputs are displayed below
         each of the program codes.You can also share and copy the information or programs from this application.
    </string>

    <string name="favorites">Bookmarks</string>
    <string name="some_hint">Filter items...</string>
    <string name="program_utility">Utility Program</string>

    <string name="title">Quiz Demo</string>
    <string name="start_quiz">Start Quiz</string>
    <string name="rules">RULES :</string>
    <string name="rules1" formatted="false">&#10148;The score you will get depends on what time you answer the question.</string>
    <string name="rules2" formatted="false">&#10148; If you answered the questions 15sec-10sec, you will received 5points, then if its 10sec-5sec, you
    will received 3points and if it is 4sec-1sec you will received 1point else if the time runs out you will get nothing.
    </string>
    <string name="rules3">&#10148; Attempting a questions is compulsary.</string>
    <string name="rules4">&#10148; If you leave the game at any stage the current progress will get discarded.</string>


    <string name="play">Play</string>
    <string name="high_scores">High scores</string>
    <string name="create_player">Create Player</string>
    <string name="info">INFO</string>
    <string name="hidden">Profile</string>
    <string name="category">Category: </string>
    <string name="replay">Play Again</string>
    <string name="return_to_main_menu">Return to main menu</string>
    <string name="see_high_score">See High Score</string>
    <string name="show_category">Category:</string>
    <string name="to_high_score_button">Go to see the high score</string>
    <string name="replay_button">Replay</string>
    <string name="return_button">Return to main menu</string>
    <string name="question_title">Question:</string>
    <string name="answers_title">Answers:</string>
    <string name="alternative_1">Alternative One</string>
    <string name="alternative_2">Alternative two</string>
    <string name="alternative_3">Alternative three</string>
    <string name="alternative_4">Alternative four</string>
    <string name="type_your_question_here">Type your question here!</string>
    <string name="right_answer">Right answer:</string>
    <string name="right_answer_int">Which alternative is the right one</string>
    <string name="add_button_text">Add</string>
    <string name="hint_text"><![CDATA[Which of the answers above is the right one. \nPlease right down the number of the answer below]]></string>
    <string name="custom_categories">Categories</string>
    <string name="hint_button_A">A</string>
    <string name="hint_button_B">B</string>
    <string name="hint_button_C">C</string>
    <string name="hint_button_D">D</string>
    <string name="score_title">Score:</string>
    <string name="zero_score_hint">0</string>
    <string name="question_hint">Questions shows up here   </string>
    <string name="timer_text">--</string>
    <string name="category_hint">—</string>
    <string name="about_title">About the Asobi Team</string>
    <string name="about_paragraf1">The Asobi team is a group of 5 people who had the dreams and passion to create an outstanding game!</string>
    <string name="about_paragraf2">With a tight budget and not much time we accomplished the impossible.</string>
    <string name="about_paragraf3">The name of the programmers can be found below:</string>
    <string name="Gattanjo_Nilsson">Gattanjo Nilsson</string>
    <string name="Kozue_Wendén">Kozue Wendén</string>
    <string name="Oleg_Lindvin">Oleg \nLindvin</string>
    <string name="Pontus_Hanzén">Pontus Hanzén</string>
    <string name="Thomas_Månsson">Thomas Månsson</string>
    <string name="category_text">Category:</string>
    <string name="typ_category">Type questions category!</string>
    <string name="you_can_not_be_ranked">You can not be ranked!</string>
    <string name="this_name_already_exists">This name already exists.</string>
    <string name="delete">Delete</string>
    <string name="do_you_want_to_delete">Do you want to delete?</string>
    <string name="cancel">Cancel</string>
    <string name="total_score">Total score: %1$s</string>
    <string name="you_are_rank">You are %1$sth</string>
    <string name="correct_answers">Correct answers: %1$s</string>
    <string name="minutes_seconds"><![CDATA[Time: %1$s min & %2$d sec]]></string>
    <string name="you_placed_xst_place_on_high_score">You placed %1$sst place in %2$s</string>
    <string name="you_placed_xnd_place_on_high_score">You placed %1$snd place in %2$s</string>
    <string name="you_placed_xrd_place_on_high_score">You placed %1$srd place in %2$s</string>
    <string name="you_placed_xth_place_on_high_score">You placed %1$sth place in %2$s</string>
    <string name="category_already_exists">%1$s already exists.</string>
    <string name="category_added">Category added!</string>
    <string name="question_added">Question added!</string>
    <string name="you_need_at_least_five_questions">You need at least 5 questions in this category!</string>
    <string name="paragraf1">This is where you add your own categories. To start with they will be empty</string>
    <string name="all_questions">All Questions</string>
    <string name="name_of_category">Name of category</string>
    <string name="add_category">ADD CATEGORY</string>
    <string name="add_custom_question">Add Custom Question</string>
    <string name="add_custom_category">Add custom Category!</string>
    <string name="all">All Chapters</string>
    <string name="name">Name</string>
    <string name="add_profile">ADD PROFILE</string>
    <string name="rank">Rank</string>
    <string name="score">Score</string>
    <string name="question">Question: </string>
    <string name="answers">Answers: </string>
    <string name="answer_1">Answer 1</string>
    <string name="answer_2">Answer 2</string>
    <string name="answer_3">Answer 3</string>
    <string name="answer_4">Answer 4</string>
    <string name="profile_created">Profile created.</string>
    <string name="profile_item">PROFILE</string>
    <string name="round">Round:</string>
    <string name="one">1</string>
    <string name="category_message"><![CDATA[This is where you add your own categories. \nTo start with they will be empty]]></string>
    <string name="hint_right_answer">Number of right answer</string>
    <string name="chapter1_question_1">The most basic circuitry-level computer language, which consists of on and off switches, is _____________. </string>
    <string name="chapter1_answer_1_1"> a high-level language </string>
    <string name="chapter1_answer_1_2">machine language</string>
    <string name="chapter1_answer_1_3">Java</string>
    <string name="chapter1_answer_1_4">C++</string>
    <string name="chapter1_correct_answer_1">2</string>
    <string name="chapter1_question_2">The rules of a programming language constitute its _____________.</string>
    <string name="chapter1_answer_2_1">objects</string>
    <string name="chapter1_answer_2_2">logic</string>
    <string name="chapter1_answer_2_3">format</string>
    <string name="chapter1_answer_2_4">syntax</string>
    <string name="chapter1_correct_answer_2">4</string>
    <string name="chapter1_question_3">A _____________ translates high-level language statements into machine code.</string>
    <string name="chapter1_answer_3_1">programmer</string>
    <string name="chapter1_answer_3_2">syntax detector</string>
    <string name="chapter1_answer_3_3">compiler</string>
    <string name="chapter1_answer_3_4">deciphere</string>
    <string name="chapter1_correct_answer_3">3</string>
    <string name="chapter1_question_4">________ is simple yet object oriented programming language and it is in many respects similar to  C++.</string>
    <string name="chapter1_answer_4_1">Java</string>
    <string name="chapter1_answer_4_2">DBMS</string>
    <string name="chapter1_answer_4_3">C</string>
    <string name="chapter1_answer_4_4">Programming</string>
    <string name="chapter1_correct_answer_4">1</string>
    <string name="chapter1_question_5">The values of an object’s attributes also are known as its _____________.</string>
    <string name="chapter1_answer_5_1">state</string>
    <string name="chapter1_answer_5_2">orientation</string>
    <string name="chapter1_answer_5_3">methods</string>
    <string name="chapter1_answer_5_4">condition</string>
    <string name="chapter1_correct_answer_5">3</string>
    <string name="chapter1_question_6"> Java is architecturally _____________.</string>
    <string name="chapter1_answer_6_1">specific</string>
    <string name="chapter1_answer_6_2">oriented</string>
    <string name="chapter1_answer_6_3">neutral</string>
    <string name="chapter1_answer_6_4">abstract</string>
    <string name="chapter1_correct_answer_6">3</string>
    <string name="chapter1_question_7">All Java programming statements must end with a _____________.</string>
    <string name="chapter1_answer_7_1">period</string>
    <string name="chapter1_answer_7_2">comma</string>
    <string name="chapter1_answer_7_3">semicolon</string>
    <string name="chapter1_answer_7_4">closing parenthesis</string>
    <string name="chapter1_correct_answer_7">3</string>
    <string name="chapter1_question_8">Java is created by____________.</string>
    <string name="chapter1_answer_8_1">James Gosling</string>
    <string name="chapter1_answer_8_2">Steve Jobs</string>
    <string name="chapter1_answer_8_3">Bill Gates</string>
    <string name="chapter1_answer_8_4">Denise Ritchie</string>
    <string name="chapter1_correct_answer_8">1</string>
    <string name="chapter1_question_9">You save text files containing Java source code using the file extension_____________.</string>
    <string name="chapter1_answer_9_1">.java</string>
    <string name="chapter1_answer_9_2">.class</string>
    <string name="chapter1_answer_9_3">.txt</string>
    <string name="chapter1_answer_9_4">.src</string>
    <string name="chapter1_correct_answer_9">1</string>
    <string name="chapter1_question_10">Nonexecuting program statements that provide documentation are called</string>
    <string name="chapter1_answer_10_1">classes</string>
    <string name="chapter1_answer_10_2">notes</string>
    <string name="chapter1_answer_10_3">comments</string>
    <string name="chapter1_answer_10_4">commands</string>
    <string name="chapter1_correct_answer_10">3</string>



    <string name="question_science_1">The data item_____________ when its value cannot be changed while a program is running:</string>
    <string name="science_answer_1_1">literal constant  </string>
    <string name="science_answer_1_2">numeric constant</string>
    <string name="science_answer_1_3">unnamed constant</string>
    <string name="science_answer_1_4">constant</string>
    <string name="science_correct_answer_1">4</string>
    <string name="question_science_2">A named memory location that you can use to store value:</string>
    <string name="science_answer_2_1">variable</string>
    <string name="science_answer_2_2">datatype</string>
    <string name="science_answer_2_3">primitive types</string>
    <string name="science_answer_2_4">constant</string>
    <string name="science_correct_answer_2">1</string>
    <string name="question_science_3">Programmers refer to the 459 as a____________because its value is taken literally at each use:</string>
    <string name="science_answer_3_1">numeric constant</string>
    <string name="science_answer_3_2">literal constant </string>
    <string name="science_answer_3_3">unnamed constant</string>
    <string name="science_answer_3_4">constant</string>
    <string name="science_correct_answer_3">2</string>
    <string name="question_science_4">Which of the following is not a primitive data type in Java?</string>
    <string name="science_answer_4_1">boolean</string>
    <string name="science_answer_4_2">int</string>
    <string name="science_answer_4_3">byte</string>
    <string name="science_answer_4_4">sector</string>
    <string name="science_correct_answer_4">4</string>
    <string name="question_science_5"> Assuming you have declared shoeSize to be a variable of type int, which of the following is a valid assignment statement in Java? </string>
    <string name="science_answer_5_1">shoeSize = 9;</string>
    <string name="science_answer_5_2">shoeSize = 9.5;</string>
    <string name="science_answer_5_3">shoeSize = \'9\'; </string>
    <string name="science_answer_5_4">shoeSize=\"nine\";</string>
    <string name="science_correct_answer_5">1</string>
    <string name="question_science_6">This statement reserves a named location and includes the following:</string>
    <string name="science_answer_6_1">constant</string>
    <string name="science_answer_6_2">variable</string>
    <string name="science_answer_6_3">variable declaration</string>
    <string name="science_answer_6_4">data type</string>
    <string name="science_correct_answer_6">3</string>
    <string name="question_science_7">An assignment made when you declare a variable is an____________:</string>
    <string name="science_answer_7_1"> initialization</string>
    <string name="science_answer_7_2">update</string>
    <string name="science_answer_7_3">condition</string>
    <string name="science_answer_7_4">constant</string>
    <string name="science_correct_answer_7">1</string>
    <string name="question_science_8">The value 137.68 can be held by a variable of type ___________. </string>
    <string name="science_answer_8_1">int</string>
    <string name="science_answer_8_2">float</string>
    <string name="science_answer_8_3">double</string>
    <string name="science_answer_8_4">Two of the preceding answers are correct.</string>
    <string name="science_correct_answer_8">2</string>
    <string name="question_science_9">A boolean variable can hold ___________.</string>
    <string name="science_answer_9_1">any character</string>
    <string name="science_answer_9_2">any whole number</string>
    <string name="science_answer_9_3">any decimal number</string>
    <string name="science_answer_9_4">the value true or false</string>
    <string name="science_correct_answer_9">4</string>
    <string name="question_science_10">An escape sequence always begins with a(n) ___________.</string>
    <string name="science_answer_10_1">e</string>
    <string name="science_answer_10_2">forward slash</string>
    <string name="science_answer_10_3">backslash</string>
    <string name="science_answer_10_4">equal sign</string>
    <string name="science_correct_answer_10">3</string>

    <string name="chapter2_question_11">The \“equal to\” relational operator is ___________.</string>
    <string name="chapter2_answer_11_1">=</string>
    <string name="chapter2_answer_11_2">==</string>
    <string name="chapter2_answer_11_3">!=</string>
    <string name="chapter2_answer_11_4">.=</string>
    <string name="chapter2_correct_answer_11">2</string>
    <string name="chapter2_question_12">__________is a whole number without decimal places:</string>
    <string name="chapter2_answer_12_1">float</string>
    <string name="chapter2_answer_12_2">string</string>
    <string name="chapter2_answer_12_3">integer</string>
    <string name="chapter2_answer_12_4">boolean</string>
    <string name="chapter2_correct_answer_12">3</string>
    <string name="chapter2_question_13">Can hold only one of two values – true or false:</string>
    <string name="chapter2_answer_13_1">floating- point</string>
    <string name="chapter2_answer_13_2">string</string>
    <string name="chapter2_answer_13_3">integer</string>
    <string name="chapter2_answer_13_4">boolean</string>
    <string name="chapter2_correct_answer_13">4</string>
    <string name="chapter2_question_14">A number contains decimal position:</string>
    <string name="chapter2_answer_14_1">floating-point </string>
    <string name="chapter2_answer_14_2">string</string>
    <string name="chapter2_answer_14_3">integer</string>
    <string name="chapter2_answer_14_4">boolean</string>
    <string name="chapter2_correct_answer_14">1</string>
    <string name="chapter2_question_15"> Which assignment is correct in Java?</string>
    <string name="chapter2_answer_15_1">double money = 12;</string>
    <string name="chapter2_answer_15_2">significant digits</string>
    <string name="chapter2_answer_15_3">scientific notation</string>
    <string name="chapter2_answer_15_4">floating-point</string>
    <string name="chapter2_correct_answer_15">3</string>
    <string name="chapter2_question_16">The remainder operator ___________.</string>
    <string name="chapter2_answer_16_1">is represented by a forward slash</string>
    <string name="chapter2_answer_16_2">must follow a division operation</string>
    <string name="chapter2_answer_16_3">provides the quotient of integer division</string>
    <string name="chapter2_answer_16_4">is none of the above</string>
    <string name="chapter2_correct_answer_16">3</string>
    <string name="chapter2_question_17">Uses only one operand:</string>
    <string name="chapter2_answer_17_1">unary operator  </string>
    <string name="chapter2_answer_17_2">cast operator</string>
    <string name="chapter2_answer_17_3">explicit conversion</string>
    <string name="chapter2_answer_17_4">type casting</string>
    <string name="chapter2_correct_answer_17">1</string>
    <string name="chapter2_question_18">In Java, what is the value of 3 + 7 * 4 + 2?</string>
    <string name="chapter2_answer_18_1">21</string>
    <string name="chapter2_answer_18_2">33</string>
    <string name="chapter2_answer_18_3">42</string>
    <string name="chapter2_answer_18_4">48</string>
    <string name="chapter2_correct_answer_18">2</string>
    <string name="chapter2_question_19">Which assignment is correct in Java?</string>
    <string name="chapter2_answer_19_1">char aChar = 5.5;</string>
    <string name="chapter2_answer_19_2">char aChar = \"W\";</string>
    <string name="chapter2_answer_19_3">char aChar =\'*\';</string>
    <string name="chapter2_answer_19_4">None of the above</string>
    <string name="chapter2_correct_answer_19">3</string>
    <string name="chapter2_question_20">Which assignment is correct in Java?</string>
    <string name="chapter2_answer_20_1">int value = (float) 4.5;</string>
    <string name="chapter2_answer_20_2">float value = 4 (double);</string>
    <string name="chapter2_answer_20_3">double value = 2.12;</string>
    <string name="chapter2_answer_20_4">char value = 5c;</string>
    <string name="chapter2_correct_answer_20">3</string>

    <string name="chapter3_question_1">A__________method is a program module that contains a series of statement that carry out a task:</string>
    <string name="chapter3_answer_1_1">client method</string>
    <string name="chapter3_answer_1_2">method</string>
    <string name="chapter3_answer_1_3">method header</string>
    <string name="chapter3_answer_1_4">invokes or call</string>
    <string name="chapter3_correct_answer_1">2</string>
    <string name="chapter3_question_2">When you____________or_____________a method, you excuse it:</string>
    <string name="chapter3_answer_2_1">invoke, method</string>
    <string name="chapter3_answer_2_2">call, method</string>
    <string name="chapter3_answer_2_3">invoke, call</string>
    <string name="chapter3_answer_2_4">invoke, call</string>
    <string name="chapter3_correct_answer_2">4</string>
    <string name="chapter3_question_3">A___________is a method that calls another:</string>
    <string name="chapter3_answer_3_1">method</string>
    <string name="chapter3_answer_3_2">method header</string>
    <string name="chapter3_answer_3_3">method body</string>
    <string name="chapter3_answer_3_4">client method</string>
    <string name="chapter3_correct_answer_3">4</string>
    <string name="chapter3_question_4">The line of the method and contains information about how other methods can interact with it:</string>
    <string name="chapter3_answer_4_1">method</string>
    <string name="chapter3_answer_4_2">method header</string>
    <string name="chapter3_answer_4_3">method body</string>
    <string name="chapter3_answer_4_4">client method</string>
    <string name="chapter3_correct_answer_4">2</string>
    <string name="chapter3_question_5">A_________is another name for a method header:</string>
    <string name="chapter3_answer_5_1">stub</string>
    <string name="chapter3_answer_5_2">declaration</string>
    <string name="chapter3_answer_5_3">method body</string>
    <string name="chapter3_answer_5_4">method</string>
    <string name="chapter3_correct_answer_5">2</string>
    <string name="chapter3_question_6">Is a set of statement between curly braces that follow the header and carry out the method’s action:</string>
    <string name="chapter3_answer_6_1">method</string>
    <string name="chapter3_answer_6_2">method header</string>
    <string name="chapter3_answer_6_3">method body</string>
    <string name="chapter3_answer_6_4">client method</string>
    <string name="chapter3_correct_answer_6">3</string>
    <string name="chapter3_question_7">Describes the action that excuse within method, the method body</string>
    <string name="chapter3_answer_7_1">implementation</string>
    <string name="chapter3_answer_7_2">abstraction</string>
    <string name="chapter3_answer_7_3">stub</string>
    <string name="chapter3_answer_7_4">declaration</string>
    <string name="chapter3_correct_answer_7">1</string>
    <string name="chapter3_question_8">Is a method that contains no statement, programmers create stubs as temporary placeholders during the program development process:</string>
    <string name="chapter3_answer_8_1">implementation</string>
    <string name="chapter3_answer_8_2">abstraction</string>
    <string name="chapter3_answer_8_3">stub</string>
    <string name="chapter3_answer_8_4">declaration</string>
    <string name="chapter3_correct_answer_8">3</string>
    <string name="chapter3_question_9">______________are data items sent to method in a method call.</string>
    <string name="chapter3_answer_9_1">return type</string>
    <string name="chapter3_answer_9_2">parameters</string>
    <string name="chapter3_answer_9_3">arguments</string>
    <string name="chapter3_answer_9_4">return a value</string>
    <string name="chapter3_correct_answer_9">3</string>
    <string name="chapter3_question_10">The data items received by a method</string>
    <string name="chapter3_answer_10_1">arguments</string>
    <string name="chapter3_answer_10_2">parameters</string>
    <string name="chapter3_answer_10_3">return a value</string>
    <string name="chapter3_answer_10_4">return type</string>
    <string name="chapter3_correct_answer_10">2</string>

    <string name="chapter3_question_11">The__________to method includes the method\’s return type, name, and arguments.</string>
    <string name="chapter3_answer_11_1">block box</string>
    <string name="chapter3_answer_11_2">interface</string>
    <string name="chapter3_answer_11_3">local variable</string>
    <string name="chapter3_answer_11_4">signature</string>
    <string name="chapter3_correct_answer_11">2</string>
    <string name="chapter3_question_12">A device that you can use without understanding how it works:</string>
    <string name="chapter3_answer_12_1">block box</string>
    <string name="chapter3_answer_12_2">interface</string>
    <string name="chapter3_answer_12_3">signature</string>
    <string name="chapter3_answer_12_4">local variable</string>
    <string name="chapter3_correct_answer_12">1</string>
    <string name="chapter3_question_13">A method\’s__________ is the combination of the method name and the number, types and order to   arguments:</string>
    <string name="chapter3_answer_13_1">block box</string>
    <string name="chapter3_answer_13_2">interface</string>
    <string name="chapter3_answer_13_3">signature</string>
    <string name="chapter3_answer_13_4">local variable</string>
    <string name="chapter3_correct_answer_13">3</string>
    <string name="chapter3_question_14">Is a set of statements that are logically unreachable:</string>
    <string name="chapter3_answer_14_1">unreachable statement</string>
    <string name="chapter3_answer_14_2">dead code</string>
    <string name="chapter3_answer_14_3">instantiation</string>
    <string name="chapter3_answer_14_4">instance variable</string>
    <string name="chapter3_correct_answer_14">2</string>
    <string name="chapter3_question_15">A___________of a class is an object, in other words, it is one tangible example of a class:</string>
    <string name="chapter3_answer_15_1">unreachable statement </string>
    <string name="chapter3_answer_15_2">dead code</string>
    <string name="chapter3_answer_15_3">instantiation</string>
    <string name="chapter3_answer_15_4">instance variable</string>
    <string name="chapter3_correct_answer_15">3</string>
    <string name="chapter3_question_16">A data variables declared in a class outside of any method:</string>
    <string name="chapter3_answer_16_1">fields</string>
    <string name="chapter3_answer_16_2">class client</string>
    <string name="chapter3_answer_16_3">class user</string>
    <string name="chapter3_answer_16_4">extended</string>
    <string name="chapter3_correct_answer_16">1</string>
    <string name="chapter3_question_17">A___________is a method that establishes an object:</string>
    <string name="chapter3_answer_17_1">reference</string>
    <string name="chapter3_answer_17_2">object</string>
    <string name="chapter3_answer_17_3">method</string>
    <string name="chapter3_answer_17_4">constructor</string>
    <string name="chapter3_correct_answer_17">4</string>
    <string name="chapter3_question_18">A________is a unique identifier for data within a database:</string>
    <string name="chapter3_answer_18_1">primary key</string>
    <string name="chapter3_answer_18_2">constructor</string>
    <string name="chapter3_answer_18_3">class user</string>
    <string name="chapter3_answer_18_4">class client</string>
    <string name="chapter3_correct_answer_18">1</string>
    <string name="chapter3_question_19">A__________is one that is created automatically by the java compiler:</string>
    <string name="chapter3_answer_19_1">primary key</string>
    <string name="chapter3_answer_19_2">constructor</string>
    <string name="chapter3_answer_19_3">default constructor </string>
    <string name="chapter3_answer_19_4">abstract data type</string>
    <string name="chapter3_correct_answer_19">3</string>
    <string name="chapter3_question_20">A_________is a type whose implementation is hidden and accessed through its public method:</string>
    <string name="chapter3_answer_20_1">primary key</string>
    <string name="chapter3_answer_20_2">constructor</string>
    <string name="chapter3_answer_20_3">default constructor</string>
    <string name="chapter3_answer_20_4">abstract data type</string>
    <string name="chapter3_correct_answer_20">4</string>
    <string name="chapter4_question_1">A_____________is the code between a pair of curly braces:</string>
    <string name="chapter4_answer_1_1">outside block</string>
    <string name="chapter4_answer_1_2">outer block</string>
    <string name="chapter4_answer_1_3">block</string>
    <string name="chapter4_answer_1_4">inner block</string>
    <string name="chapter4_correct_answer_1">3</string>
    <string name="chapter4_question_2">An inside block is___________within an outside block:</string>
    <string name="chapter4_answer_2_1">nested</string>
    <string name="chapter4_answer_2_2">block</string>
    <string name="chapter4_answer_2_3">overrides</string>
    <string name="chapter4_answer_2_4">reference</string>
    <string name="chapter4_correct_answer_2">1</string>
    <string name="chapter4_question_3">A reference is an object’s memory address:</string>
    <string name="chapter4_answer_3_1">nested</string>
    <string name="chapter4_answer_3_2">block</string>
    <string name="chapter4_answer_3_3">overrides</string>
    <string name="chapter4_answer_3_4">reference</string>
    <string name="chapter4_correct_answer_3">4</string>
    <string name="chapter4_question_4">A variable__________another with the same name when it takes precedence over the other variable:</string>
    <string name="chapter4_answer_4_1">nested</string>
    <string name="chapter4_answer_4_2">block</string>
    <string name="chapter4_answer_4_3">overrides</string>
    <string name="chapter4_answer_4_4">reference</string>
    <string name="chapter4_correct_answer_4">3</string>
    <string name="chapter4_question_5">An ______________ situation is one in which the compiler cannot determine which method to use:</string>
    <string name="chapter4_answer_5_1">ambiguous</string>
    <string name="chapter4_answer_5_2">class method</string>
    <string name="chapter4_answer_5_3">class variable</string>
    <string name="chapter4_answer_5_4">overloading</string>
    <string name="chapter4_correct_answer_5">1</string>
    <string name="chapter4_question_6">_________ are static methods that do not have this reference (because they have no object a. </string>
    <string name="chapter4_answer_6_1">ambiguous</string>
    <string name="chapter4_answer_6_2">class method</string>
    <string name="chapter4_answer_6_3">class variable</string>
    <string name="chapter4_answer_6_4">overloading</string>
    <string name="chapter4_correct_answer_6">2</string>
    <string name="chapter4_question_7">_____________are static variable that are shared by every instantiation of a class:</string>
    <string name="chapter4_answer_7_1"> ambiguous</string>
    <string name="chapter4_answer_7_2">class method</string>
    <string name="chapter4_answer_7_3">class variable</string>
    <string name="chapter4_answer_7_4">overloading</string>
    <string name="chapter4_correct_answer_7">3</string>
    <string name="chapter4_question_8">A____________is a library of a classes:</string>
    <string name="chapter4_answer_8_1">package</string>
    <string name="chapter4_answer_8_2">library of classes</string>
    <string name="chapter4_answer_8_3">optional classes</string>
    <string name="chapter4_answer_8_4">nested classes</string>
    <string name="chapter4_correct_answer_8">1</string>
    <string name="chapter4_question_9">A________is a folder that provides a convenient grouping for classes:</string>
    <string name="chapter4_answer_9_1">package</string>
    <string name="chapter4_answer_9_2">library of classes</string>
    <string name="chapter4_answer_9_3">optional classes</string>
    <string name="chapter4_answer_9_4">nested classes</string>
    <string name="chapter4_correct_answer_9">2</string>
    <string name="chapter4_question_10">The__________package is implicitly imported into every java program:</string>
    <string name="chapter4_answer_10_1">java.lang</string>
    <string name="chapter4_answer_10_2">class.lang</string>
    <string name="chapter4_answer_10_3">package.lang</string>
    <string name="chapter4_answer_10_4">optional.lang</string>
    <string name="chapter4_correct_answer_10">1</string>

    <string name="chapter4_question_11">The___________are basic classes contained in the java.lang package that are automatically imported into every program you write:</string>
    <string name="chapter4_answer_11_1">fundamental classes</string>
    <string name="chapter4_answer_11_2">optional classes</string>
    <string name="chapter4_answer_11_3">library of classes</string>
    <string name="chapter4_answer_11_4">nested classes</string>
    <string name="chapter4_correct_answer_11">1</string>
    <string name="chapter4_question_12">The__________reside in packages that be explicitly imported into your programs NAN is a three-letter abbreviation for \” Not a Number\”    </string>
    <string name="chapter4_answer_12_1">fundamental classes </string>
    <string name="chapter4_answer_12_2">optional classes</string>
    <string name="chapter4_answer_12_3">library of classes</string>
    <string name="chapter4_answer_12_4">nested classes</string>
    <string name="chapter4_correct_answer_12">2</string>




    <string name="chapter5_question_1">In java, the ________ provides the mechanism to perform a different action when a boolean expression evaluates as false:</string>
    <string name="chapter5_answer_1_1">nested if statement</string>
    <string name="chapter5_answer_1_2">if……else statement</string>
    <string name="chapter5_answer_1_3">single-alternative if</string>
    <string name="chapter5_answer_1_4">dual-alternative if</string>
    <string name="chapter5_correct_answer_1">2</string>
    <string name="chapter5_question_2">A________ contains an if structure within another if structure:</string>
    <string name="chapter5_answer_2_1">nested if statement  </string>
    <string name="chapter5_answer_2_2">if……else statement</string>
    <string name="chapter5_answer_2_3">single-alternative if</string>
    <string name="chapter5_answer_2_4">dual-alternative if</string>
    <string name="chapter5_correct_answer_2">1</string>
    <string name="chapter5_question_3">You can use the___________ between boolean   expression to determine whether both are true:</string>
    <string name="chapter5_answer_3_1">short-circuits</string>
    <string name="chapter5_answer_3_2">nested if statement</string>
    <string name="chapter5_answer_3_3">logical AND operator </string>
    <string name="chapter5_answer_3_4">conditional OR operator</string>
    <string name="chapter5_correct_answer_3">3</string>
    <string name="chapter5_question_4">Describes the feature of the AND and OR operators in which evaluation is performed only as far as necessary to make a final decision:</string>
    <string name="chapter5_answer_4_1">short-circuits evaluation  </string>
    <string name="chapter5_answer_4_2">nested if statement</string>
    <string name="chapter5_answer_4_3">logical AND operator </string>
    <string name="chapter5_answer_4_4">conditional OR operator</string>
    <string name="chapter5_correct_answer_4">1</string>
    <string name="chapter5_question_5">You can use the ____________ between boolean expressions to determine whether either expression is true:</string>
    <string name="chapter5_answer_5_1">short-circuits</string>
    <string name="chapter5_answer_5_2">nested if statement</string>
    <string name="chapter5_answer_5_3">logical AND operator</string>
    <string name="chapter5_answer_5_4">conditional OR operator</string>
    <string name="chapter5_correct_answer_5">4</string>
    <string name="chapter5_question_6">A series of statement that determine within which of a set of ranges a value falls:</string>
    <string name="chapter5_answer_6_1">range check</string>
    <string name="chapter5_answer_6_2">switch statement</string>
    <string name="chapter5_answer_6_3">conditional operator </string>
    <string name="chapter5_answer_6_4">ternary operator</string>
    <string name="chapter5_correct_answer_6">1</string>
    <string name="chapter5_question_7">The___________ uses up to four keywords to test a single variable against a series of exact integer or character value:</string>
    <string name="chapter5_answer_7_1">range check</string>
    <string name="chapter5_answer_7_2">switch statement</string>
    <string name="chapter5_answer_7_3">conditional operator</string>
    <string name="chapter5_answer_7_4">ternary operator</string>
    <string name="chapter5_correct_answer_7">2</string>
    <string name="chapter5_question_8">Requires three expression separated with a question mark and a colon, and is used as an abbreviated version of the if…. else statement:</string>
    <string name="chapter5_answer_8_1">range check</string>
    <string name="chapter5_answer_8_2">switch statement</string>
    <string name="chapter5_answer_8_3">conditional operator </string>
    <string name="chapter5_answer_8_4">ternary operator</string>
    <string name="chapter5_correct_answer_8">3</string>
    <string name="chapter5_question_9">A________is one that needs three operands:</string>
    <string name="chapter5_answer_9_1">range check </string>
    <string name="chapter5_answer_9_2">switch statement</string>
    <string name="chapter5_answer_9_3">conditional operator  </string>
    <string name="chapter5_answer_9_4">ternary operator</string>
    <string name="chapter5_correct_answer_9">4</string>
    <string name="chapter5_question_10">You can the__________ which is written as the (!)to negate the result of any boolean expression:</string>
    <string name="chapter5_answer_10_1">NOT operator </string>
    <string name="chapter5_answer_10_2">ternary operator</string>
    <string name="chapter5_answer_10_3">conditional operator </string>
    <string name="chapter5_answer_10_4">range check</string>
    <string name="chapter5_correct_answer_10"></string>

    <string name="chapter6_question_1">A structure that allows repeated execution of a block of statements:</string>
    <string name="chapter6_answer_1_1">loop </string>
    <string name="chapter6_answer_1_2">loop body</string>
    <string name="chapter6_answer_1_3">iteration</string>
    <string name="chapter6_answer_1_4">empty body</string>
    <string name="chapter6_correct_answer_1">1</string>
    <string name="chapter6_question_2">A block f statement that executes and the boolean expression is evaluated again:</string>
    <string name="chapter6_answer_2_1">loop</string>
    <string name="chapter6_answer_2_2">loop body</string>
    <string name="chapter6_answer_2_3">iteration</string>
    <string name="chapter6_answer_2_4">empty body</string>
    <string name="chapter6_correct_answer_2">2</string>
    <string name="chapter6_question_3">One execution of any loop:</string>
    <string name="chapter6_answer_3_1">loop</string>
    <string name="chapter6_answer_3_2">loop body</string>
    <string name="chapter6_answer_3_3">iteration</string>
    <string name="chapter6_answer_3_4">empty body</string>
    <string name="chapter6_correct_answer_3">3</string>
    <string name="chapter6_question_4">This loop has an___________, or a body with no statement in it:</string>
    <string name="chapter6_answer_4_1">loop</string>
    <string name="chapter6_answer_4_2">loop body</string>
    <string name="chapter6_answer_4_3">iteration</string>
    <string name="chapter6_answer_4_4">empty body</string>
    <string name="chapter6_correct_answer_4">4</string>
    <string name="chapter6_question_5">The process of ensuring that a value falls within a specified range:</string>
    <string name="chapter6_answer_5_1">validating data</string>
    <string name="chapter6_answer_5_2">counting</string>
    <string name="chapter6_answer_5_3">accumulating </string>
    <string name="chapter6_answer_5_4">assign operator</string>
    <string name="chapter6_correct_answer_5">1</string>
    <string name="chapter6_question_6">Incrementing a variable in a loop to keep track of the number of occurrences of some event:</string>
    <string name="chapter6_answer_6_1">validating data</string>
    <string name="chapter6_answer_6_2">counting</string>
    <string name="chapter6_answer_6_3">accumulating </string>
    <string name="chapter6_answer_6_4">assign operator</string>
    <string name="chapter6_correct_answer_6">2</string>
    <string name="chapter6_question_7">The process of repeatedly increasing a value by some amount:</string>
    <string name="chapter6_answer_7_1">validating data</string>
    <string name="chapter6_answer_7_2">counting</string>
    <string name="chapter6_answer_7_3">accumulating </string>
    <string name="chapter6_answer_7_4">assign operator</string>
    <string name="chapter6_correct_answer_7">3</string>
    <string name="chapter6_question_8">Ones in which the loop control variable is tested before the loop executes:</string>
    <string name="chapter6_answer_8_1">pretest loop</string>
    <string name="chapter6_answer_8_2">do … while loop</string>
    <string name="chapter6_answer_8_3">postfix loop</string>
    <string name="chapter6_answer_8_4">while loop</string>
    <string name="chapter6_correct_answer_8">1</string>
    <string name="chapter6_question_9">One in which the loop control variable is tested after the loop body executes:</string>
    <string name="chapter6_answer_9_1">pretest loop</string>
    <string name="chapter6_answer_9_2">do … while loop</string>
    <string name="chapter6_answer_9_3">postfix loop</string>
    <string name="chapter6_answer_9_4">while loop</string>
    <string name="chapter6_correct_answer_9">3</string>
    <string name="chapter6_question_10">Checks the value of the loop control variable at the bottom of the loop after one repetition has occurred:</string>
    <string name="chapter6_answer_10_1">pretest loop</string>
    <string name="chapter6_answer_10_2">do … while loop</string>
    <string name="chapter6_answer_10_3">postfix loop</string>
    <string name="chapter6_answer_10_4">while loop</string>
    <string name="chapter6_correct_answer_10">2</string>

    <string name="chapter7_question_1">A variable that holds a memory address:</string>
    <string name="chapter7_answer_1_1">reference</string>
    <string name="chapter7_answer_1_2">character class</string>
    <string name="chapter7_answer_1_3">string class</string>
    <string name="chapter7_answer_1_4">string variable</string>
    <string name="chapter7_correct_answer_1">1</string>
    <string name="chapter7_question_2">The ________is for working with fixed-string data that is, unchanging data composed of multiple characters:</string>
    <string name="chapter7_answer_2_1">reference</string>
    <string name="chapter7_answer_2_2">character class</string>
    <string name="chapter7_answer_2_3">string class</string>
    <string name="chapter7_answer_2_4">string variable</string>
    <string name="chapter7_correct_answer_2">2</string>
    <string name="chapter7_question_3">An ________ is an unnamed object:</string>
    <string name="chapter7_answer_3_1">anonymous object</string>
    <string name="chapter7_answer_3_2">string variable</string>
    <string name="chapter7_answer_3_3">immutable</string>
    <string name="chapter7_answer_3_4">equals()</string>
    <string name="chapter7_correct_answer_3">1</string>
    <string name="chapter7_question_4">____________ object cannot be change:</string>
    <string name="chapter7_answer_4_1">anonymous object</string>
    <string name="chapter7_answer_4_2">string variable</string>
    <string name="chapter7_answer_4_3">immutable</string>
    <string name="chapter7_answer_4_4">equals ()</string>
    <string name="chapter7_correct_answer_4">3</string>
    <string name="chapter7_question_5">The string class____________ evaluates the contents of two string object to determine if they are equivalent:</string>
    <string name="chapter7_answer_5_1">lexicographical comparison</string>
    <string name="chapter7_answer_5_2">equalIgnoranceCase()</string>
    <string name="chapter7_answer_5_3">compareTo()</string>
    <string name="chapter7_answer_5_4">equals()</string>
    <string name="chapter7_correct_answer_5">4</string>
    <string name="chapter7_question_6">The string class_____________ converts any string to its uppercase equivalent:</string>
    <string name="chapter7_answer_6_1">toUppercase()</string>
    <string name="chapter7_answer_6_2">toLowercase()</string>
    <string name="chapter7_answer_6_3">length()</string>
    <string name="chapter7_answer_6_4">acessor()</string>
    <string name="chapter7_correct_answer_6">1</string>
    <string name="chapter7_question_7">The string class___________ returns the length of a string:</string>
    <string name="chapter7_answer_7_1">toUppercase()</string>
    <string name="chapter7_answer_7_2">toLowercase()</string>
    <string name="chapter7_answer_7_3">length()</string>
    <string name="chapter7_answer_7_4">acessor()</string>
    <string name="chapter7_correct_answer_7">3</string>
    <string name="chapter7_question_8">A string builder objects, however, contains a memory block:</string>
    <string name="chapter7_answer_8_1">capacity</string>
    <string name="chapter7_answer_8_2">length property</string>
    <string name="chapter7_answer_8_3">setlength()</string>
    <string name="chapter7_answer_8_4">buffer</string>
    <string name="chapter7_correct_answer_8">4</string>
    <string name="chapter7_question_9">The _____________ lets you add characters to the end of the string builders object:</string>
    <string name="chapter7_answer_9_1">setLength()</string>
    <string name="chapter7_answer_9_2">setCharAt()</string>
    <string name="chapter7_answer_9_3">insert()</string>
    <string name="chapter7_answer_9_4">append()</string>
    <string name="chapter7_correct_answer_9">4</string>
    <string name="chapter7_question_10">The __________ lets you add characters at a specific location within a string builders object:</string>
    <string name="chapter7_answer_10_1">setLength()</string>
    <string name="chapter7_answer_10_2">setCharAt()</string>
    <string name="chapter7_answer_10_3">insert()</string>
    <string name="chapter7_answer_10_4">append()</string>
    <string name="chapter7_correct_answer_10">3</string>

    <string name="chapter8_question_1"></string>
    <string name="chapter8_answer_1_1"></string>
    <string name="chapter8_answer_1_2"></string>
    <string name="chapter8_answer_1_3"></string>
    <string name="chapter8_answer_1_4"></string>
    <string name="chapter8_correct_answer_1"></string>
    <string name="chapter8_question_2"></string>
    <string name="chapter8_answer_2_1"></string>
    <string name="chapter8_answer_2_2"></string>
    <string name="chapter8_answer_2_3"></string>
    <string name="chapter8_answer_2_4"></string>
    <string name="chapter8_correct_answer_2"></string>
    <string name="chapter8_question_3"></string>
    <string name="chapter8_answer_3_1"></string>
    <string name="chapter8_answer_3_2"></string>
    <string name="chapter8_answer_3_3"></string>
    <string name="chapter8_answer_3_4"></string>
    <string name="chapter8_correct_answer_3"></string>
    <string name="chapter8_question_4"></string>
    <string name="chapter8_answer_4_1"></string>
    <string name="chapter8_answer_4_2"></string>
    <string name="chapter8_answer_4_3"></string>
    <string name="chapter8_answer_4_4"></string>
    <string name="chapter8_correct_answer_4"></string>
    <string name="chapter8_question_5"></string>
    <string name="chapter8_answer_5_1"></string>
    <string name="chapter8_answer_5_2"></string>
    <string name="chapter8_answer_5_3"></string>
    <string name="chapter8_answer_5_4"></string>
    <string name="chapter8_correct_answer_5"></string>
    <string name="chapter8_question_6"></string>
    <string name="chapter8_answer_6_1"></string>
    <string name="chapter8_answer_6_2"></string>
    <string name="chapter8_answer_6_3"></string>
    <string name="chapter8_answer_6_4"></string>
    <string name="chapter8_correct_answer_6"></string>
    <string name="chapter8_question_7"></string>
    <string name="chapter8_answer_7_1"> </string>
    <string name="chapter8_answer_7_2"></string>
    <string name="chapter8_answer_7_3"></string>
    <string name="chapter8_answer_7_4"></string>
    <string name="chapter8_correct_answer_7">1</string>
    <string name="chapter8_question_8"></string>
    <string name="chapter8_answer_8_1"> </string>
    <string name="chapter8_answer_8_2"></string>
    <string name="chapter8_answer_8_3"></string>
    <string name="chapter8_answer_8_4"></string>
    <string name="chapter8_correct_answer_8">1</string>
    <string name="chapter8_question_9"></string>
    <string name="chapter8_answer_9_1"></string>
    <string name="chapter8_answer_9_2"></string>
    <string name="chapter8_answer_9_3"></string>
    <string name="chapter8_answer_9_4"></string>
    <string name="chapter8_correct_answer_9"></string>
    <string name="chapter8_question_10"></string>
    <string name="chapter8_answer_10_1"></string>
    <string name="chapter8_answer_10_2"></string>
    <string name="chapter8_answer_10_3"></string>
    <string name="chapter8_answer_10_4"></string>
    <string name="chapter8_correct_answer_10"></string>


    <string name="chapter9_question_1"></string>
    <string name="chapter9_answer_1_1"></string>
    <string name="chapter9_answer_1_2"></string>
    <string name="chapter9_answer_1_3"></string>
    <string name="chapter9_answer_1_4"></string>
    <string name="chapter9_correct_answer_1"></string>
    <string name="chapter9_question_2"></string>
    <string name="chapter9_answer_2_1"></string>
    <string name="chapter9_answer_2_2"></string>
    <string name="chapter9_answer_2_3"></string>
    <string name="chapter9_answer_2_4"></string>
    <string name="chapter9_correct_answer_2"></string>
    <string name="chapter9_question_3"></string>
    <string name="chapter9_answer_3_1"></string>
    <string name="chapter9_answer_3_2"></string>
    <string name="chapter9_answer_3_3"></string>
    <string name="chapter9_answer_3_4"></string>
    <string name="chapter9_correct_answer_3"></string>
    <string name="chapter9_question_4"></string>
    <string name="chapter9_answer_4_1"></string>
    <string name="chapter9_answer_4_2"></string>
    <string name="chapter9_answer_4_3"></string>
    <string name="chapter9_answer_4_4"></string>
    <string name="chapter9_correct_answer_4"></string>
    <string name="chapter9_question_5"></string>
    <string name="chapter9_answer_5_1"></string>
    <string name="chapter9_answer_5_2"></string>
    <string name="chapter9_answer_5_3"></string>
    <string name="chapter9_answer_5_4"></string>
    <string name="chapter9_correct_answer_5"></string>
    <string name="chapter9_question_6"></string>
    <string name="chapter9_answer_6_1"></string>
    <string name="chapter9_answer_6_2"></string>
    <string name="chapter9_answer_6_3"></string>
    <string name="chapter9_answer_6_4"></string>
    <string name="chapter9_correct_answer_6"></string>
    <string name="chapter9_question_7"></string>
    <string name="chapter9_answer_7_1"> </string>
    <string name="chapter9_answer_7_2"></string>
    <string name="chapter9_answer_7_3"></string>
    <string name="chapter9_answer_7_4"></string>
    <string name="chapter9_correct_answer_7">1</string>
    <string name="chapter9_question_8"></string>
    <string name="chapter9_answer_8_1"> </string>
    <string name="chapter9_answer_8_2"></string>
    <string name="chapter9_answer_8_3"></string>
    <string name="chapter9_answer_8_4"></string>
    <string name="chapter9_correct_answer_8">1</string>
    <string name="chapter9_question_9"></string>
    <string name="chapter9_answer_9_1"></string>
    <string name="chapter9_answer_9_2"></string>
    <string name="chapter9_answer_9_3"></string>
    <string name="chapter9_answer_9_4"></string>
    <string name="chapter9_correct_answer_9"></string>
    <string name="chapter9_question_10"></string>
    <string name="chapter9_answer_10_1"></string>
    <string name="chapter9_answer_10_2"></string>
    <string name="chapter9_answer_10_3"></string>
    <string name="chapter9_answer_10_4"></string>
    <string name="chapter9_correct_answer_10"></string>

    <string name="chapter10_question_1"></string>
    <string name="chapter10_answer_1_1"></string>
    <string name="chapter10_answer_1_2"></string>
    <string name="chapter10_answer_1_3"></string>
    <string name="chapter10_answer_1_4"></string>
    <string name="chapter10_correct_answer_1"></string>
    <string name="chapter10_question_2"></string>
    <string name="chapter10_answer_2_1"></string>
    <string name="chapter10_answer_2_2"></string>
    <string name="chapter10_answer_2_3"></string>
    <string name="chapter10_answer_2_4"></string>
    <string name="chapter10_correct_answer_2"></string>
    <string name="chapter10_question_3"></string>
    <string name="chapter10_answer_3_1"></string>
    <string name="chapter10_answer_3_2"></string>
    <string name="chapter10_answer_3_3"></string>
    <string name="chapter10_answer_3_4"></string>
    <string name="chapter10_correct_answer_3"></string>
    <string name="chapter10_question_4"></string>
    <string name="chapter10_answer_4_1"></string>
    <string name="chapter10_answer_4_2"></string>
    <string name="chapter10_answer_4_3"></string>
    <string name="chapter10_answer_4_4"></string>
    <string name="chapter10_correct_answer_4"></string>
    <string name="chapter10_question_5"></string>
    <string name="chapter10_answer_5_1"></string>
    <string name="chapter10_answer_5_2"></string>
    <string name="chapter10_answer_5_3"></string>
    <string name="chapter10_answer_5_4"></string>
    <string name="chapter10_correct_answer_5"></string>
    <string name="chapter10_question_6"></string>
    <string name="chapter10_answer_6_1"></string>
    <string name="chapter10_answer_6_2"></string>
    <string name="chapter10_answer_6_3"></string>
    <string name="chapter10_answer_6_4"></string>
    <string name="chapter10_correct_answer_6"></string>
    <string name="chapter10_question_7"></string>
    <string name="chapter10_answer_7_1"> </string>
    <string name="chapter10_answer_7_2"></string>
    <string name="chapter10_answer_7_3"></string>
    <string name="chapter10_answer_7_4"></string>
    <string name="chapter10_correct_answer_7">1</string>
    <string name="chapter10_question_8"></string>
    <string name="chapter10_answer_8_1"> </string>
    <string name="chapter10_answer_8_2"></string>
    <string name="chapter10_answer_8_3"></string>
    <string name="chapter10_answer_8_4"></string>
    <string name="chapter10_correct_answer_8">1</string>
    <string name="chapter10_question_9"></string>
    <string name="chapter10_answer_9_1"></string>
    <string name="chapter10_answer_9_2"></string>
    <string name="chapter10_answer_9_3"></string>
    <string name="chapter10_answer_9_4"></string>
    <string name="chapter10_correct_answer_9"></string>
    <string name="chapter10_question_10"></string>
    <string name="chapter10_answer_10_1"></string>
    <string name="chapter10_answer_10_2"></string>
    <string name="chapter10_answer_10_3"></string>
    <string name="chapter10_answer_10_4"></string>
    <string name="chapter10_correct_answer_10"></string>


    <string name="question_geography_1">What is the capital city of Iran?</string>
    <string name="geography_answer_1_1">Teheran</string>
    <string name="geography_answer_1_2">Ankara</string>
    <string name="geography_answer_1_3">Dushanbe</string>
    <string name="geography_answer_1_4">Riyadh</string>
    <string name="geography_correct_answer_1">1</string>
    <string name="question_geography_2">Which lake is the biggest in Sweden?</string>
    <string name="geography_answer_2_1">Mälaren</string>
    <string name="geography_answer_2_2">Vättern</string>
    <string name="geography_answer_2_3">Vänern</string>
    <string name="geography_answer_2_4">Storsjön</string>
    <string name="geography_correct_answer_2">3</string>
    <string name="question_geography_3">What percentage of Japan consist of mountains?</string>
    <string name="geography_answer_3_1">80%</string>
    <string name="geography_answer_3_2">54%</string>
    <string name="geography_answer_3_3">73%</string>
    <string name="geography_answer_3_4">63%</string>
    <string name="geography_correct_answer_3">3</string>
    <string name="question_geography_4">How tall is Mount Everest?</string>
    <string name="geography_answer_4_1">8398m</string>
    <string name="geography_answer_4_2">8530m</string>
    <string name="geography_answer_4_3">8713m</string>
    <string name="geography_answer_4_4">8848m</string>
    <string name="geography_correct_answer_4">4</string>
    <string name="question_geography_5">Which country is to the west of Sweden?</string>
    <string name="geography_answer_5_1">Island</string>
    <string name="geography_answer_5_2">Finland</string>
    <string name="geography_answer_5_3">Belarus</string>
    <string name="geography_answer_5_4">Russia</string>
    <string name="geography_correct_answer_5">1</string>
    <string name="question_geography_6">What is earth\'s second largest continent by population</string>
    <string name="geography_answer_6_1">South America</string>
    <string name="geography_answer_6_2">Africa</string>
    <string name="geography_answer_6_3">North America</string>
    <string name="geography_answer_6_4">Europe</string>
    <string name="geography_correct_answer_6">2</string>
    <string name="question_geography_7">In which american state is Grand Canyon?</string>
    <string name="geography_answer_7_1">Alaska</string>
    <string name="geography_answer_7_2">Texas</string>
    <string name="geography_answer_7_3">Virginia</string>
    <string name="geography_answer_7_4">Arizona</string>
    <string name="geography_correct_answer_7">4</string>
    <string name="question_geography_8">What is the longest river in South America?</string>
    <string name="geography_answer_8_1">Madeira</string>
    <string name="geography_answer_8_2">Amazon</string>
    <string name="geography_answer_8_3">Parana</string>
    <string name="geography_answer_8_4">Araguaia</string>
    <string name="geography_correct_answer_8">2</string>
    <string name="question_geography_9">What is earth\'s largest continent by surface size?</string>
    <string name="geography_answer_9_1">Africa</string>
    <string name="geography_answer_9_2">North America</string>
    <string name="geography_answer_9_3">Europe</string>
    <string name="geography_answer_9_4">Asia</string>
    <string name="geography_correct_answer_9">4</string>
    <string name="question_geography_10">What is the largest lake in Africa?</string>
    <string name="geography_answer_10_1">Lake Malawi</string>
    <string name="geography_answer_10_2">Lake Albert</string>
    <string name="geography_answer_10_3">Lake Victoria</string>
    <string name="geography_answer_10_4">Lake Tanganyika</string>
    <string name="geography_correct_answer_10">3</string>
    <string name="question_mathematics_1">What is the value of pi(π)?</string>
    <string name="mathematics_answer_1_1">3.14159265359</string>
    <string name="mathematics_answer_1_2">3.1321343</string>
    <string name="mathematics_answer_1_3">3.412131436</string>
    <string name="mathematics_answer_1_4">4.130054</string>
    <string name="mathematics_correct_answer_1">1</string>
    <string name="question_mathematics_2">What is 2+2?</string>
    <string name="mathematics_answer_2_1">22</string>
    <string name="mathematics_answer_2_2">Cheese Cakes</string>
    <string name="mathematics_answer_2_3">2</string>
    <string name="mathematics_answer_2_4">4</string>
    <string name="mathematics_correct_answer_2">4</string>
    <string name="question_mathematics_3">How do you calculate the circumference of a circle?</string>
    <string name="mathematics_answer_3_1">C=2πr</string>
    <string name="mathematics_answer_3_2">C=2πd</string>
    <string name="mathematics_answer_3_3">C=4πr</string>
    <string name="mathematics_answer_3_4">A=wl</string>
    <string name="mathematics_correct_answer_3">1</string>
    <string name="question_mathematics_4">What is x times x?</string>
    <string name="mathematics_answer_4_1">2x</string>
    <string name="mathematics_answer_4_2">x^2</string>
    <string name="mathematics_answer_4_3">2x2</string>
    <string name="mathematics_answer_4_4">x2</string>
    <string name="mathematics_correct_answer_4">2</string>
    <string name="question_mathematics_5">What is x+3=5</string>
    <string name="mathematics_answer_5_1">x=5</string>
    <string name="mathematics_answer_5_2">x=3</string>
    <string name="mathematics_answer_5_3">x=2</string>
    <string name="mathematics_answer_5_4">x=4</string>
    <string name="mathematics_correct_answer_5">3</string>
    <string name="question_mathematics_6">How many sides does a hexagon have?</string>
    <string name="mathematics_answer_6_1">4</string>
    <string name="mathematics_answer_6_2">5</string>
    <string name="mathematics_answer_6_3">6</string>
    <string name="mathematics_answer_6_4">7</string>
    <string name="mathematics_correct_answer_6">3</string>
    <string name="question_mathematics_7">What is the square root of 49?</string>
    <string name="mathematics_answer_7_1">6</string>
    <string name="mathematics_answer_7_2">9</string>
    <string name="mathematics_answer_7_3">4</string>
    <string name="mathematics_answer_7_4">7</string>
    <string name="mathematics_correct_answer_7">4</string>
    <string name="question_mathematics_8">What is 13 times 13?</string>
    <string name="mathematics_answer_8_1">169</string>
    <string name="mathematics_answer_8_2">157</string>
    <string name="mathematics_answer_8_3">175</string>
    <string name="mathematics_answer_8_4">163</string>
    <string name="mathematics_correct_answer_8">1</string>
    <string name="question_mathematics_9">What is 213-75</string>
    <string name="mathematics_answer_9_1">123</string>
    <string name="mathematics_answer_9_2">130</string>
    <string name="mathematics_answer_9_3">138</string>
    <string name="mathematics_answer_9_4">143</string>
    <string name="mathematics_correct_answer_9">3</string>
    <string name="question_mathematics_10">If 1 euro = 9,30 SEK, how many SEK do you get from 7 euros?</string>
    <string name="mathematics_answer_10_1">63,70 SEK</string>
    <string name="mathematics_answer_10_2">65,10 SEK</string>
    <string name="mathematics_answer_10_3">67,40 SEK</string>
    <string name="mathematics_answer_10_4">64,85 SEK</string>
    <string name="mathematics_correct_answer_10">2</string>
    <string name="question_games_1"><![CDATA[What is Mario & Luigi’s last name?]]></string>
    <string name="games_answer_1_1">Luigi</string>
    <string name="games_answer_1_2">Mario</string>
    <string name="games_answer_1_3">Lombardi</string>
    <string name="games_answer_1_4">Alfredo</string>
    <string name="games_correct_answer_1">2</string>
    <string name="question_games_2">When was Nintendo as a company founded?</string>
    <string name="games_answer_2_1">1991</string>
    <string name="games_answer_2_2">1979</string>
    <string name="games_answer_2_3">1889</string>
    <string name="games_answer_2_4">1981</string>
    <string name="games_correct_answer_2">3</string>
    <string name="question_games_3">Before Nintendo made Video Games they made...</string>
    <string name="games_answer_3_1">Card Games</string>
    <string name="games_answer_3_2">Chairs</string>
    <string name="games_answer_3_3">Electronics</string>
    <string name="games_answer_3_4">Amusement Parks</string>
    <string name="games_correct_answer_3">1</string>
    <string name="question_games_4">Who is the creator of Super Mario?</string>
    <string name="games_answer_4_1">Satoru Iwata</string>
    <string name="games_answer_4_2">Reginald Fils-Aime</string>
    <string name="games_answer_4_3">Shigeru Miyamoto</string>
    <string name="games_answer_4_4">Gunpei Yokoi</string>
    <string name="games_correct_answer_4">3</string>
    <string name="question_games_5">What is the name of the main character in the “The Legend of Zelda”?</string>
    <string name="games_answer_5_1">Zelda</string>
    <string name="games_answer_5_2">Link</string>
    <string name="games_answer_5_3">Roy</string>
    <string name="games_answer_5_4">Master Chief</string>
    <string name="games_correct_answer_5">2</string>
    <string name="question_games_6">"How many Pokémons were in the first generation of Pokémon? "</string>
    <string name="games_answer_6_1">150</string>
    <string name="games_answer_6_2">100</string>
    <string name="games_answer_6_3">200</string>
    <string name="games_answer_6_4">151</string>
    <string name="games_correct_answer_6">4</string>
    <string name="question_games_7">"Which platform was Halo: Combat Evolved first in development for? "</string>
    <string name="games_answer_7_1">MAC OS X</string>
    <string name="games_answer_7_2">Windows</string>
    <string name="games_answer_7_3">Linux</string>
    <string name="games_answer_7_4">Xbox</string>
    <string name="games_correct_answer_7">1</string>
    <string name="question_games_8">Which game has the most unique players each month?</string>
    <string name="games_answer_8_1">League of Legends</string>
    <string name="games_answer_8_2">Dota2</string>
    <string name="games_answer_8_3">Counter-Strike:GO</string>
    <string name="games_answer_8_4">World of Warcraft</string>
    <string name="games_correct_answer_8">1</string>
    <string name="question_games_9">What\'s your robot called in Fallout4?</string>
    <string name="games_answer_9_1">Hedreck</string>
    <string name="games_answer_9_2">Codsworth</string>
    <string name="games_answer_9_3">Tincan</string>
    <string name="games_answer_9_4">Millow</string>
    <string name="games_correct_answer_9">2</string>
    <string name="question_games_10">In what year was the game The sims released?</string>
    <string name="games_answer_10_1">1998</string>
    <string name="games_answer_10_2">1999</string>
    <string name="games_answer_10_3">2000</string>
    <string name="games_answer_10_4">2001</string>
    <string name="games_correct_answer_10">3</string>
    <string name="Main_Activity">com.example.jamesrussel.javamadeeasy.MainActivity</string>
    <string name="name2"> Type your name here...</string>

    <string name="icon_user">&#xf007;</string>
    <string name="icon_add">&#xf067;</string>
    <string name="icon_readmore">&#xf178;</string>
    <string name="icon_answer">&#xf095;</string>
    <string name="icon_mute">&#xf131;</string>

    <string name="icon_like">&#xf087;</string>
    <string name="icon_share">&#xf064;</string>
    <string name="icon_follow">&#xf005;</string>

    <string name="icon_android">&#xf17b;</string>
    <string name="icon_dropbox">&#xf16b;</string>
    <string name="icon_soundcloud">&#xf1be;</string>
    <string name="icon_spotify">&#xf1bc;</string>

    <string name="icon_vine">&#xf1ca;</string>
    <string name="icon_twitter">&#xf099;</string>
    <string name="icon_tumbler">&#xf173;</string>
    <string name="icon_stackoverflow">&#xf16c;</string>
    <string name="icon_gplus">&#xf0d5;</string>
    <string name="icon_facebook">&#xf09a;</string>

    <string name="icon_entypo_facebook">&#59140;</string>

    <string name="icon_behance">&#xf1b4;</string>
    <string name="icon_dribble">&#xf17d;</string>

    <string name="icon_send">&#xf1d8;</string>
    <string name="icon_download">&#xf0ed;</string>
    <string name="icon_upload">&#xf0ee;</string>
    <string name="icon_config">&#xf085;</string>
    <string name="icon_creditcard">&#xf09d;</string>
    <string name="ghost_button_title">Ghost Button</string>
    <string name="icon_envelope"></string>

    <string name="p1">
        This java program finds if a number is odd or even. If the number is divisible by 2 then it will be even,
        otherwise it is odd.
        We use modulus operator to find remainder in our program.
    </string>

     <string name="p2">
        This java program finds if a number is odd or even. If the number is divisible by 2 then it will be even,
        otherwise it is odd.
        We use modulus operator to find remainder in our program.
    </string>

     <string name="p3">
         This java program prints prime numbers, number of prime numbers required is asked from the user.
         Remember that smallest prime number is 2.
    </string>

     <string name="p4">
        This java program finds largest of three numbers and then prints it.
         If the entered numbers are unequal then "numbers are not distinct" is printed.
    </string>

    <string name="p5">
        Swap Numbers Without Using Third Variable Java Example. This Swap Numbers Java Example shows how to
        swap value of two numbers without using third variable using java.
    </string>

     <string name="p6">
         In mathematics, the Fibonacci numbers or Fibonacci series or Fibonacci sequence are the numbers. By definition,
         the first two numbers in the Fibonacci sequence are 0 and 1, and each subsequent number is the sum of the previous two.
    </string>

     <string name="p7">
        Java palindrome program: Java program to check if a string is a palindrome or not.
        Remember a string is a palindrome if it remains unchanged when reversed, for example \"dad\" is a palindrome as reverse of \"dad\" is \"dad\" whereas \"program\" is not a palindrome.
    </string>

     <string name="p8">
        Pascals triangle is a set of numbers arranged in the form of a triangle. Each number in a row is the sum of the left
        number and right number on the above row. If a number is missing in the above row, it is assumed to
        be 0.
    </string>

     <string name="p9">
        Leap year is a year, occurring once every four years, that has 366 days including February 29 as an intercalary day.
         This Determine If Year Is Leap Year Java Example shows how to determine whether the given year is leap year or not.
    </string>

     <string name="p10">
        A Perfect Number is sum of its positive divisors, excluding the number itself.
    </string>

    <string name="p11">
        Armstrong number is a number which is equal to sum of digits raise to the power total number of digits in the number.
Some Armstrong numbers are: 0, 1, 4, 5, 9, 153, 371, 407, 8208 etc.
    </string>

    <string name="p12">
        If sum of factorial of each digit of the number is same as the actual number then that number is called as strong number.
    The First Perfect number is 6, For example 6 is a perfect number as 1,2 and3 are its divisors and the
    sum of divisors= ( 1 + 2 + 3)  = 6.
    </string>

      <string name="p13">
        In Floyd triangle there are n integers in the nth row and a total of (n(n+1))/2 integers in n rows.
    This is a simple pattern to print but helpful in learning how to create other patterns.
    Key to develop pattern is using nested loops appropriately.
    </string>

    <string name="p14">
        This program prints reverse of a number i.e. if the input is 951 then output will be 159.
    </string>

    <string name="p15">
        One of the common programming practice question thrown to beginners is to write a program to calculate the sum of digits in an integral number.
        For example, if the input is 123456 then output or sum of the digit is (1+2+3+4+5+6) = 21.
    </string>

    <string name="p16">
        Java program for power function without math class. The power of a number shows you how many times to
        use the number in a multiplication. This program uses two classes i.e one is defining the function power
        use the number in a multiplication. This program uses two classes i.e one is defining the function power
        in power class and other is containing static main method, which is creating object of power class and calling its function.
    </string>

    <string name="p17">
        Any number is a combination of digits, like 342 have three digits.
        For calculating the number of digits of any number user have three possibilities to input values.
    </string>

    <string name="p18">
        Random class generates random numbers in a deterministic way.
    The algorithm that produces the randomness is based on a number called a seed.
    If the seed number is known then its possible to figure out the numbers that are going to be
    produced from the algorithm.
    </string>

    <string name="p19">
        The formula for converting temperature in Celsius to Fahrenheit is,Fahrenheit = (9/5) * Celsius + 32
        For example, if the temperature is 35 in Celsius, the equivalent value in Fahrenheit is (9/5) * 35 + 32 = 95 F.
        The formula for converting temperature in Fahrenheit to Celsius is, Celsius = (5/9) * (Fahrenheit – 32).
    </string>

    <string name="p20">

    </string>











    <string name="program1">
        Number is Even or Odd\n
    </string>

    <string name="output3"><![CDATA[
        public class PrimeNumbers\n
        {\n
        public static void main(String[] args)\n {\n
        \t//define limit\n
                \t\tint limit = 100;\n
                \t\tSystem.out.println(\"Prime numbers between 1 and \" + limit);\n\n

                \t\t//loop through the numbers one by one\n
                \t\tfor(int i=1; i &#8249; 100; i++){\n\n

                       \t\t\t boolean isPrime = true;\n\n

                        \t\t\t//check to see if the number is prime\n
                       \t\t\t for(int j=2; j &#8249; i; j++){\n\n

                       \t\t\t if(i % j == 0){\n
                        \t\t\t\t\t isPrime = false;\n
                        \t\t\t\t\t break;\n
                          \t\t\t\t }\n
                         \t\t\t\t}\n
                       \t\t\t\t\t // print the number\n
                        \t\t\t\t\tif(isPrime)\n
                        \t\t\t\t\t\nSystem.out.print(i + \" \");\n
        \t\t\t\t\t }\n
      \t\t\t\t }\n
}
]]>
    </string>
    <string name="output4"> &#160;
    import java.util.Scanner;\n
    class LargestOfThreeNumbers\n
{\n
   \tpublic static void main(String args[])\n
   {\n
      \tint x, y, z;\n
      \tSystem.out.println(\"Enter three integers \");\n
      \tScanner in = new Scanner(System.in);\n\n

      \tx = in.nextInt();\n
      \ty = in.nextInt();\n
      \tz = in.nextInt();\n\n

      \tif ( x > y &amp;&amp; x > z )\n
      \t \t System.out.println(\"First number is largest.\");\n
      \telse if ( y > x &amp;&amp; y > z )\n
        \t \t  System.out.println(\"Second number is largest.\");\n
      \telse if ( z > x &amp;&amp; z > y )\n
       \t\t System.out.println(\"Third number is largest.\");\n
      \telse\n
         \t\tSystem.out.println(\"Entered numbers are not distinct.\");\n
   \t\t}\n
}
    </string>

    <string name="output5">
        public class SwapWithoutThirdVariable {\n\n

        public static void main(String[] args) {\n

                \tint num1 = 10;\n
                \tint num2 = 20;\n\n

                \tSystem.out.println(\"Before Swapping\");\n
                \tSystem.out.println(\"Value of num1 is :\" + num1);\n
                \tSystem.out.println(\"Value of num2 is :\" +num2);\n

               \t //add both the numbers and assign it to first\n
                \tnum1 = num1 + num2;\n
                \tnum2 = num1 - num2;\n
                \tnum1 = num1 - num2;\n\n

                \tSystem.out.println(\"Before Swapping\");\n
                \tSystem.out.println(\"Value of num1 is :\" + num1);\n
                \tSystem.out.println(\"Value of num2 is :\" +num2);\n
    \t\r  }\n
}
    </string>

     <string name="output6">
          public class Fibonacci{\n\n
    public static void main(String args[])\n
    {\n
     \tint n1=0,n2=1,n3,i,count=10;\n
     \tSystem.out.print(n1+\" \"+n2);//printing 0 and 1\n\n

     \tfor(i=2;i &#8249; count; ++i)//loop starts from 2 because 0 and 1 are already printed\n
     \t{\n
       \tn3=n1+n2;\n
       \tSystem.out.print(\" \"+n3);\n
       \tn1=n2;\n
       \tn2=n3;\n
      \t\t}\n
    \t}\n
         }
    </string>

     <string name="output7">
         public class Palindrome{\n\n
     public static void main(String args[]){\n
      \tint r,sum=0,temp;\n
      \tint n=454;//It is the number variable to be checked for palindrome \n \n

      \ttemp=n;\n
      \twhile(n>0){\n
       \tr=n%10;  //getting remainder\n
       \tsum=(sum*10)+r;\n
       \tn=n/10;\n
      \t}\n
      \tif(temp==sum)\n
       \t\tSystem.out.println(\"palindrome number \");\n
      \telse\n
       \t\tSystem.out.println(\"not palindrome\");\n
   \t}\n
    }
    </string>

     <string name="output8" formatted="false">
        public class PascalTriangle {\n\n

    public static void main(String[] args) {\n\n

        \t\tint rows = 10;


        \tfor(int i =0;i &#8249; rows;i++) {\n
          \t\t int number = 1;\n
            \tSystem.out.format(\"%\"+(rows-i)*2+\"s\",\"\");
            \tfor(int j = 0;j &#8249; = i; j++) {\n
                 \t\tSystem.out.format(\"%4d\",number);\n
                 \tnumber = number * (i - j) / (j + 1);\n

            \t\t\t}\n
            \t\tSystem.out.println();\n
        \t\t}\n
    \t}\n
}
    </string>

     <string name="output9" formatted="false">
        import java.util.Scanner;\n
         public class LeapYear {\n\n

	\tint year;\n
	\tScanner scan;\n
	\tvoid check() {
		\n\tSystem.out.println("\Check leap year or not\");

		\t\tSystem.out.println("\nEnter the year : \");\n
		\t\tscan = new Scanner(System.in);\n\n

		\t\tyear = Integer.parseInt(scan.nextLine());\n\n

		\t\tif(year%400 == 0 || year%4 == 0)\n
		\t\t\tSystem.out.println(year + " is a leap year");\n\n

		\t\telse\n
			\t\t\tSystem.out.println(year + \" is not a leap year\");\n
	\t}\n
}

class MainClass {

	public static void main(String str[]) {

		Leap_Ex1 obj = new Leap_Ex1();

		obj.check();
	}
}
    </string>

     <string name="output10" formatted="false">
        import java.util.Scanner;\n
class PerfectNumber\n
{\n
   \tpublic static void main(String args[])\n
    \t{\n
      \t\tScanner sl=new Scanner(System.in);\n
       \t\tSystem.out.println(\"Enter A Number\");\n
        \t\tint num=sl.nextInt();\n\n

        \t\tint b=1, s=0;\n
        \t\twhile(b &#8249; num )\n
        \t\t{
            \tif(num%b == 0)\n
            \t{\n
                \t\ts += b;\n
            \t\t}\n
            \t\tb++;\n
        \t}\n
        \t\tif(s == num)\n
        \t{\n
            \t\tSystem.out.println(num+\" is a perfect number\");\n
        \t}\n
       \telse\n
        \t\t{\n
           \t\t\tSystem.out.println(num+\" is not a perfect number\");\n
        \t\t}\n
    \t}\n
}
    </string>

     <string name="output11"> <![CDATA[
     <pre>
    import java.util.Scanner;

    class ArmstrongNumber
    {
   public static void main(String args[])
   {
      int n, sum = 0, temp, remainder, digits = 0;

      Scanner in = new Scanner(System.in);
      System.out.println("Input a number to check if it is an Armstrong number");
      n = in.nextInt();

      temp = n;

      // Count number of digits

      while (temp != 0) {
         digits++;
         temp = temp/10;
      }

      temp = n;

      while (temp != 0) {
         remainder = temp%10;
         sum = sum + power(remainder, digits);
         temp = temp/10;
      }

      if (n == sum)
         System.out.println(n + " is an Armstrong number.");
      else
         System.out.println(n + " is not an Armstrong number.");
   }

   static int power(int n, int r) {
      int c, p = 1;

      for (c = 1; c = r; c++)
         p = p*n;

      return p;
   }</pre>
}]]>
    </string>

     <string name="output12">

    </string>

     <string name="output13">

    </string>

     <string name="output14">

    </string>

     <string name="output15">

    </string>

     <string name="output16">

    </string>

     <string name="output17">

    </string>


     <string name="output18">

    </string>

     <string name="output19">

    </string>

     <string name="output20">

    </string>
    <string name="program_pattern">Pattern Program</string>

    <string name="ex1a">
         <![CDATA[
   Write, compile, and test a class that displays the word Java on the screen.
Compose each large letter using the appropriate characters J, A, V, and A. Save the class as <b>BigJavaWord.java</b>.
    ]]>
    </string>

     <string name="ex1d">
         <![CDATA[
 Write, compile, and test a class that displays the  pattern of
  table and chairs on the screen. Save the class as <b>TableAndChair.java</b>.
    ]]>
    </string>

         <string name="ex1e">
         <![CDATA[
Write, compile, and test a class that displays at least four lines of your favorite song.
  Save the class as <b>FavoriteSong.java</b>.
    ]]>
    </string>

         <string name="ex1f">
         <![CDATA[
Find a classic Burma Shave rhyme on the Web. Write, compile, and test a class
  that produces a series of four dialog boxes so that each displays one  line of a
  Burma Shave slogan in turn. Save the class as <b>BurmaShave.java</b>.
    ]]>
    </string>

           <string name="ex2a">
         <![CDATA[
 Write a class that calculates and displays the conversion of an entered number of dollars
  into currency denominations—20s, 10s, 5s, and 1s. Save the class as <b>Dollars.java</b>.
    ]]>
    </string>

      <string name="ex2b">
         <![CDATA[
Meadowdale Dairy Farm sells organic brown eggs to local customers. They charge
 $3.25 for a dozen eggs, or 45 cents for individual eggs that are not part of a dozen.
 Write a class that prompts a user for the number of eggs in the order and then
 display the amount owed with a full explanation. For example, typical output might
 be, “You ordered 27 eggs. That’s 2 dozen at $3.25 per dozen and 3 loose eggs at 45.0
  cents each for a total of $7.85.” Save the class as <b>Eggs.java</b>.
    ]]>
    </string>

       <string name="ex2c">
         <![CDATA[
    Write a class that declares a variable named inches that holds a length in inches,
 and assign a value. Display the value in feet and inches; for example, 86 inches
 becomes 7 feet and 2 inches. Be sure to use a named constant where appropriate.
 Save the class as <b>InchesToFeet.java</b>.
    ]]>
    </string>

       <string name="ex2d">
         <![CDATA[
  Write an interactive version of the InchesToFeet class that accepts the inches
 value from a user. Save the class as <b>InchesToFeetInteractive.java</b>.    ]]>
    </string>

       <string name="ex2e">
         <![CDATA[
  Convert the MilesToFeet class to an interactive application. Instead of assigning
  a value to the distance, accept the value from the user as input. Save the revised
  class as <b>MilesToFeetInteractive.java</b>.
    ]]>
    </string>

       <string name="ex2f" formatted="false">
         <![CDATA[
    Travel Tickets Company sells tickets for airlines, tours, and other travel-related services. Because ticket agents
  frequently mistype long ticket numbers, Travel Tickets has asked you to write an application that indicates invalid
  ticket number entries. The class prompts a ticket agent to enter a six-digit ticket number. Ticket numbers are
  designed so that if you drop the last digit of the number, then divide the number by 7, the remainder of the
  division will be identical to the last dropped digit.  This process is illustrated in the following example:<br>

  Accept the ticket number from the agent and verify whether it is a valid number.<br>
  Test the application with the following ticket numbers:<br>
  l 123454; the comparison should evaluate to true<br>
  l 147103; the comparison should evaluate to true<br>
  l 154123; the comparison should evaluate to false<br>
  Save the program as <b>TicketNumber.java</b>.<br>

  Step 1 Enter the ticket number; for example, 123454.<br>
  Step 2 Remove the last digit, leaving 12345.<br>
 Step 3 Determine the remainder when the ticket number is divided by 7. In this  case, 12345 divided by 7 leaves a
 remainder of 4.<br>
 Step 4 Assign the Boolean value of the comparison between the remainder and the digit dropped from a ticket number.
 Step 5 Display the result&mdash;true or false&mdash;in a message box.<br>
    ]]>
    </string>


 <string name="ex3a" formatted="false">
         <![CDATA[
         Create an application named ArithmeticMethods whose main() method holds
  two integer variables. Assign values to the variables. In turn, pass each
  value to methods named displayNumberPlus10(), displayNumberPlus100(), and
  displayNumberPlus1000(). Create each method to perform the task its name
  implies. Save the application as <b>ArithmeticMethods.java</b>.
    ]]>
    </string>

     <string name="ex3b" formatted="false">
         <![CDATA[
       When gasoline is $100 per barrel, then the consumer’s price at the pump is between $3.50
  and $4.00 per gallon. Create a class named GasPrices. Its main() method holds an integer
  variable named pricePerBarrel to which you will assign a value entered by a user at the
  keyboard.<br>
  Create a method to which you pass pricePerBarrel. The method displays the range of possible
  prices per gallon. For example, if gas is $120 per barrel, then the price at the pump should
  be between $4.20 and $4.80. Save the application as <b>GasPrices.java</b>.
    ]]>
    </string>


        <string name="ex3c" formatted="false">
         <![CDATA[
      Write an application that calculates and displays the amount of money a user would
  have if his or her money could be invested at 5 percent interest for one year. Create a
  method that prompts the user for the starting value of the investment and returns it
  to the calling program. Call a separate method to do the calculation, and return the
  result to be displayed. Save the program as <b>Interest.java</b>.
    ]]>
    </string>


        <string name="ex3d" formatted="false">
         <![CDATA[
      There are 2.54 centimeters in an inch, and there are 3.7854 liters in a U.S. gallon.
  Create a class named MetricConversion. Its main() method accepts an integer value
  from a user at the keyboard, and in turn passes the entered value to two methods.
  One converts the value from inches to centimeters and the other converts the same
  value from gallons to liters. Each method displays the results with appropriate
  explanation. Save the application as <b>MetricConversion.java</b>.
    ]]>
    </string>

            <string name="ex3e" formatted="false">
         <![CDATA[
     Create an application named Percentages whose main() method holds two double
 variables. Assign values to the variables. Pass both variables to a method named
 computePercent() that displays the two values and the value of the first number as a
 percentage of the second one. For example, if the numbers are 2.0 and 5.0, the method
 should display a statement similar to 2.0 is 40% of 5.0.  Then call the method a second
 time, passing the values in reverse order. Save the application as <b>Percentages.java</b>.
    ]]>
    </string>

                <string name="ex3f" formatted="false">
         <![CDATA[
   Create a class named Billing that includes three overloaded computeBill()
  methods for a photo book store.  When computeBill() receives a single
  parameter, it represents the price of one photo book ordered. Add 8%
  tax, and return the total due.  When computeBill() receives two parameters,
  they represent the price of a photo book and the quantity ordered. Multiply
  the two values, add 8% tax, and return the total due.  When computeBill()
  receives three parameters, they represent the price of a photo book, the
  quantity ordered, and a coupon value. Multiply the quantity and price,
  reduce the result by the coupon value, and then add 8% tax and return the
  total due.  Write a main() method that tests all three overloaded methods.
  Save the application as <b>Billing.java</b>.
    ]]>
    </string>

     <string name="ex4a" formatted="false">
         <![CDATA[
        Write an application that uses methods in the GregorianCalendar class to calculate
 the number of days from today until the end of the current year. Save the file as
 <b>YearEnd.java</b>.
    ]]>
    </string>

        <string name="ex4b" formatted="false">
         <![CDATA[
         Create an application named TestBloodData that demonstrates
         that each method works correctly. Save the application as <b>TestBloodData.java</b>.
    ]]>
    </string>

            <string name="ex4c" formatted="false">
         <![CDATA[
 Create a class named TestCircle whose main() method declares several
 Circle objects. Using the setRadius() method, assign one Circle a small
 radius value, and assign another a larger radius value. Do not assign a value to
 the radius of the third circle; instead, retain the value assigned at construction.
 Display all the values for all the Circle objects. Save the application as
 <b>TestCircle.java</b>.
    ]]>
    </string>

                <string name="ex4d" formatted="false">
         <![CDATA[
        Create a class named FormLetterWriter that includes two overloaded methods
 named displaySalutation(). The first method takes one String parameter that
 represents a customer’s last name, and it displays the salutation “Dear Mr. or Ms.”
 followed by the last name. The second method accepts two String parameters that
 represent a first and last name, and it displays the greeting “Dear” followed by the first
 name, a space, and the last name. After each salutation, display the rest of a short
 business letter: “Thank you for your recent order.” Write a main() method that tests
 each overloaded method. Save the file as <b>FormLetterWriter.java</b>.

    ]]>
    </string>

                <string name="ex4e" formatted="false">
         <![CDATA[
Write a Java application that uses the Math class to determine the answers for each of
the following: <br>
 a. The square root of 37<br>
 b. The sine and cosine of 300 <br>
 c. The value of the floor, ceiling, and round of 22.8 <br>
 d. The larger and the smaller of the character “D” and the integer 71 <br>
 e. A random number between 0 and 20 (Hint: The random() method returns a <br>
 value between 0 and 1; you want a number that is 20 times larger.) <br>
    ]]>
    </string>

                <string name="ex4f" formatted="false">
         <![CDATA[
            Write an application that uses methods in the GregorianCalendar class to
 calculate how many days are left until the first day of next month. Save the file as
 <b>NextMonth.java</b>.
    ]]>
    </string>

        <string name="ex5a" formatted="false">
         <![CDATA[
    Write a simple coffe ordering machine. Output should look like this:
    ]]>
    </string>

    <string name="ex5b" formatted="false">
    <![CDATA[
         Write an application for the Summerdale Condo Sales office; the program
 determines the price of a condominium. Ask the user to choose 1 for park view,
 2 for golf course view, or 3 for lake view.
 The output is the name of the chosen view as well as the price of the condo.
 Park view condos are $150,000,
 condos with golf course views are $170,000,
 and condos with lake views are $210,000.
 If the user enters an invalid code, set the price to 0. Save the file as <b>CondoSales.java</b>.
    ]]>
    </string>

            <string name="ex5c" formatted="false">
         <![CDATA[
            Add a prompt to the CondoSales application to ask the user to specify a
 (1) garage or a (2) parking space, but only if the condo view selection
 is valid. Add $5,000 to the price of any condo with a garage. If the parking
  value is invalid, display an appropriate message and assume that the price
 is for a condo with no garage. Save the file as <b>CondoSales2.java</b>.
    ]]>
    </string>

                <string name="ex5d" formatted="false">
         <![CDATA[
        Write an application that asks a user to enter an integer. Display a
 statement that indicates whether the integer is even or odd. Save the
 file as <b>EvenOdd.java</b>.
    ]]>
    </string>

                <string name="ex5e" formatted="false">
         <![CDATA[
         The Williamsburg Women’s Club offers scholarships to local high school
 students who meet any of several criteria. Write an application that prompts
  the user for a student’s numeric high school grade point average (for example,
  3.2), the student’s number of extracurricular activities, and the student’s
  number of service activities.
  <br>
  Display the message “Scholarship candidate” if
  the student has any of the following:<br>
  1.  A grade point average of 3.8 or above and at least one extracurricular
  activity and one service activity.
  <br>
  2. A grade point average below 3.8 but at least 3.4 and a total of at least
  three extracurricular and service activities.
 <br>
  3. A grade point average below 3.4 but at least 3.0 and at least two
  extracurricular activities and three service activities.<br>
  If the student does not meet any of the qualification criteria, display
 “Not a candidate.” Save the file as <b>Scholarship.java</b>.
    ]]>
    </string>

  <string name="ex5f" formatted="false">
         <![CDATA[
        Modify the Scholarship application so that if a user enters a
  grade point average under 0 or over 4.0, or a negative value
  for either of the activities, an error message appears.
  Save the file as <b>Scholarship2.java</b>.
    ]]>
    </string>


        <string name="ex6a" formatted="false">
         <![CDATA[
         <font color=#606060>(Math: pentagonal numbers)</font><br>
          A pentagonal number is defined as n(3n–1)/2 for
        n = 1, 2, . . ., and so on. Therefore, the first few numbers are 1, 5, 12, 22, . . . .
        Write a method with the following header that returns a pentagonal number: Save the class as
        <b>Pentagon.java</b>.
    ]]>
    </string>

    <string name="ex6b" formatted="false">
    <![CDATA[
    For example, <font color=#606060>sumDigits(234)</font> returns 9 (2 + 3 + 4). <br><br>
    <i>(Hint: Use the % operator to extract digits, and the / operator to remove the extracted digit. For instance,
    to extract 4 from 234, use 234 % 10 (= 4). To remove 4 from 234, use 234 / 10
    (= 23).</i><br><br>
    Use a loop to repeatedly extract and remove the digit until all the digits
    are extracted. Write a test program that prompts the user to enter an integer and
    displays the sum of all its digits. Save the class as <b>SumDigits.java</b>.
    ]]>
    </string>

            <string name="ex6c" formatted="false">
         <![CDATA[
        <font color=#606060>(Financial application: print a tax table)</font>
         Listing 3.5 gives a program to compute tax. Write a method for computing tax using the following header:<br><br>
public static double computeTax(int status, double taxableIncome)<br><br>
Use this method to write a program that prints a tax table for taxable income from
$50,000 to $60,000 with intervals of $50 for all the following statuses:
    ]]>
    </string>

                <string name="ex6d" formatted="false">
         <![CDATA[
       <font color=#606060> (Count the letters in a string)</font> Write a method that counts the number of letters in
    a string using the following header:<br><br>
    public static int countLetters(String s)<br><br>
    Write a test program that prompts the user to enter a string and displays the number
    of letters in the string.
    ]]>
    </string>

                <string name="ex6e" formatted="false">
         <![CDATA[
         The international standard letter/number mapping for telephones
    is shown in Programming Exercise 4.15. Write a method that returns a number,
    given an uppercase letter, as follows:<br><br>
int getNumber(char uppercaseLetter)<br><br>
Write a test program that prompts the user to enter a phone number as a string.
The input number may contain letters. The program translates a letter (uppercase
or lowercase) to a digit and leaves all other characters intact.
    ]]>
    </string>

                <string name="ex6f" formatted="false">
         <![CDATA[
<font color=#606060>(Math: approximate the square root)</font><br> There are several techniques for implementing
the sqrt method in the Math class. One such technique is known as the
Babylonian method. It approximates the square root of a number, n, by repeatedly
performing a calculation using the following formula:<br><br>
 nextGuess = (lastGuess + n / lastGuess) / 2<br><br>
When nextGuess and lastGuess are almost identical, nextGuess is the
approximated square root. The initial guess can be any positive value (e.g., 1).
This value will be the starting value for lastGuess. If the difference between
nextGuess and lastGuess is less than a very small number, such as 0.0001,
you can claim that nextGuess is the approximated square root of n. If not, next-
Guess becomes lastGuess and the approximation process continues. Implement
the following method that returns the square root of n.
public static double sqrt(long n)
    ]]>
    </string>


        <string name="ex7a" formatted="false">
         <![CDATA[
        <font color=#606060>(Assign grades)</font><br>
         Write a program that reads student scores, gets the best score,
and then assigns grades based on the following scheme:
Grade is A if score is >= best - 10;<br>
Grade is B if score is >= best - 20;<br>
Grade is C if score is >= best - 30;<br>
Grade is D if score is >= best - 40;<br>
Grade is F otherwise.<br>
The program prompts the user to enter the total number of students, then prompts
the user to enter all of the scores, and concludes by displaying the grades. Here
is a sample run:
    ]]>
    </string>

    <string name="ex7b" formatted="false">
    <![CDATA[
     <font color=#606060>(Print distinct numbers)</font><br>
         Write a program that reads in ten numbers and displays
    the number of distinct numbers and the distinct numbers separated by exactly one
    space (i.e., if a number appears multiple times, it is displayed only once).<br><br>
     <i>(Hint Read a number and store it to an array if it is new. If the number is already in the
    array, ignore it.) After the input, the array contains the distinct numbers.</i>
    ]]>
    </string>

            <string name="ex7c" formatted="false">
         <![CDATA[
<font color=#606060>(Sort students)</font><br>
 Write a program that prompts the user to enter the number of
students, the students’ names, and their scores, and prints student names in
decreasing order of their scores.
    ]]>
    </string>

                <string name="ex7d" formatted="false">
         <![CDATA[
        <font color=#606060>(Simulation: coupon collector’s problem)</font><br>
         Coupon collector is a classic statistics problem with many practical applications. The problem is to pick
objects from a set of objects repeatedly and find out how many picks are
needed for all the objects to be picked at least once. A variation of the
problem is to pick cards from a shuffled deck of 52 cards repeatedly and find
out how many picks are needed before you see one of each suit. Assume a picked
card is placed back in the deck before picking another. Write a program to
simulate the number of picks needed to get four cards from each suit and
display the four cards picked (it is possible acard may be picked twice).
    ]]>
    </string>

                <string name="ex7e" formatted="false">
         <![CDATA[
        <font color=#606060>(Culture: Chinese Zodiac)</font><br>
         Simplify Listing 3.9 using an array of strings to store the animal names.
    ]]>
    </string>

                <string name="ex7f" formatted="false">
         <![CDATA[
<font color=#606060>(Game: hangman)</font>
<br> Write a hangman game that randomly generates a word and
prompts the user to guess one letter at a time, as shown in the sample run.    *
Each letter in the word is displayed as an asterisk. When the user makes a
correct guess, the actual letter is then displayed. When the user finishes a
word, display the number of misses and ask the user whether to continue to
play with another word. Declare an array to store words, as follows:
    ]]>
    </string>


        <string name="ex8a" formatted="false">
         <![CDATA[
        <font color=#606060>(Sum elements column by column)</font><br> Write a method that returns the sum of all the
 elements in a specified column in a matrix using the following header:
 public static double sumColumn(double[][] m, int columnIndex)
 Write a test program that reads a 3-by-4 matrix and displays the sum of each
 column.
    ]]>
    </string>

    <string name="ex8b" formatted="false">
    <![CDATA[
  <font color=#606060>(Sum the major diagonal in a matrix)</font><br> Write a method that sums all the numbers
in the major diagonal in an n * n matrix of double values using the following
header:<br><br>
 public static double sumMajorDiagonal(double[][] m)    <br><br>
 Write a test program that reads a 4-by-4 matrix and displays the sum of all
 its elements on the major diagonal.
    ]]>
    </string>

            <string name="ex8c" formatted="false">
         <![CDATA[
  <font color=#606060>(Sort students on grades)</font><br> Rewrite Listing 8.2, GradeExam.java, to display the  *
students in increasing order of the number of correct answers.
    ]]>
    </string>

                <string name="ex8d" formatted="false">
         <![CDATA[
  <font color=#606060>(Algebra: add two matrices)</font><br> Write a method to add two matrices. The header of
the method is as follows:   <br><br>                                                                                                                                  *
public static double[][] addMatrix(double[][] a, double[][] b)    <br><br>
In order to be added, the two matrices must have the same dimensions and the
same or compatible types of elements. Let c be the resulting matrix. Each
element cij is aij + bij.
Write a test program that prompts the user to enter two 3 * 3 matrices and
displays their sum.
    ]]>
    </string>

                <string name="ex8e" formatted="false">
         <![CDATA[
  <font color=#606060>Algebra: multiply two matrices)</font><br>
   Write a method to multiply two matrices. The header of the method is: <br><br>
 public static double[][] multiplyMatrix(double[][] a, double[][] b)<br><br>
 To multiply matrix a by matrix b, the number of columns in a must be the same
 as the number of rows in b, and the two matrices must have elements of the same
 or compatible types. Let c be the result of the multiplication. Assume the
 column size of matrix a is n. Each element cij is ai1 * b1j + ai2 * b2j +
 + ain * bnj.
 Write a test program that prompts the user to enter two 3 * 3 matrices and
 displays their product.
    ]]>
    </string>

                <string name="ex8f" formatted="false">
         <![CDATA[
          <font color=#606060> (Points nearest to each other)</font><br> Listing 8.3 gives a program that finds two      *
 points in a two-dimensional space nearest to each other. Revise the program so
 that it finds two points in a three-dimensional space nearest to each other.
 Use a two-dimensional array to represent the points. Test the program using
 the following points:<br><br>
 double[][] points = {{-1, 0, 3}, {-1, -1, -1}, {4, 1, 1},
 {2, 0.5, 9}, {3.5, 2, -1}, {3, 1.5, 3}, {-1.5, 4, 2},
 {5.5, 4, -0.5}};<br><br>
 The formula for computing the distance between two points (x1, y1, z1) and
 (x2, y2, z2) is √(x2 - x1)^2 + (y2 - y1)^2 + (z2 - z1)^2.
    ]]>
    </string>

        <string name="ex9a" formatted="false">
         <![CDATA[
          <font color=#606060> (The Rectangle class) </font><br>
           Following the example of the Circle class in Section 9.2,
 design a class named Rectangle to represent a rectangle. The class contains:<br>

 ■ Two double data fields named width and height that specify the width and
 height of the rectangle. The default values are 1 for both width and height.<br>
 ■ A no-arg constructor that creates a default rectangle.<br>
 ■ A constructor that creates a rectangle with the specified width and height. <br>
 ■ A method named getArea() that returns the area of this rectangle.<br>
 ■ A method named getPerimeter() that returns the perimeter.<br>
    ]]>
    </string>

    <string name="ex9b" formatted="false">
    <![CDATA[
          <font color=#606060>(The Stock class)</font><br>
           Following the example of the Circle class in Section 9.2,
            design a class named Stock that contains:<br>

 ■ A string data field named symbol for the stock’s symbol.<br>
 ■ A string data field named name for the stock’s name.<br>
 ■ A double data field named previousClosingPrice that stores the stock
   price for the previous day.    <br>
 ■ A double data field named currentPrice that stores the stock price for the
   current time. <br>
 ■ A constructor that creates a stock with the specified symbol and name.  <br>
 ■ A method named getChangePercent() that returns the percentage changed from
   previousClosingPrice to currentPrice.
    ]]>
    </string>

            <string name="ex9c" formatted="false">
         <![CDATA[
          <font color=#606060> (Use the Date class)</font><br>
          Write a program that creates a Date object, sets its
elapsedtime to 10000, 100000, 1000000, 10000000, 100000000, 1000000000,
 10000000000, and 100000000000, and displays the date and time using the
 toString() method, respectively.
    ]]>
    </string>

                <string name="ex9e" formatted="false">
         <![CDATA[
              <font color=#606060>(Use the GregorianCalendar class)</font><br>
               Java API has the GregorianCalendar class in
               the java.util package, which you can use to obtain the year, month, and day of
 a date. The no-arg constructor constructs an instance for the current date,
 and the methods get(GregorianCalendar.YEAR), get(GregorianCalendar.MONTH), and
 get(GregorianCalendar.DAY_OF_MONTH) return the year, month, and day.
 Write a program to perform two tasks:<br><br>
               <br>
 ■ Display the current year, month, and day.  <br>
 ■ The GregorianCalendar class has the setTimeInMillis(long), which can be used
 to set a specified elapsed time since January 1, 1970. Set the value to
 1234567898765L and display the year, month, and day.
    <br>]]>
    </string>

                <string name="ex9d" formatted="false">
         <![CDATA[
          <font color=#606060>
          (Use the Random class)</font><br>
           Write a program that creates a Random object with seed
 1000 and displays the first 50 random integers between 0 and 100 using the
 nextInt(100) method.
    ]]>
    </string>

                <string name="ex9f" formatted="false">
         <![CDATA[
              <font color=#606060>The Account class)</font><br> Design a class named Account that contains:
<br><br>
 ■ A private int data field named id for the account (default 0).<br>
 ■ A private double data field named balance for the account (default 0).<br>
 ■ A private double data field named annualInterestRate that stores the current
   interest rate (default 0). Assume all accounts have the same interest rate.<br>
 ■ A private Date data field named dateCreated that stores the date when the
   account was created.<br>
 ■ A no-arg constructor that creates a default account.<br>
 ■ A constructor that creates an account with the specified id and initial
   balance.                                         <br>
 ■ The accessor and mutator methods for id, balance, and annualInterestRate.<br>
 ■ The accessor method for dateCreated.                 <br>
 ■ A method named getMonthlyInterestRate() that returns the monthly
   interest rate.                                           <br>
 ■ A method named getMonthlyInterest() that returns the monthly interest.<br>
 ■ A method named withdraw that withdraws a specified amount from the
   account.       <br>
 ■ A method named deposit that deposits a specified amount to the account.
    ]]>
    </string>

        <string name="ex10a" formatted="false">
         <![CDATA[
              <font color=#606060>(The Time class)</font><br> Design a class named Time. The class contains: <br>
 ■ The data fields hour, minute, and second that represent a time.<br>
 ■ A no-arg constructor that creates a Time object for the current time. (The
   values of the data fields will represent the current time.)<br>
 ■ A constructor that constructs a Time object with a specified elapsed time
   since midnight, January 1, 1970, in milliseconds. (The values of the data
   fields will represent this time.)<br>
 ■ A constructor that constructs a Time object with the specified hour, minute,
   and second.<br>
 ■ Three getter methods for the data fields hour, minute, and second,
   respectively.<br>
 ■ A method named setTime(long elapseTime) that sets a new time
   for the object using the elapsed time. For example, if the elapsed time is
   555550000 milliseconds, the hour is 10, the minute is 19, and the second is
   10.

    ]]>
    </string>

    <string name="ex10b" formatted="false">
    <![CDATA[
              <font color=#606060>(The BMI class)</font><br>
               Add the following new constructor in the BMI class:
 Construct a BMI with the specified name, age, weight,
feet, and inches.
    ]]>
    </string>

            <string name="ex10c" formatted="false">
         <![CDATA[
              <font color=#606060>The MyInteger class)</font><br>
               Design a class named MyInteger. The class contains:<br>
 ■ An int data field named value that stores the int value represented by this
   object.    <br>
 ■ A constructor that creates a MyInteger object for the specified int value.<br>
 ■ A getter method that returns the int value.   <br>
 ■ The methods isEven(), isOdd(), and isPrime() that return true if the
   value in this object is even, odd, or prime, respectively. <br>
 ■ The static methods isEven(int), isOdd(int), and isPrime(int) that
   return true if the specified value is even, odd, or prime, respectively.<br>
 ■ The static methods isEven(MyInteger), isOdd(MyInteger), and
   isPrime(MyInteger) that return true if the specified value is even, odd,
   or prime, respectively.                  <br>
 ■ The methods equals(int) and equals(MyInteger) that return true if
   the value in this object is equal to the specified value.   <br>
 ■ A static method parseInt(char[]) that converts an array of numeric
   characters to an int value.     <br>
 ■ A static method parseInt(String) that converts a string into an int
   value.
    ]]>
    </string>

                <string name="ex10d" formatted="false">
         <![CDATA[
              <font color=#606060>The MyPoint class)</font><br>
               Design a class named MyPoint to represent a point with x- and y-coordinates. The class contains:<br>
 ■ The data fields x and y that represent the coordinates with getter
   methods.     <br>
 ■ A no-arg constructor that creates a point (0, 0).   <br>
 ■ A constructor that constructs a point with specified coordinates.   <br>
 ■ A method named distance that returns the distance from this point to a
   specified point of the MyPoint type.        <br>
 ■ A method named distance that returns the distance from this point to
   another point with specified x- and y-coordinates.
    ]]>
    </string>

                <string name="ex10e" formatted="false">
         <![CDATA[
              <font color=#606060>(Displaying the prime factors)</font><br>
               Write a program that prompts the user to enter a positive integer and displays all its smallest factors in decreasing order.  *
 For example, if the integer is 120, the smallest factors are displayed as
 5, 3, 2, 2, 2. Use the StackOfIntegers class to store the factors
 (e.g., 2, 2, 2, 3, 5) and retrieve and display them in reverse order.
    ]]>
    </string>

                <string name="ex10f" formatted="false">
         <![CDATA[
          <font color=#606060>(Financial: the Tax class)</font><br> Programming Exercise 8.12 writes a program for      *
 computing taxes using arrays. Design a class named Tax to contain the
 following instance data fields:  <br>

 ■ int filingStatus: One of the four tax-filing statuses: 0—single filer, 1—
 	 married filing jointly or qualifying widow(er), 2—married filing separately,
 	 and 3—head of household. Use the public static constants SINGLE_FILER
 	 (0), MARRIED_JOINTLY_OR_QUALIFYING_WIDOW(ER) (1), MARRIED_
 	 SEPARATELY (2), HEAD_OF_HOUSEHOLD (3) to represent the statuses. <br>
 ■ int[][] brackets: Stores the tax brackets for each filing status.<br>
 ■ double[] rates: Stores the tax rates for each bracket.  <br>
 ■ double taxableIncome: Stores the taxable income. <br>
 Provide the getter and setter methods for each data field and the getTax()
 method that returns the tax. Also provide a no-arg constructor and the
 constructor Tax(filingStatus, brackets, rates, taxableIncome).

    ]]>
    </string>

</resources>
